import { PrismaClient } from "@prisma/client";
export declare const prisma: PrismaClient<{
    log: ("error" | "query" | "warn")[];
}, never, import("@prisma/client/runtime/library").DefaultArgs>;
export declare const userRepository: {
    findById: (id: string) => import(".prisma/client").Prisma.Prisma__UserClient<{
        name: string | null;
        email: string;
        password: string;
        organization: string | null;
        department: string | null;
        phone: string | null;
        role: import(".prisma/client").$Enums.UserRole;
        id: string;
        emailVerified: Date | null;
        image: string | null;
        createdAt: Date;
        updatedAt: Date;
    } | null, null, import("@prisma/client/runtime/library").DefaultArgs, {
        log: ("error" | "query" | "warn")[];
    }>;
    findByEmail: (email: string) => import(".prisma/client").Prisma.Prisma__UserClient<{
        name: string | null;
        email: string;
        password: string;
        organization: string | null;
        department: string | null;
        phone: string | null;
        role: import(".prisma/client").$Enums.UserRole;
        id: string;
        emailVerified: Date | null;
        image: string | null;
        createdAt: Date;
        updatedAt: Date;
    } | null, null, import("@prisma/client/runtime/library").DefaultArgs, {
        log: ("error" | "query" | "warn")[];
    }>;
    create: (data: any) => import(".prisma/client").Prisma.Prisma__UserClient<{
        name: string | null;
        email: string;
        password: string;
        organization: string | null;
        department: string | null;
        phone: string | null;
        role: import(".prisma/client").$Enums.UserRole;
        id: string;
        emailVerified: Date | null;
        image: string | null;
        createdAt: Date;
        updatedAt: Date;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, {
        log: ("error" | "query" | "warn")[];
    }>;
    update: (id: string, data: any) => import(".prisma/client").Prisma.Prisma__UserClient<{
        name: string | null;
        email: string;
        password: string;
        organization: string | null;
        department: string | null;
        phone: string | null;
        role: import(".prisma/client").$Enums.UserRole;
        id: string;
        emailVerified: Date | null;
        image: string | null;
        createdAt: Date;
        updatedAt: Date;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, {
        log: ("error" | "query" | "warn")[];
    }>;
    delete: (id: string) => import(".prisma/client").Prisma.Prisma__UserClient<{
        name: string | null;
        email: string;
        password: string;
        organization: string | null;
        department: string | null;
        phone: string | null;
        role: import(".prisma/client").$Enums.UserRole;
        id: string;
        emailVerified: Date | null;
        image: string | null;
        createdAt: Date;
        updatedAt: Date;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, {
        log: ("error" | "query" | "warn")[];
    }>;
    findAll: (params: {
        skip?: number;
        take?: number;
        where?: any;
    }) => import(".prisma/client").Prisma.PrismaPromise<{
        name: string | null;
        email: string;
        password: string;
        organization: string | null;
        department: string | null;
        phone: string | null;
        role: import(".prisma/client").$Enums.UserRole;
        id: string;
        emailVerified: Date | null;
        image: string | null;
        createdAt: Date;
        updatedAt: Date;
    }[]>;
};
export declare const metadataRepository: {
    findById: (id: string) => import(".prisma/client").Prisma.Prisma__MetadataClient<{
        email: string;
        organization: string;
        department: string | null;
        userId: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        title: string;
        author: string;
        dateFrom: string;
        dateTo: string;
        abstract: string;
        purpose: string;
        thumbnailUrl: string;
        imageName: string;
        frameworkType: string;
        categories: string[];
        coordinateSystem: string;
        projection: string;
        scale: number;
        resolution: string | null;
        accuracyLevel: string;
        completeness: number | null;
        consistencyCheck: boolean | null;
        validationStatus: string | null;
        fileFormat: string;
        fileSize: number | null;
        numFeatures: number | null;
        softwareReqs: string | null;
        updateCycle: string | null;
        lastUpdate: Date | null;
        nextUpdate: Date | null;
        distributionFormat: string;
        accessMethod: string;
        downloadUrl: string | null;
        apiEndpoint: string | null;
        licenseType: string;
        usageTerms: string;
        attributionRequirements: string;
        accessRestrictions: string[];
        contactPerson: string;
    } | null, null, import("@prisma/client/runtime/library").DefaultArgs, {
        log: ("error" | "query" | "warn")[];
    }>;
    create: (data: any) => import(".prisma/client").Prisma.Prisma__MetadataClient<{
        email: string;
        organization: string;
        department: string | null;
        userId: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        title: string;
        author: string;
        dateFrom: string;
        dateTo: string;
        abstract: string;
        purpose: string;
        thumbnailUrl: string;
        imageName: string;
        frameworkType: string;
        categories: string[];
        coordinateSystem: string;
        projection: string;
        scale: number;
        resolution: string | null;
        accuracyLevel: string;
        completeness: number | null;
        consistencyCheck: boolean | null;
        validationStatus: string | null;
        fileFormat: string;
        fileSize: number | null;
        numFeatures: number | null;
        softwareReqs: string | null;
        updateCycle: string | null;
        lastUpdate: Date | null;
        nextUpdate: Date | null;
        distributionFormat: string;
        accessMethod: string;
        downloadUrl: string | null;
        apiEndpoint: string | null;
        licenseType: string;
        usageTerms: string;
        attributionRequirements: string;
        accessRestrictions: string[];
        contactPerson: string;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, {
        log: ("error" | "query" | "warn")[];
    }>;
    update: (id: string, data: any) => import(".prisma/client").Prisma.Prisma__MetadataClient<{
        email: string;
        organization: string;
        department: string | null;
        userId: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        title: string;
        author: string;
        dateFrom: string;
        dateTo: string;
        abstract: string;
        purpose: string;
        thumbnailUrl: string;
        imageName: string;
        frameworkType: string;
        categories: string[];
        coordinateSystem: string;
        projection: string;
        scale: number;
        resolution: string | null;
        accuracyLevel: string;
        completeness: number | null;
        consistencyCheck: boolean | null;
        validationStatus: string | null;
        fileFormat: string;
        fileSize: number | null;
        numFeatures: number | null;
        softwareReqs: string | null;
        updateCycle: string | null;
        lastUpdate: Date | null;
        nextUpdate: Date | null;
        distributionFormat: string;
        accessMethod: string;
        downloadUrl: string | null;
        apiEndpoint: string | null;
        licenseType: string;
        usageTerms: string;
        attributionRequirements: string;
        accessRestrictions: string[];
        contactPerson: string;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, {
        log: ("error" | "query" | "warn")[];
    }>;
    delete: (id: string) => import(".prisma/client").Prisma.Prisma__MetadataClient<{
        email: string;
        organization: string;
        department: string | null;
        userId: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        title: string;
        author: string;
        dateFrom: string;
        dateTo: string;
        abstract: string;
        purpose: string;
        thumbnailUrl: string;
        imageName: string;
        frameworkType: string;
        categories: string[];
        coordinateSystem: string;
        projection: string;
        scale: number;
        resolution: string | null;
        accuracyLevel: string;
        completeness: number | null;
        consistencyCheck: boolean | null;
        validationStatus: string | null;
        fileFormat: string;
        fileSize: number | null;
        numFeatures: number | null;
        softwareReqs: string | null;
        updateCycle: string | null;
        lastUpdate: Date | null;
        nextUpdate: Date | null;
        distributionFormat: string;
        accessMethod: string;
        downloadUrl: string | null;
        apiEndpoint: string | null;
        licenseType: string;
        usageTerms: string;
        attributionRequirements: string;
        accessRestrictions: string[];
        contactPerson: string;
    }, never, import("@prisma/client/runtime/library").DefaultArgs, {
        log: ("error" | "query" | "warn")[];
    }>;
    findByUserId: (userId: string, query: {
        skip?: number;
        take?: number;
    }) => import(".prisma/client").Prisma.PrismaPromise<{
        email: string;
        organization: string;
        department: string | null;
        userId: string;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        title: string;
        author: string;
        dateFrom: string;
        dateTo: string;
        abstract: string;
        purpose: string;
        thumbnailUrl: string;
        imageName: string;
        frameworkType: string;
        categories: string[];
        coordinateSystem: string;
        projection: string;
        scale: number;
        resolution: string | null;
        accuracyLevel: string;
        completeness: number | null;
        consistencyCheck: boolean | null;
        validationStatus: string | null;
        fileFormat: string;
        fileSize: number | null;
        numFeatures: number | null;
        softwareReqs: string | null;
        updateCycle: string | null;
        lastUpdate: Date | null;
        nextUpdate: Date | null;
        distributionFormat: string;
        accessMethod: string;
        downloadUrl: string | null;
        apiEndpoint: string | null;
        licenseType: string;
        usageTerms: string;
        attributionRequirements: string;
        accessRestrictions: string[];
        contactPerson: string;
    }[]>;
};
