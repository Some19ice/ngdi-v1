{"version":3,"sources":["../src/shared/prisma-client.ts","../src/lib/prisma.ts","../src/config/index.ts","../../../node_modules/crypto-js/core.js","../../../node_modules/crypto-js/enc-hex.js","../../../node_modules/crypto-js/sha1.js","../../../node_modules/@upstash/redis/chunk-56TVFNIH.mjs","../../../node_modules/@upstash/redis/nodejs.mjs","../src/services/redis.service.ts","../../../node_modules/@prisma/client/runtime/library.js","../../../node_modules/.prisma/client/index.js","../../../node_modules/.prisma/client/default.js","../../../node_modules/@prisma/client/default.js","../src/utils/permissions.ts","../src/index.ts","../src/routes/auth.routes.ts","../src/middleware/error-handler.ts","../src/types/error.types.ts","../src/utils/jwt.ts","../src/services/token-validation.service.ts","../src/services/security-log.service.ts","../src/services/auth.service.ts","../src/types/auth.types.ts","../src/utils/role-mapper.ts","../src/services/email.service.ts","../src/services/account-lockout.service.ts","../src/middleware/auth.middleware.ts","../src/utils/cookie.utils.ts","../src/middleware/rate-limit.middleware.ts","../src/middleware/csrf.ts","../src/routes/user.routes.ts","../src/services/user.service.ts","../src/utils/password.ts","../src/types/user.types.ts","../src/routes/metadata.routes.ts","../src/services/metadata.service.ts","../src/services/cache.service.ts","../src/types/metadata.types.ts","../src/utils/json-serializer.ts","../src/routes/search.routes.ts","../src/routes/admin.routes.ts","../src/db/client.ts","../src/db/repositories/user.repository.ts","../src/db/repositories/metadata.repository.ts","../src/services/admin.service.ts","../src/lib/logger.ts","../src/utils/cache.ts","../src/routes/permissions/index.ts","../src/middleware/validation.ts","../src/middleware/rate-limit.ts","../src/lib/redis.ts","../src/middleware/permission.middleware.ts","../src/constants/permissions.ts","../src/routes/roles/index.ts","../src/routes/user-permissions/index.ts","../src/routes/permission-groups/index.ts","../src/routes/activity-logs/index.ts"],"sourcesContent":["/**\n * Prisma client export that maintains compatibility with existing code\n * while using the shared Prisma client from the db package.\n *\n * This avoids schema duplication and ensures consistency across the application.\n */\n\n// Import the shared Prisma client from the db package\nimport { prisma } from \"@ngdi/db\"\n\n// Export the prisma client\nexport { prisma }\n\n// Connect to the database with better error handling\nconst connectWithRetry = async (retries = 5, delay = 2000) => {\n  let currentRetry = 0\n\n  while (currentRetry < retries) {\n    try {\n      await prisma.$connect()\n      console.log(\"API: Prisma connected successfully to the database\")\n      return true\n    } catch (error) {\n      currentRetry++\n      console.error(\n        `API: Prisma connection error (attempt ${currentRetry}/${retries}):`,\n        error\n      )\n\n      if (currentRetry >= retries) {\n        console.error(\n          \"API: Maximum connection retries reached. Using database in disconnected mode.\"\n        )\n        return false\n      }\n\n      console.log(`Retrying in ${delay}ms...`)\n      await new Promise((resolve) => setTimeout(resolve, delay))\n    }\n  }\n\n  return false\n}\n\n// Initialize connection\nconnectWithRetry().catch((error) => {\n  console.error(\"API: Failed to establish database connection:\", error)\n})\n","// Import from centralized Prisma client\nimport { prisma } from \"../shared/prisma-client\"\n\n// Re-export the client\nexport { prisma }\n","import { config as envConfig } from \"./env\"\nimport dotenv from \"dotenv\"\n\n// Load environment variables\ndotenv.config()\n\n/**\n * Application configuration\n */\nexport const config = {\n  env: process.env.NODE_ENV || \"development\",\n  port: parseInt(process.env.PORT || \"3001\", 10),\n\n  // Application info\n  appName: process.env.APP_NAME || \"NGDI Portal API\",\n  frontendUrl: process.env.FRONTEND_URL || \"http://localhost:3000\",\n\n  // Rate limiting configuration\n  rateLimit: {\n    // General API rate limit\n    standard: {\n      window: parseInt(process.env.RATE_LIMIT_WINDOW || \"60000\", 10), // 1 minute in milliseconds\n      max: parseInt(process.env.RATE_LIMIT_MAX || \"100\", 10), // 100 requests per minute\n    },\n    // Auth endpoints rate limit (stricter)\n    auth: {\n      window: parseInt(process.env.AUTH_RATE_LIMIT_WINDOW || \"60000\", 10), // 1 minute in milliseconds\n      max: parseInt(process.env.AUTH_RATE_LIMIT_MAX || \"10\", 10), // 10 requests per minute\n    },\n  },\n\n  // JWT configuration\n  jwt: {\n    secret: process.env.JWT_SECRET || \"your-default-secret-for-dev-only\",\n    refreshSecret:\n      process.env.REFRESH_TOKEN_SECRET ||\n      process.env.JWT_SECRET ||\n      \"your-default-secret-for-dev-only\",\n    expiresIn: process.env.JWT_EXPIRES_IN || \"1h\",\n    refreshExpiresIn: process.env.REFRESH_TOKEN_EXPIRES_IN || \"7d\",\n    issuer: process.env.JWT_ISSUER || \"ngdi-portal-api\",\n    audience: process.env.JWT_AUDIENCE || \"ngdi-portal-client\",\n  },\n\n  // CORS configuration\n  cors: {\n    origin: process.env.CORS_ORIGIN\n      ? process.env.CORS_ORIGIN.split(\",\")\n      : [\"http://localhost:3000\", \"http://127.0.0.1:3000\"],\n    methods: [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\", \"PATCH\"],\n    allowedHeaders: [\n      \"Content-Type\",\n      \"Authorization\",\n      \"X-Request-ID\",\n      \"X-Client-Version\",\n      \"X-Client-Platform\",\n    ],\n    credentials: true, // Allow cookies to be sent with requests\n  },\n\n  // Database configuration\n  database: {\n    url:\n      process.env.DATABASE_URL ||\n      \"postgresql://postgres:postgres@localhost:5432/myapp\",\n  },\n\n  // Supabase configuration\n  supabase: {\n    url: process.env.SUPABASE_URL || \"\",\n    anonKey: process.env.SUPABASE_ANON_KEY || \"\",\n  },\n\n  // Logging\n  logging: {\n    level: process.env.LOG_LEVEL || \"info\",\n  },\n\n  server: {\n    host: process.env.HOST || \"localhost\",\n    nodeEnv: process.env.NODE_ENV || \"development\",\n  },\n  db: {\n    directUrl: process.env.DIRECT_URL,\n  },\n  corsOrigins: process.env.ALLOWED_ORIGINS?.split(\",\") || [\n    \"http://localhost:3000\",\n  ],\n  email: {\n    host: process.env.SMTP_HOST,\n    port: Number(process.env.SMTP_PORT) || 587,\n    user: process.env.SMTP_USER,\n    password: process.env.SMTP_PASSWORD,\n    from: process.env.EMAIL_FROM || \"noreply@example.com\",\n  },\n  logLevel: process.env.LOG_LEVEL || \"info\",\n  redis: {\n    url: process.env.REDIS_URL || \"redis://localhost:6379\",\n    token: process.env.REDIS_TOKEN || \"\",\n  },\n}\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS.enc.Hex;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// pkg/error.ts\nvar error_exports = {};\n__export(error_exports, {\n  UpstashError: () => UpstashError,\n  UrlError: () => UrlError\n});\nvar UpstashError = class extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"UpstashError\";\n  }\n};\nvar UrlError = class extends Error {\n  constructor(url) {\n    super(\n      `Upstash Redis client was passed an invalid URL. You should pass a URL starting with https. Received: \"${url}\". `\n    );\n    this.name = \"UrlError\";\n  }\n};\n\n// pkg/util.ts\nfunction parseRecursive(obj) {\n  const parsed = Array.isArray(obj) ? obj.map((o) => {\n    try {\n      return parseRecursive(o);\n    } catch {\n      return o;\n    }\n  }) : JSON.parse(obj);\n  if (typeof parsed === \"number\" && parsed.toString() !== obj) {\n    return obj;\n  }\n  return parsed;\n}\nfunction parseResponse(result) {\n  try {\n    return parseRecursive(result);\n  } catch {\n    return result;\n  }\n}\nfunction deserializeScanResponse(result) {\n  return [result[0], ...parseResponse(result.slice(1))];\n}\nfunction mergeHeaders(...headers) {\n  const merged = {};\n  for (const header of headers) {\n    if (!header) continue;\n    for (const [key, value] of Object.entries(header)) {\n      if (value !== void 0 && value !== null) {\n        merged[key] = value;\n      }\n    }\n  }\n  return merged;\n}\n\n// pkg/http.ts\nvar HttpClient = class {\n  baseUrl;\n  headers;\n  options;\n  readYourWrites;\n  upstashSyncToken = \"\";\n  hasCredentials;\n  retry;\n  constructor(config) {\n    this.options = {\n      backend: config.options?.backend,\n      agent: config.agent,\n      responseEncoding: config.responseEncoding ?? \"base64\",\n      // default to base64\n      cache: config.cache,\n      signal: config.signal,\n      keepAlive: config.keepAlive ?? true\n    };\n    this.upstashSyncToken = \"\";\n    this.readYourWrites = config.readYourWrites ?? true;\n    this.baseUrl = (config.baseUrl || \"\").replace(/\\/$/, \"\");\n    const urlRegex = /^https?:\\/\\/[^\\s#$./?].\\S*$/;\n    if (this.baseUrl && !urlRegex.test(this.baseUrl)) {\n      throw new UrlError(this.baseUrl);\n    }\n    this.headers = {\n      \"Content-Type\": \"application/json\",\n      ...config.headers\n    };\n    this.hasCredentials = Boolean(this.baseUrl && this.headers.authorization.split(\" \")[1]);\n    if (this.options.responseEncoding === \"base64\") {\n      this.headers[\"Upstash-Encoding\"] = \"base64\";\n    }\n    this.retry = typeof config.retry === \"boolean\" && !config.retry ? {\n      attempts: 1,\n      backoff: () => 0\n    } : {\n      attempts: config.retry?.retries ?? 5,\n      backoff: config.retry?.backoff ?? ((retryCount) => Math.exp(retryCount) * 50)\n    };\n  }\n  mergeTelemetry(telemetry) {\n    this.headers = merge(this.headers, \"Upstash-Telemetry-Runtime\", telemetry.runtime);\n    this.headers = merge(this.headers, \"Upstash-Telemetry-Platform\", telemetry.platform);\n    this.headers = merge(this.headers, \"Upstash-Telemetry-Sdk\", telemetry.sdk);\n  }\n  async request(req) {\n    const requestHeaders = mergeHeaders(this.headers, req.headers ?? {});\n    const requestUrl = [this.baseUrl, ...req.path ?? []].join(\"/\");\n    const isEventStream = requestHeaders.Accept === \"text/event-stream\";\n    const requestOptions = {\n      //@ts-expect-error this should throw due to bun regression\n      cache: this.options.cache,\n      method: \"POST\",\n      headers: requestHeaders,\n      body: JSON.stringify(req.body),\n      keepalive: this.options.keepAlive,\n      agent: this.options.agent,\n      signal: req.signal ?? this.options.signal,\n      /**\n       * Fastly specific\n       */\n      backend: this.options.backend\n    };\n    if (!this.hasCredentials) {\n      console.warn(\n        \"[Upstash Redis] Redis client was initialized without url or token. Failed to execute command.\"\n      );\n    }\n    if (this.readYourWrites) {\n      const newHeader = this.upstashSyncToken;\n      this.headers[\"upstash-sync-token\"] = newHeader;\n    }\n    let res = null;\n    let error = null;\n    for (let i = 0; i <= this.retry.attempts; i++) {\n      try {\n        res = await fetch(requestUrl, requestOptions);\n        break;\n      } catch (error_) {\n        if (this.options.signal?.aborted) {\n          const myBlob = new Blob([\n            JSON.stringify({ result: this.options.signal.reason ?? \"Aborted\" })\n          ]);\n          const myOptions = {\n            status: 200,\n            statusText: this.options.signal.reason ?? \"Aborted\"\n          };\n          res = new Response(myBlob, myOptions);\n          break;\n        }\n        error = error_;\n        if (i < this.retry.attempts) {\n          await new Promise((r) => setTimeout(r, this.retry.backoff(i)));\n        }\n      }\n    }\n    if (!res) {\n      throw error ?? new Error(\"Exhausted all retries\");\n    }\n    if (!res.ok) {\n      const body2 = await res.json();\n      throw new UpstashError(`${body2.error}, command was: ${JSON.stringify(req.body)}`);\n    }\n    if (this.readYourWrites) {\n      const headers = res.headers;\n      this.upstashSyncToken = headers.get(\"upstash-sync-token\") ?? \"\";\n    }\n    if (isEventStream && req && req.onMessage && res.body) {\n      const reader = res.body.getReader();\n      const decoder = new TextDecoder();\n      (async () => {\n        try {\n          while (true) {\n            const { value, done } = await reader.read();\n            if (done) break;\n            const chunk = decoder.decode(value);\n            const lines = chunk.split(\"\\n\");\n            for (const line of lines) {\n              if (line.startsWith(\"data: \")) {\n                const data = line.slice(6);\n                req.onMessage?.(data);\n              }\n            }\n          }\n        } catch (error2) {\n          if (error2 instanceof Error && error2.name === \"AbortError\") {\n          } else {\n            console.error(\"Stream reading error:\", error2);\n          }\n        } finally {\n          try {\n            await reader.cancel();\n          } catch {\n          }\n        }\n      })();\n      return { result: 1 };\n    }\n    const body = await res.json();\n    if (this.readYourWrites) {\n      const headers = res.headers;\n      this.upstashSyncToken = headers.get(\"upstash-sync-token\") ?? \"\";\n    }\n    if (this.options.responseEncoding === \"base64\") {\n      if (Array.isArray(body)) {\n        return body.map(({ result: result2, error: error2 }) => ({\n          result: decode(result2),\n          error: error2\n        }));\n      }\n      const result = decode(body.result);\n      return { result, error: body.error };\n    }\n    return body;\n  }\n};\nfunction base64decode(b64) {\n  let dec = \"\";\n  try {\n    const binString = atob(b64);\n    const size = binString.length;\n    const bytes = new Uint8Array(size);\n    for (let i = 0; i < size; i++) {\n      bytes[i] = binString.charCodeAt(i);\n    }\n    dec = new TextDecoder().decode(bytes);\n  } catch {\n    dec = b64;\n  }\n  return dec;\n}\nfunction decode(raw) {\n  let result = void 0;\n  switch (typeof raw) {\n    case \"undefined\": {\n      return raw;\n    }\n    case \"number\": {\n      result = raw;\n      break;\n    }\n    case \"object\": {\n      if (Array.isArray(raw)) {\n        result = raw.map(\n          (v) => typeof v === \"string\" ? base64decode(v) : Array.isArray(v) ? v.map((element) => decode(element)) : v\n        );\n      } else {\n        result = null;\n      }\n      break;\n    }\n    case \"string\": {\n      result = raw === \"OK\" ? \"OK\" : base64decode(raw);\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n  return result;\n}\nfunction merge(obj, key, value) {\n  if (!value) {\n    return obj;\n  }\n  obj[key] = obj[key] ? [obj[key], value].join(\",\") : value;\n  return obj;\n}\n\n// pkg/commands/command.ts\nvar defaultSerializer = (c) => {\n  switch (typeof c) {\n    case \"string\":\n    case \"number\":\n    case \"boolean\": {\n      return c;\n    }\n    default: {\n      return JSON.stringify(c);\n    }\n  }\n};\nvar Command = class {\n  command;\n  serialize;\n  deserialize;\n  headers;\n  path;\n  onMessage;\n  isStreaming;\n  signal;\n  /**\n   * Create a new command instance.\n   *\n   * You can define a custom `deserialize` function. By default we try to deserialize as json.\n   */\n  constructor(command, opts) {\n    this.serialize = defaultSerializer;\n    this.deserialize = opts?.automaticDeserialization === void 0 || opts.automaticDeserialization ? opts?.deserialize ?? parseResponse : (x) => x;\n    this.command = command.map((c) => this.serialize(c));\n    this.headers = opts?.headers;\n    this.path = opts?.path;\n    this.onMessage = opts?.streamOptions?.onMessage;\n    this.isStreaming = opts?.streamOptions?.isStreaming ?? false;\n    this.signal = opts?.streamOptions?.signal;\n    if (opts?.latencyLogging) {\n      const originalExec = this.exec.bind(this);\n      this.exec = async (client) => {\n        const start = performance.now();\n        const result = await originalExec(client);\n        const end = performance.now();\n        const loggerResult = (end - start).toFixed(2);\n        console.log(\n          `Latency for \\x1B[38;2;19;185;39m${this.command[0].toString().toUpperCase()}\\x1B[0m: \\x1B[38;2;0;255;255m${loggerResult} ms\\x1B[0m`\n        );\n        return result;\n      };\n    }\n  }\n  /**\n   * Execute the command using a client.\n   */\n  async exec(client) {\n    const { result, error } = await client.request({\n      body: this.command,\n      path: this.path,\n      upstashSyncToken: client.upstashSyncToken,\n      headers: this.headers,\n      onMessage: this.onMessage,\n      isStreaming: this.isStreaming,\n      signal: this.signal\n    });\n    if (error) {\n      throw new UpstashError(error);\n    }\n    if (result === void 0) {\n      throw new TypeError(\"Request did not return a result\");\n    }\n    return this.deserialize(result);\n  }\n};\n\n// pkg/commands/hrandfield.ts\nfunction deserialize(result) {\n  if (result.length === 0) {\n    return null;\n  }\n  const obj = {};\n  for (let i = 0; i < result.length; i += 2) {\n    const key = result[i];\n    const value = result[i + 1];\n    try {\n      obj[key] = JSON.parse(value);\n    } catch {\n      obj[key] = value;\n    }\n  }\n  return obj;\n}\nvar HRandFieldCommand = class extends Command {\n  constructor(cmd, opts) {\n    const command = [\"hrandfield\", cmd[0]];\n    if (typeof cmd[1] === \"number\") {\n      command.push(cmd[1]);\n    }\n    if (cmd[2]) {\n      command.push(\"WITHVALUES\");\n    }\n    super(command, {\n      // @ts-expect-error to silence compiler\n      deserialize: cmd[2] ? (result) => deserialize(result) : opts?.deserialize,\n      ...opts\n    });\n  }\n};\n\n// pkg/commands/append.ts\nvar AppendCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"append\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/bitcount.ts\nvar BitCountCommand = class extends Command {\n  constructor([key, start, end], opts) {\n    const command = [\"bitcount\", key];\n    if (typeof start === \"number\") {\n      command.push(start);\n    }\n    if (typeof end === \"number\") {\n      command.push(end);\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/bitfield.ts\nvar BitFieldCommand = class {\n  constructor(args, client, opts, execOperation = (command) => command.exec(this.client)) {\n    this.client = client;\n    this.opts = opts;\n    this.execOperation = execOperation;\n    this.command = [\"bitfield\", ...args];\n  }\n  command;\n  chain(...args) {\n    this.command.push(...args);\n    return this;\n  }\n  get(...args) {\n    return this.chain(\"get\", ...args);\n  }\n  set(...args) {\n    return this.chain(\"set\", ...args);\n  }\n  incrby(...args) {\n    return this.chain(\"incrby\", ...args);\n  }\n  overflow(overflow) {\n    return this.chain(\"overflow\", overflow);\n  }\n  exec() {\n    const command = new Command(this.command, this.opts);\n    return this.execOperation(command);\n  }\n};\n\n// pkg/commands/bitop.ts\nvar BitOpCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"bitop\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/bitpos.ts\nvar BitPosCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"bitpos\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/copy.ts\nvar CopyCommand = class extends Command {\n  constructor([key, destinationKey, opts], commandOptions) {\n    super([\"COPY\", key, destinationKey, ...opts?.replace ? [\"REPLACE\"] : []], {\n      ...commandOptions,\n      deserialize(result) {\n        if (result > 0) {\n          return \"COPIED\";\n        }\n        return \"NOT_COPIED\";\n      }\n    });\n  }\n};\n\n// pkg/commands/dbsize.ts\nvar DBSizeCommand = class extends Command {\n  constructor(opts) {\n    super([\"dbsize\"], opts);\n  }\n};\n\n// pkg/commands/decr.ts\nvar DecrCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"decr\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/decrby.ts\nvar DecrByCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"decrby\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/del.ts\nvar DelCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"del\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/echo.ts\nvar EchoCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"echo\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/eval.ts\nvar EvalCommand = class extends Command {\n  constructor([script, keys, args], opts) {\n    super([\"eval\", script, keys.length, ...keys, ...args ?? []], opts);\n  }\n};\n\n// pkg/commands/evalsha.ts\nvar EvalshaCommand = class extends Command {\n  constructor([sha, keys, args], opts) {\n    super([\"evalsha\", sha, keys.length, ...keys, ...args ?? []], opts);\n  }\n};\n\n// pkg/commands/exec.ts\nvar ExecCommand = class extends Command {\n  constructor(cmd, opts) {\n    const normalizedCmd = cmd.map((arg) => typeof arg === \"string\" ? arg : String(arg));\n    super(normalizedCmd, opts);\n  }\n};\n\n// pkg/commands/exists.ts\nvar ExistsCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"exists\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/expire.ts\nvar ExpireCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"expire\", ...cmd.filter(Boolean)], opts);\n  }\n};\n\n// pkg/commands/expireat.ts\nvar ExpireAtCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"expireat\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/flushall.ts\nvar FlushAllCommand = class extends Command {\n  constructor(args, opts) {\n    const command = [\"flushall\"];\n    if (args && args.length > 0 && args[0].async) {\n      command.push(\"async\");\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/flushdb.ts\nvar FlushDBCommand = class extends Command {\n  constructor([opts], cmdOpts) {\n    const command = [\"flushdb\"];\n    if (opts?.async) {\n      command.push(\"async\");\n    }\n    super(command, cmdOpts);\n  }\n};\n\n// pkg/commands/geo_add.ts\nvar GeoAddCommand = class extends Command {\n  constructor([key, arg1, ...arg2], opts) {\n    const command = [\"geoadd\", key];\n    if (\"nx\" in arg1 && arg1.nx) {\n      command.push(\"nx\");\n    } else if (\"xx\" in arg1 && arg1.xx) {\n      command.push(\"xx\");\n    }\n    if (\"ch\" in arg1 && arg1.ch) {\n      command.push(\"ch\");\n    }\n    if (\"latitude\" in arg1 && arg1.latitude) {\n      command.push(arg1.longitude, arg1.latitude, arg1.member);\n    }\n    command.push(\n      ...arg2.flatMap(({ latitude, longitude, member }) => [longitude, latitude, member])\n    );\n    super(command, opts);\n  }\n};\n\n// pkg/commands/geo_dist.ts\nvar GeoDistCommand = class extends Command {\n  constructor([key, member1, member2, unit = \"M\"], opts) {\n    super([\"GEODIST\", key, member1, member2, unit], opts);\n  }\n};\n\n// pkg/commands/geo_hash.ts\nvar GeoHashCommand = class extends Command {\n  constructor(cmd, opts) {\n    const [key] = cmd;\n    const members = Array.isArray(cmd[1]) ? cmd[1] : cmd.slice(1);\n    super([\"GEOHASH\", key, ...members], opts);\n  }\n};\n\n// pkg/commands/geo_pos.ts\nvar GeoPosCommand = class extends Command {\n  constructor(cmd, opts) {\n    const [key] = cmd;\n    const members = Array.isArray(cmd[1]) ? cmd[1] : cmd.slice(1);\n    super([\"GEOPOS\", key, ...members], {\n      deserialize: (result) => transform(result),\n      ...opts\n    });\n  }\n};\nfunction transform(result) {\n  const final = [];\n  for (const pos of result) {\n    if (!pos?.[0] || !pos?.[1]) {\n      continue;\n    }\n    final.push({ lng: Number.parseFloat(pos[0]), lat: Number.parseFloat(pos[1]) });\n  }\n  return final;\n}\n\n// pkg/commands/geo_search.ts\nvar GeoSearchCommand = class extends Command {\n  constructor([key, centerPoint, shape, order, opts], commandOptions) {\n    const command = [\"GEOSEARCH\", key];\n    if (centerPoint.type === \"FROMMEMBER\" || centerPoint.type === \"frommember\") {\n      command.push(centerPoint.type, centerPoint.member);\n    }\n    if (centerPoint.type === \"FROMLONLAT\" || centerPoint.type === \"fromlonlat\") {\n      command.push(centerPoint.type, centerPoint.coordinate.lon, centerPoint.coordinate.lat);\n    }\n    if (shape.type === \"BYRADIUS\" || shape.type === \"byradius\") {\n      command.push(shape.type, shape.radius, shape.radiusType);\n    }\n    if (shape.type === \"BYBOX\" || shape.type === \"bybox\") {\n      command.push(shape.type, shape.rect.width, shape.rect.height, shape.rectType);\n    }\n    command.push(order);\n    if (opts?.count) {\n      command.push(\"COUNT\", opts.count.limit, ...opts.count.any ? [\"ANY\"] : []);\n    }\n    const transform2 = (result) => {\n      if (!opts?.withCoord && !opts?.withDist && !opts?.withHash) {\n        return result.map((member) => {\n          try {\n            return { member: JSON.parse(member) };\n          } catch {\n            return { member };\n          }\n        });\n      }\n      return result.map((members) => {\n        let counter = 1;\n        const obj = {};\n        try {\n          obj.member = JSON.parse(members[0]);\n        } catch {\n          obj.member = members[0];\n        }\n        if (opts.withDist) {\n          obj.dist = Number.parseFloat(members[counter++]);\n        }\n        if (opts.withHash) {\n          obj.hash = members[counter++].toString();\n        }\n        if (opts.withCoord) {\n          obj.coord = {\n            long: Number.parseFloat(members[counter][0]),\n            lat: Number.parseFloat(members[counter][1])\n          };\n        }\n        return obj;\n      });\n    };\n    super(\n      [\n        ...command,\n        ...opts?.withCoord ? [\"WITHCOORD\"] : [],\n        ...opts?.withDist ? [\"WITHDIST\"] : [],\n        ...opts?.withHash ? [\"WITHHASH\"] : []\n      ],\n      {\n        deserialize: transform2,\n        ...commandOptions\n      }\n    );\n  }\n};\n\n// pkg/commands/geo_search_store.ts\nvar GeoSearchStoreCommand = class extends Command {\n  constructor([destination, key, centerPoint, shape, order, opts], commandOptions) {\n    const command = [\"GEOSEARCHSTORE\", destination, key];\n    if (centerPoint.type === \"FROMMEMBER\" || centerPoint.type === \"frommember\") {\n      command.push(centerPoint.type, centerPoint.member);\n    }\n    if (centerPoint.type === \"FROMLONLAT\" || centerPoint.type === \"fromlonlat\") {\n      command.push(centerPoint.type, centerPoint.coordinate.lon, centerPoint.coordinate.lat);\n    }\n    if (shape.type === \"BYRADIUS\" || shape.type === \"byradius\") {\n      command.push(shape.type, shape.radius, shape.radiusType);\n    }\n    if (shape.type === \"BYBOX\" || shape.type === \"bybox\") {\n      command.push(shape.type, shape.rect.width, shape.rect.height, shape.rectType);\n    }\n    command.push(order);\n    if (opts?.count) {\n      command.push(\"COUNT\", opts.count.limit, ...opts.count.any ? [\"ANY\"] : []);\n    }\n    super([...command, ...opts?.storeDist ? [\"STOREDIST\"] : []], commandOptions);\n  }\n};\n\n// pkg/commands/get.ts\nvar GetCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"get\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/getbit.ts\nvar GetBitCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"getbit\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/getdel.ts\nvar GetDelCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"getdel\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/getex.ts\nvar GetExCommand = class extends Command {\n  constructor([key, opts], cmdOpts) {\n    const command = [\"getex\", key];\n    if (opts) {\n      if (\"ex\" in opts && typeof opts.ex === \"number\") {\n        command.push(\"ex\", opts.ex);\n      } else if (\"px\" in opts && typeof opts.px === \"number\") {\n        command.push(\"px\", opts.px);\n      } else if (\"exat\" in opts && typeof opts.exat === \"number\") {\n        command.push(\"exat\", opts.exat);\n      } else if (\"pxat\" in opts && typeof opts.pxat === \"number\") {\n        command.push(\"pxat\", opts.pxat);\n      } else if (\"persist\" in opts && opts.persist) {\n        command.push(\"persist\");\n      }\n    }\n    super(command, cmdOpts);\n  }\n};\n\n// pkg/commands/getrange.ts\nvar GetRangeCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"getrange\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/getset.ts\nvar GetSetCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"getset\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/hdel.ts\nvar HDelCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hdel\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/hexists.ts\nvar HExistsCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hexists\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/hget.ts\nvar HGetCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hget\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/hgetall.ts\nfunction deserialize2(result) {\n  if (result.length === 0) {\n    return null;\n  }\n  const obj = {};\n  for (let i = 0; i < result.length; i += 2) {\n    const key = result[i];\n    const value = result[i + 1];\n    try {\n      const valueIsNumberAndNotSafeInteger = !Number.isNaN(Number(value)) && !Number.isSafeInteger(Number(value));\n      obj[key] = valueIsNumberAndNotSafeInteger ? value : JSON.parse(value);\n    } catch {\n      obj[key] = value;\n    }\n  }\n  return obj;\n}\nvar HGetAllCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hgetall\", ...cmd], {\n      deserialize: (result) => deserialize2(result),\n      ...opts\n    });\n  }\n};\n\n// pkg/commands/hincrby.ts\nvar HIncrByCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hincrby\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/hincrbyfloat.ts\nvar HIncrByFloatCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hincrbyfloat\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/hkeys.ts\nvar HKeysCommand = class extends Command {\n  constructor([key], opts) {\n    super([\"hkeys\", key], opts);\n  }\n};\n\n// pkg/commands/hlen.ts\nvar HLenCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hlen\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/hmget.ts\nfunction deserialize3(fields, result) {\n  if (result.every((field) => field === null)) {\n    return null;\n  }\n  const obj = {};\n  for (const [i, field] of fields.entries()) {\n    try {\n      obj[field] = JSON.parse(result[i]);\n    } catch {\n      obj[field] = result[i];\n    }\n  }\n  return obj;\n}\nvar HMGetCommand = class extends Command {\n  constructor([key, ...fields], opts) {\n    super([\"hmget\", key, ...fields], {\n      deserialize: (result) => deserialize3(fields, result),\n      ...opts\n    });\n  }\n};\n\n// pkg/commands/hmset.ts\nvar HMSetCommand = class extends Command {\n  constructor([key, kv], opts) {\n    super([\"hmset\", key, ...Object.entries(kv).flatMap(([field, value]) => [field, value])], opts);\n  }\n};\n\n// pkg/commands/hscan.ts\nvar HScanCommand = class extends Command {\n  constructor([key, cursor, cmdOpts], opts) {\n    const command = [\"hscan\", key, cursor];\n    if (cmdOpts?.match) {\n      command.push(\"match\", cmdOpts.match);\n    }\n    if (typeof cmdOpts?.count === \"number\") {\n      command.push(\"count\", cmdOpts.count);\n    }\n    super(command, {\n      deserialize: deserializeScanResponse,\n      ...opts\n    });\n  }\n};\n\n// pkg/commands/hset.ts\nvar HSetCommand = class extends Command {\n  constructor([key, kv], opts) {\n    super([\"hset\", key, ...Object.entries(kv).flatMap(([field, value]) => [field, value])], opts);\n  }\n};\n\n// pkg/commands/hsetnx.ts\nvar HSetNXCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hsetnx\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/hstrlen.ts\nvar HStrLenCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hstrlen\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/hvals.ts\nvar HValsCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"hvals\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/incr.ts\nvar IncrCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"incr\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/incrby.ts\nvar IncrByCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"incrby\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/incrbyfloat.ts\nvar IncrByFloatCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"incrbyfloat\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_arrappend.ts\nvar JsonArrAppendCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.ARRAPPEND\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_arrindex.ts\nvar JsonArrIndexCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.ARRINDEX\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_arrinsert.ts\nvar JsonArrInsertCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.ARRINSERT\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_arrlen.ts\nvar JsonArrLenCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.ARRLEN\", cmd[0], cmd[1] ?? \"$\"], opts);\n  }\n};\n\n// pkg/commands/json_arrpop.ts\nvar JsonArrPopCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.ARRPOP\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_arrtrim.ts\nvar JsonArrTrimCommand = class extends Command {\n  constructor(cmd, opts) {\n    const path = cmd[1] ?? \"$\";\n    const start = cmd[2] ?? 0;\n    const stop = cmd[3] ?? 0;\n    super([\"JSON.ARRTRIM\", cmd[0], path, start, stop], opts);\n  }\n};\n\n// pkg/commands/json_clear.ts\nvar JsonClearCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.CLEAR\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_del.ts\nvar JsonDelCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.DEL\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_forget.ts\nvar JsonForgetCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.FORGET\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_get.ts\nvar JsonGetCommand = class extends Command {\n  constructor(cmd, opts) {\n    const command = [\"JSON.GET\"];\n    if (typeof cmd[1] === \"string\") {\n      command.push(...cmd);\n    } else {\n      command.push(cmd[0]);\n      if (cmd[1]) {\n        if (cmd[1].indent) {\n          command.push(\"INDENT\", cmd[1].indent);\n        }\n        if (cmd[1].newline) {\n          command.push(\"NEWLINE\", cmd[1].newline);\n        }\n        if (cmd[1].space) {\n          command.push(\"SPACE\", cmd[1].space);\n        }\n      }\n      command.push(...cmd.slice(2));\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/json_mget.ts\nvar JsonMGetCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.MGET\", ...cmd[0], cmd[1]], opts);\n  }\n};\n\n// pkg/commands/json_mset.ts\nvar JsonMSetCommand = class extends Command {\n  constructor(cmd, opts) {\n    const command = [\"JSON.MSET\"];\n    for (const c of cmd) {\n      command.push(c.key, c.path, c.value);\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/json_numincrby.ts\nvar JsonNumIncrByCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.NUMINCRBY\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_nummultby.ts\nvar JsonNumMultByCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.NUMMULTBY\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_objkeys.ts\nvar JsonObjKeysCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.OBJKEYS\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_objlen.ts\nvar JsonObjLenCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.OBJLEN\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_resp.ts\nvar JsonRespCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.RESP\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_set.ts\nvar JsonSetCommand = class extends Command {\n  constructor(cmd, opts) {\n    const command = [\"JSON.SET\", cmd[0], cmd[1], cmd[2]];\n    if (cmd[3]) {\n      if (cmd[3].nx) {\n        command.push(\"NX\");\n      } else if (cmd[3].xx) {\n        command.push(\"XX\");\n      }\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/json_strappend.ts\nvar JsonStrAppendCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.STRAPPEND\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_strlen.ts\nvar JsonStrLenCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.STRLEN\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_toggle.ts\nvar JsonToggleCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.TOGGLE\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/json_type.ts\nvar JsonTypeCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"JSON.TYPE\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/keys.ts\nvar KeysCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"keys\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/lindex.ts\nvar LIndexCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"lindex\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/linsert.ts\nvar LInsertCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"linsert\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/llen.ts\nvar LLenCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"llen\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/lmove.ts\nvar LMoveCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"lmove\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/lmpop.ts\nvar LmPopCommand = class extends Command {\n  constructor(cmd, opts) {\n    const [numkeys, keys, direction, count] = cmd;\n    super([\"LMPOP\", numkeys, ...keys, direction, ...count ? [\"COUNT\", count] : []], opts);\n  }\n};\n\n// pkg/commands/lpop.ts\nvar LPopCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"lpop\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/lpos.ts\nvar LPosCommand = class extends Command {\n  constructor(cmd, opts) {\n    const args = [\"lpos\", cmd[0], cmd[1]];\n    if (typeof cmd[2]?.rank === \"number\") {\n      args.push(\"rank\", cmd[2].rank);\n    }\n    if (typeof cmd[2]?.count === \"number\") {\n      args.push(\"count\", cmd[2].count);\n    }\n    if (typeof cmd[2]?.maxLen === \"number\") {\n      args.push(\"maxLen\", cmd[2].maxLen);\n    }\n    super(args, opts);\n  }\n};\n\n// pkg/commands/lpush.ts\nvar LPushCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"lpush\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/lpushx.ts\nvar LPushXCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"lpushx\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/lrange.ts\nvar LRangeCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"lrange\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/lrem.ts\nvar LRemCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"lrem\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/lset.ts\nvar LSetCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"lset\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/ltrim.ts\nvar LTrimCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"ltrim\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/mget.ts\nvar MGetCommand = class extends Command {\n  constructor(cmd, opts) {\n    const keys = Array.isArray(cmd[0]) ? cmd[0] : cmd;\n    super([\"mget\", ...keys], opts);\n  }\n};\n\n// pkg/commands/mset.ts\nvar MSetCommand = class extends Command {\n  constructor([kv], opts) {\n    super([\"mset\", ...Object.entries(kv).flatMap(([key, value]) => [key, value])], opts);\n  }\n};\n\n// pkg/commands/msetnx.ts\nvar MSetNXCommand = class extends Command {\n  constructor([kv], opts) {\n    super([\"msetnx\", ...Object.entries(kv).flat()], opts);\n  }\n};\n\n// pkg/commands/persist.ts\nvar PersistCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"persist\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/pexpire.ts\nvar PExpireCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"pexpire\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/pexpireat.ts\nvar PExpireAtCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"pexpireat\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/pfadd.ts\nvar PfAddCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"pfadd\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/pfcount.ts\nvar PfCountCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"pfcount\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/pfmerge.ts\nvar PfMergeCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"pfmerge\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/ping.ts\nvar PingCommand = class extends Command {\n  constructor(cmd, opts) {\n    const command = [\"ping\"];\n    if (cmd?.[0] !== void 0) {\n      command.push(cmd[0]);\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/psetex.ts\nvar PSetEXCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"psetex\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/pttl.ts\nvar PTtlCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"pttl\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/publish.ts\nvar PublishCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"publish\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/randomkey.ts\nvar RandomKeyCommand = class extends Command {\n  constructor(opts) {\n    super([\"randomkey\"], opts);\n  }\n};\n\n// pkg/commands/rename.ts\nvar RenameCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"rename\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/renamenx.ts\nvar RenameNXCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"renamenx\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/rpop.ts\nvar RPopCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"rpop\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/rpush.ts\nvar RPushCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"rpush\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/rpushx.ts\nvar RPushXCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"rpushx\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/sadd.ts\nvar SAddCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"sadd\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/scan.ts\nvar ScanCommand = class extends Command {\n  constructor([cursor, opts], cmdOpts) {\n    const command = [\"scan\", cursor];\n    if (opts?.match) {\n      command.push(\"match\", opts.match);\n    }\n    if (typeof opts?.count === \"number\") {\n      command.push(\"count\", opts.count);\n    }\n    if (opts?.type && opts.type.length > 0) {\n      command.push(\"type\", opts.type);\n    }\n    super(command, {\n      deserialize: deserializeScanResponse,\n      ...cmdOpts\n    });\n  }\n};\n\n// pkg/commands/scard.ts\nvar SCardCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"scard\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/script_exists.ts\nvar ScriptExistsCommand = class extends Command {\n  constructor(hashes, opts) {\n    super([\"script\", \"exists\", ...hashes], {\n      deserialize: (result) => result,\n      ...opts\n    });\n  }\n};\n\n// pkg/commands/script_flush.ts\nvar ScriptFlushCommand = class extends Command {\n  constructor([opts], cmdOpts) {\n    const cmd = [\"script\", \"flush\"];\n    if (opts?.sync) {\n      cmd.push(\"sync\");\n    } else if (opts?.async) {\n      cmd.push(\"async\");\n    }\n    super(cmd, cmdOpts);\n  }\n};\n\n// pkg/commands/script_load.ts\nvar ScriptLoadCommand = class extends Command {\n  constructor(args, opts) {\n    super([\"script\", \"load\", ...args], opts);\n  }\n};\n\n// pkg/commands/sdiff.ts\nvar SDiffCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"sdiff\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/sdiffstore.ts\nvar SDiffStoreCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"sdiffstore\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/set.ts\nvar SetCommand = class extends Command {\n  constructor([key, value, opts], cmdOpts) {\n    const command = [\"set\", key, value];\n    if (opts) {\n      if (\"nx\" in opts && opts.nx) {\n        command.push(\"nx\");\n      } else if (\"xx\" in opts && opts.xx) {\n        command.push(\"xx\");\n      }\n      if (\"get\" in opts && opts.get) {\n        command.push(\"get\");\n      }\n      if (\"ex\" in opts && typeof opts.ex === \"number\") {\n        command.push(\"ex\", opts.ex);\n      } else if (\"px\" in opts && typeof opts.px === \"number\") {\n        command.push(\"px\", opts.px);\n      } else if (\"exat\" in opts && typeof opts.exat === \"number\") {\n        command.push(\"exat\", opts.exat);\n      } else if (\"pxat\" in opts && typeof opts.pxat === \"number\") {\n        command.push(\"pxat\", opts.pxat);\n      } else if (\"keepTtl\" in opts && opts.keepTtl) {\n        command.push(\"keepTtl\");\n      }\n    }\n    super(command, cmdOpts);\n  }\n};\n\n// pkg/commands/setbit.ts\nvar SetBitCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"setbit\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/setex.ts\nvar SetExCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"setex\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/setnx.ts\nvar SetNxCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"setnx\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/setrange.ts\nvar SetRangeCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"setrange\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/sinter.ts\nvar SInterCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"sinter\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/sinterstore.ts\nvar SInterStoreCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"sinterstore\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/sismember.ts\nvar SIsMemberCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"sismember\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/smembers.ts\nvar SMembersCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"smembers\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/smismember.ts\nvar SMIsMemberCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"smismember\", cmd[0], ...cmd[1]], opts);\n  }\n};\n\n// pkg/commands/smove.ts\nvar SMoveCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"smove\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/spop.ts\nvar SPopCommand = class extends Command {\n  constructor([key, count], opts) {\n    const command = [\"spop\", key];\n    if (typeof count === \"number\") {\n      command.push(count);\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/srandmember.ts\nvar SRandMemberCommand = class extends Command {\n  constructor([key, count], opts) {\n    const command = [\"srandmember\", key];\n    if (typeof count === \"number\") {\n      command.push(count);\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/srem.ts\nvar SRemCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"srem\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/sscan.ts\nvar SScanCommand = class extends Command {\n  constructor([key, cursor, opts], cmdOpts) {\n    const command = [\"sscan\", key, cursor];\n    if (opts?.match) {\n      command.push(\"match\", opts.match);\n    }\n    if (typeof opts?.count === \"number\") {\n      command.push(\"count\", opts.count);\n    }\n    super(command, {\n      deserialize: deserializeScanResponse,\n      ...cmdOpts\n    });\n  }\n};\n\n// pkg/commands/strlen.ts\nvar StrLenCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"strlen\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/sunion.ts\nvar SUnionCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"sunion\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/sunionstore.ts\nvar SUnionStoreCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"sunionstore\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/time.ts\nvar TimeCommand = class extends Command {\n  constructor(opts) {\n    super([\"time\"], opts);\n  }\n};\n\n// pkg/commands/touch.ts\nvar TouchCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"touch\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/ttl.ts\nvar TtlCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"ttl\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/type.ts\nvar TypeCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"type\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/unlink.ts\nvar UnlinkCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"unlink\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/xack.ts\nvar XAckCommand = class extends Command {\n  constructor([key, group, id], opts) {\n    const ids = Array.isArray(id) ? [...id] : [id];\n    super([\"XACK\", key, group, ...ids], opts);\n  }\n};\n\n// pkg/commands/xadd.ts\nvar XAddCommand = class extends Command {\n  constructor([key, id, entries, opts], commandOptions) {\n    const command = [\"XADD\", key];\n    if (opts) {\n      if (opts.nomkStream) {\n        command.push(\"NOMKSTREAM\");\n      }\n      if (opts.trim) {\n        command.push(opts.trim.type, opts.trim.comparison, opts.trim.threshold);\n        if (opts.trim.limit !== void 0) {\n          command.push(\"LIMIT\", opts.trim.limit);\n        }\n      }\n    }\n    command.push(id);\n    for (const [k, v] of Object.entries(entries)) {\n      command.push(k, v);\n    }\n    super(command, commandOptions);\n  }\n};\n\n// pkg/commands/xautoclaim.ts\nvar XAutoClaim = class extends Command {\n  constructor([key, group, consumer, minIdleTime, start, options], opts) {\n    const commands = [];\n    if (options?.count) {\n      commands.push(\"COUNT\", options.count);\n    }\n    if (options?.justId) {\n      commands.push(\"JUSTID\");\n    }\n    super([\"XAUTOCLAIM\", key, group, consumer, minIdleTime, start, ...commands], opts);\n  }\n};\n\n// pkg/commands/xclaim.ts\nvar XClaimCommand = class extends Command {\n  constructor([key, group, consumer, minIdleTime, id, options], opts) {\n    const ids = Array.isArray(id) ? [...id] : [id];\n    const commands = [];\n    if (options?.idleMS) {\n      commands.push(\"IDLE\", options.idleMS);\n    }\n    if (options?.idleMS) {\n      commands.push(\"TIME\", options.timeMS);\n    }\n    if (options?.retryCount) {\n      commands.push(\"RETRYCOUNT\", options.retryCount);\n    }\n    if (options?.force) {\n      commands.push(\"FORCE\");\n    }\n    if (options?.justId) {\n      commands.push(\"JUSTID\");\n    }\n    if (options?.lastId) {\n      commands.push(\"LASTID\", options.lastId);\n    }\n    super([\"XCLAIM\", key, group, consumer, minIdleTime, ...ids, ...commands], opts);\n  }\n};\n\n// pkg/commands/xdel.ts\nvar XDelCommand = class extends Command {\n  constructor([key, ids], opts) {\n    const cmds = Array.isArray(ids) ? [...ids] : [ids];\n    super([\"XDEL\", key, ...cmds], opts);\n  }\n};\n\n// pkg/commands/xgroup.ts\nvar XGroupCommand = class extends Command {\n  constructor([key, opts], commandOptions) {\n    const command = [\"XGROUP\"];\n    switch (opts.type) {\n      case \"CREATE\": {\n        command.push(\"CREATE\", key, opts.group, opts.id);\n        if (opts.options) {\n          if (opts.options.MKSTREAM) {\n            command.push(\"MKSTREAM\");\n          }\n          if (opts.options.ENTRIESREAD !== void 0) {\n            command.push(\"ENTRIESREAD\", opts.options.ENTRIESREAD.toString());\n          }\n        }\n        break;\n      }\n      case \"CREATECONSUMER\": {\n        command.push(\"CREATECONSUMER\", key, opts.group, opts.consumer);\n        break;\n      }\n      case \"DELCONSUMER\": {\n        command.push(\"DELCONSUMER\", key, opts.group, opts.consumer);\n        break;\n      }\n      case \"DESTROY\": {\n        command.push(\"DESTROY\", key, opts.group);\n        break;\n      }\n      case \"SETID\": {\n        command.push(\"SETID\", key, opts.group, opts.id);\n        if (opts.options?.ENTRIESREAD !== void 0) {\n          command.push(\"ENTRIESREAD\", opts.options.ENTRIESREAD.toString());\n        }\n        break;\n      }\n      default: {\n        throw new Error(\"Invalid XGROUP\");\n      }\n    }\n    super(command, commandOptions);\n  }\n};\n\n// pkg/commands/xinfo.ts\nvar XInfoCommand = class extends Command {\n  constructor([key, options], opts) {\n    const cmds = [];\n    if (options.type === \"CONSUMERS\") {\n      cmds.push(\"CONSUMERS\", key, options.group);\n    } else {\n      cmds.push(\"GROUPS\", key);\n    }\n    super([\"XINFO\", ...cmds], opts);\n  }\n};\n\n// pkg/commands/xlen.ts\nvar XLenCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"XLEN\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/xpending.ts\nvar XPendingCommand = class extends Command {\n  constructor([key, group, start, end, count, options], opts) {\n    const consumers = options?.consumer === void 0 ? [] : Array.isArray(options.consumer) ? [...options.consumer] : [options.consumer];\n    super(\n      [\n        \"XPENDING\",\n        key,\n        group,\n        ...options?.idleTime ? [\"IDLE\", options.idleTime] : [],\n        start,\n        end,\n        count,\n        ...consumers\n      ],\n      opts\n    );\n  }\n};\n\n// pkg/commands/xrange.ts\nfunction deserialize4(result) {\n  const obj = {};\n  for (const e of result) {\n    for (let i = 0; i < e.length; i += 2) {\n      const streamId = e[i];\n      const entries = e[i + 1];\n      if (!(streamId in obj)) {\n        obj[streamId] = {};\n      }\n      for (let j = 0; j < entries.length; j += 2) {\n        const field = entries[j];\n        const value = entries[j + 1];\n        try {\n          obj[streamId][field] = JSON.parse(value);\n        } catch {\n          obj[streamId][field] = value;\n        }\n      }\n    }\n  }\n  return obj;\n}\nvar XRangeCommand = class extends Command {\n  constructor([key, start, end, count], opts) {\n    const command = [\"XRANGE\", key, start, end];\n    if (typeof count === \"number\") {\n      command.push(\"COUNT\", count);\n    }\n    super(command, {\n      deserialize: (result) => deserialize4(result),\n      ...opts\n    });\n  }\n};\n\n// pkg/commands/xread.ts\nvar UNBALANCED_XREAD_ERR = \"ERR Unbalanced XREAD list of streams: for each stream key an ID or '$' must be specified\";\nvar XReadCommand = class extends Command {\n  constructor([key, id, options], opts) {\n    if (Array.isArray(key) && Array.isArray(id) && key.length !== id.length) {\n      throw new Error(UNBALANCED_XREAD_ERR);\n    }\n    const commands = [];\n    if (typeof options?.count === \"number\") {\n      commands.push(\"COUNT\", options.count);\n    }\n    if (typeof options?.blockMS === \"number\") {\n      commands.push(\"BLOCK\", options.blockMS);\n    }\n    commands.push(\n      \"STREAMS\",\n      ...Array.isArray(key) ? [...key] : [key],\n      ...Array.isArray(id) ? [...id] : [id]\n    );\n    super([\"XREAD\", ...commands], opts);\n  }\n};\n\n// pkg/commands/xreadgroup.ts\nvar UNBALANCED_XREADGROUP_ERR = \"ERR Unbalanced XREADGROUP list of streams: for each stream key an ID or '$' must be specified\";\nvar XReadGroupCommand = class extends Command {\n  constructor([group, consumer, key, id, options], opts) {\n    if (Array.isArray(key) && Array.isArray(id) && key.length !== id.length) {\n      throw new Error(UNBALANCED_XREADGROUP_ERR);\n    }\n    const commands = [];\n    if (typeof options?.count === \"number\") {\n      commands.push(\"COUNT\", options.count);\n    }\n    if (typeof options?.blockMS === \"number\") {\n      commands.push(\"BLOCK\", options.blockMS);\n    }\n    if (typeof options?.NOACK === \"boolean\" && options.NOACK) {\n      commands.push(\"NOACK\");\n    }\n    commands.push(\n      \"STREAMS\",\n      ...Array.isArray(key) ? [...key] : [key],\n      ...Array.isArray(id) ? [...id] : [id]\n    );\n    super([\"XREADGROUP\", \"GROUP\", group, consumer, ...commands], opts);\n  }\n};\n\n// pkg/commands/xrevrange.ts\nvar XRevRangeCommand = class extends Command {\n  constructor([key, end, start, count], opts) {\n    const command = [\"XREVRANGE\", key, end, start];\n    if (typeof count === \"number\") {\n      command.push(\"COUNT\", count);\n    }\n    super(command, {\n      deserialize: (result) => deserialize5(result),\n      ...opts\n    });\n  }\n};\nfunction deserialize5(result) {\n  const obj = {};\n  for (const e of result) {\n    for (let i = 0; i < e.length; i += 2) {\n      const streamId = e[i];\n      const entries = e[i + 1];\n      if (!(streamId in obj)) {\n        obj[streamId] = {};\n      }\n      for (let j = 0; j < entries.length; j += 2) {\n        const field = entries[j];\n        const value = entries[j + 1];\n        try {\n          obj[streamId][field] = JSON.parse(value);\n        } catch {\n          obj[streamId][field] = value;\n        }\n      }\n    }\n  }\n  return obj;\n}\n\n// pkg/commands/xtrim.ts\nvar XTrimCommand = class extends Command {\n  constructor([key, options], opts) {\n    const { limit, strategy, threshold, exactness = \"~\" } = options;\n    super([\"XTRIM\", key, strategy, exactness, threshold, ...limit ? [\"LIMIT\", limit] : []], opts);\n  }\n};\n\n// pkg/commands/zadd.ts\nvar ZAddCommand = class extends Command {\n  constructor([key, arg1, ...arg2], opts) {\n    const command = [\"zadd\", key];\n    if (\"nx\" in arg1 && arg1.nx) {\n      command.push(\"nx\");\n    } else if (\"xx\" in arg1 && arg1.xx) {\n      command.push(\"xx\");\n    }\n    if (\"ch\" in arg1 && arg1.ch) {\n      command.push(\"ch\");\n    }\n    if (\"incr\" in arg1 && arg1.incr) {\n      command.push(\"incr\");\n    }\n    if (\"lt\" in arg1 && arg1.lt) {\n      command.push(\"lt\");\n    } else if (\"gt\" in arg1 && arg1.gt) {\n      command.push(\"gt\");\n    }\n    if (\"score\" in arg1 && \"member\" in arg1) {\n      command.push(arg1.score, arg1.member);\n    }\n    command.push(...arg2.flatMap(({ score, member }) => [score, member]));\n    super(command, opts);\n  }\n};\n\n// pkg/commands/zcard.ts\nvar ZCardCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zcard\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zcount.ts\nvar ZCountCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zcount\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zincrby.ts\nvar ZIncrByCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zincrby\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zinterstore.ts\nvar ZInterStoreCommand = class extends Command {\n  constructor([destination, numKeys, keyOrKeys, opts], cmdOpts) {\n    const command = [\"zinterstore\", destination, numKeys];\n    if (Array.isArray(keyOrKeys)) {\n      command.push(...keyOrKeys);\n    } else {\n      command.push(keyOrKeys);\n    }\n    if (opts) {\n      if (\"weights\" in opts && opts.weights) {\n        command.push(\"weights\", ...opts.weights);\n      } else if (\"weight\" in opts && typeof opts.weight === \"number\") {\n        command.push(\"weights\", opts.weight);\n      }\n      if (\"aggregate\" in opts) {\n        command.push(\"aggregate\", opts.aggregate);\n      }\n    }\n    super(command, cmdOpts);\n  }\n};\n\n// pkg/commands/zlexcount.ts\nvar ZLexCountCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zlexcount\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zpopmax.ts\nvar ZPopMaxCommand = class extends Command {\n  constructor([key, count], opts) {\n    const command = [\"zpopmax\", key];\n    if (typeof count === \"number\") {\n      command.push(count);\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/zpopmin.ts\nvar ZPopMinCommand = class extends Command {\n  constructor([key, count], opts) {\n    const command = [\"zpopmin\", key];\n    if (typeof count === \"number\") {\n      command.push(count);\n    }\n    super(command, opts);\n  }\n};\n\n// pkg/commands/zrange.ts\nvar ZRangeCommand = class extends Command {\n  constructor([key, min, max, opts], cmdOpts) {\n    const command = [\"zrange\", key, min, max];\n    if (opts?.byScore) {\n      command.push(\"byscore\");\n    }\n    if (opts?.byLex) {\n      command.push(\"bylex\");\n    }\n    if (opts?.rev) {\n      command.push(\"rev\");\n    }\n    if (opts?.count !== void 0 && opts.offset !== void 0) {\n      command.push(\"limit\", opts.offset, opts.count);\n    }\n    if (opts?.withScores) {\n      command.push(\"withscores\");\n    }\n    super(command, cmdOpts);\n  }\n};\n\n// pkg/commands/zrank.ts\nvar ZRankCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zrank\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zrem.ts\nvar ZRemCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zrem\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zremrangebylex.ts\nvar ZRemRangeByLexCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zremrangebylex\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zremrangebyrank.ts\nvar ZRemRangeByRankCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zremrangebyrank\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zremrangebyscore.ts\nvar ZRemRangeByScoreCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zremrangebyscore\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zrevrank.ts\nvar ZRevRankCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zrevrank\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zscan.ts\nvar ZScanCommand = class extends Command {\n  constructor([key, cursor, opts], cmdOpts) {\n    const command = [\"zscan\", key, cursor];\n    if (opts?.match) {\n      command.push(\"match\", opts.match);\n    }\n    if (typeof opts?.count === \"number\") {\n      command.push(\"count\", opts.count);\n    }\n    super(command, {\n      deserialize: deserializeScanResponse,\n      ...cmdOpts\n    });\n  }\n};\n\n// pkg/commands/zscore.ts\nvar ZScoreCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zscore\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zunion.ts\nvar ZUnionCommand = class extends Command {\n  constructor([numKeys, keyOrKeys, opts], cmdOpts) {\n    const command = [\"zunion\", numKeys];\n    if (Array.isArray(keyOrKeys)) {\n      command.push(...keyOrKeys);\n    } else {\n      command.push(keyOrKeys);\n    }\n    if (opts) {\n      if (\"weights\" in opts && opts.weights) {\n        command.push(\"weights\", ...opts.weights);\n      } else if (\"weight\" in opts && typeof opts.weight === \"number\") {\n        command.push(\"weights\", opts.weight);\n      }\n      if (\"aggregate\" in opts) {\n        command.push(\"aggregate\", opts.aggregate);\n      }\n      if (opts.withScores) {\n        command.push(\"withscores\");\n      }\n    }\n    super(command, cmdOpts);\n  }\n};\n\n// pkg/commands/zunionstore.ts\nvar ZUnionStoreCommand = class extends Command {\n  constructor([destination, numKeys, keyOrKeys, opts], cmdOpts) {\n    const command = [\"zunionstore\", destination, numKeys];\n    if (Array.isArray(keyOrKeys)) {\n      command.push(...keyOrKeys);\n    } else {\n      command.push(keyOrKeys);\n    }\n    if (opts) {\n      if (\"weights\" in opts && opts.weights) {\n        command.push(\"weights\", ...opts.weights);\n      } else if (\"weight\" in opts && typeof opts.weight === \"number\") {\n        command.push(\"weights\", opts.weight);\n      }\n      if (\"aggregate\" in opts) {\n        command.push(\"aggregate\", opts.aggregate);\n      }\n    }\n    super(command, cmdOpts);\n  }\n};\n\n// pkg/commands/zdiffstore.ts\nvar ZDiffStoreCommand = class extends Command {\n  constructor(cmd, opts) {\n    super([\"zdiffstore\", ...cmd], opts);\n  }\n};\n\n// pkg/commands/zmscore.ts\nvar ZMScoreCommand = class extends Command {\n  constructor(cmd, opts) {\n    const [key, members] = cmd;\n    super([\"zmscore\", key, ...members], opts);\n  }\n};\n\n// pkg/pipeline.ts\nvar Pipeline = class {\n  client;\n  commands;\n  commandOptions;\n  multiExec;\n  constructor(opts) {\n    this.client = opts.client;\n    this.commands = [];\n    this.commandOptions = opts.commandOptions;\n    this.multiExec = opts.multiExec ?? false;\n    if (this.commandOptions?.latencyLogging) {\n      const originalExec = this.exec.bind(this);\n      this.exec = async (options) => {\n        const start = performance.now();\n        const result = await (options ? originalExec(options) : originalExec());\n        const end = performance.now();\n        const loggerResult = (end - start).toFixed(2);\n        console.log(\n          `Latency for \\x1B[38;2;19;185;39m${this.multiExec ? [\"MULTI-EXEC\"] : [\"PIPELINE\"].toString().toUpperCase()}\\x1B[0m: \\x1B[38;2;0;255;255m${loggerResult} ms\\x1B[0m`\n        );\n        return result;\n      };\n    }\n  }\n  exec = async (options) => {\n    if (this.commands.length === 0) {\n      throw new Error(\"Pipeline is empty\");\n    }\n    const path = this.multiExec ? [\"multi-exec\"] : [\"pipeline\"];\n    const res = await this.client.request({\n      path,\n      body: Object.values(this.commands).map((c) => c.command)\n    });\n    return options?.keepErrors ? res.map(({ error, result }, i) => {\n      return {\n        error,\n        result: this.commands[i].deserialize(result)\n      };\n    }) : res.map(({ error, result }, i) => {\n      if (error) {\n        throw new UpstashError(\n          `Command ${i + 1} [ ${this.commands[i].command[0]} ] failed: ${error}`\n        );\n      }\n      return this.commands[i].deserialize(result);\n    });\n  };\n  /**\n   * Returns the length of pipeline before the execution\n   */\n  length() {\n    return this.commands.length;\n  }\n  /**\n   * Pushes a command into the pipeline and returns a chainable instance of the\n   * pipeline\n   */\n  chain(command) {\n    this.commands.push(command);\n    return this;\n  }\n  /**\n   * @see https://redis.io/commands/append\n   */\n  append = (...args) => this.chain(new AppendCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/bitcount\n   */\n  bitcount = (...args) => this.chain(new BitCountCommand(args, this.commandOptions));\n  /**\n   * Returns an instance that can be used to execute `BITFIELD` commands on one key.\n   *\n   * @example\n   * ```typescript\n   * redis.set(\"mykey\", 0);\n   * const result = await redis.pipeline()\n   *   .bitfield(\"mykey\")\n   *   .set(\"u4\", 0, 16)\n   *   .incr(\"u4\", \"#1\", 1)\n   *   .exec();\n   * console.log(result); // [[0, 1]]\n   * ```\n   *\n   * @see https://redis.io/commands/bitfield\n   */\n  bitfield = (...args) => new BitFieldCommand(args, this.client, this.commandOptions, this.chain.bind(this));\n  /**\n   * @see https://redis.io/commands/bitop\n   */\n  bitop = (op, destinationKey, sourceKey, ...sourceKeys) => this.chain(\n    new BitOpCommand([op, destinationKey, sourceKey, ...sourceKeys], this.commandOptions)\n  );\n  /**\n   * @see https://redis.io/commands/bitpos\n   */\n  bitpos = (...args) => this.chain(new BitPosCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/copy\n   */\n  copy = (...args) => this.chain(new CopyCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zdiffstore\n   */\n  zdiffstore = (...args) => this.chain(new ZDiffStoreCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/dbsize\n   */\n  dbsize = () => this.chain(new DBSizeCommand(this.commandOptions));\n  /**\n   * @see https://redis.io/commands/decr\n   */\n  decr = (...args) => this.chain(new DecrCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/decrby\n   */\n  decrby = (...args) => this.chain(new DecrByCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/del\n   */\n  del = (...args) => this.chain(new DelCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/echo\n   */\n  echo = (...args) => this.chain(new EchoCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/eval\n   */\n  eval = (...args) => this.chain(new EvalCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/evalsha\n   */\n  evalsha = (...args) => this.chain(new EvalshaCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/exists\n   */\n  exists = (...args) => this.chain(new ExistsCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/expire\n   */\n  expire = (...args) => this.chain(new ExpireCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/expireat\n   */\n  expireat = (...args) => this.chain(new ExpireAtCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/flushall\n   */\n  flushall = (args) => this.chain(new FlushAllCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/flushdb\n   */\n  flushdb = (...args) => this.chain(new FlushDBCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/geoadd\n   */\n  geoadd = (...args) => this.chain(new GeoAddCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/geodist\n   */\n  geodist = (...args) => this.chain(new GeoDistCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/geopos\n   */\n  geopos = (...args) => this.chain(new GeoPosCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/geohash\n   */\n  geohash = (...args) => this.chain(new GeoHashCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/geosearch\n   */\n  geosearch = (...args) => this.chain(new GeoSearchCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/geosearchstore\n   */\n  geosearchstore = (...args) => this.chain(new GeoSearchStoreCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/get\n   */\n  get = (...args) => this.chain(new GetCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/getbit\n   */\n  getbit = (...args) => this.chain(new GetBitCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/getdel\n   */\n  getdel = (...args) => this.chain(new GetDelCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/getex\n   */\n  getex = (...args) => this.chain(new GetExCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/getrange\n   */\n  getrange = (...args) => this.chain(new GetRangeCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/getset\n   */\n  getset = (key, value) => this.chain(new GetSetCommand([key, value], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hdel\n   */\n  hdel = (...args) => this.chain(new HDelCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hexists\n   */\n  hexists = (...args) => this.chain(new HExistsCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hget\n   */\n  hget = (...args) => this.chain(new HGetCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hgetall\n   */\n  hgetall = (...args) => this.chain(new HGetAllCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hincrby\n   */\n  hincrby = (...args) => this.chain(new HIncrByCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hincrbyfloat\n   */\n  hincrbyfloat = (...args) => this.chain(new HIncrByFloatCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hkeys\n   */\n  hkeys = (...args) => this.chain(new HKeysCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hlen\n   */\n  hlen = (...args) => this.chain(new HLenCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hmget\n   */\n  hmget = (...args) => this.chain(new HMGetCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hmset\n   */\n  hmset = (key, kv) => this.chain(new HMSetCommand([key, kv], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hrandfield\n   */\n  hrandfield = (key, count, withValues) => this.chain(new HRandFieldCommand([key, count, withValues], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hscan\n   */\n  hscan = (...args) => this.chain(new HScanCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hset\n   */\n  hset = (key, kv) => this.chain(new HSetCommand([key, kv], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hsetnx\n   */\n  hsetnx = (key, field, value) => this.chain(new HSetNXCommand([key, field, value], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hstrlen\n   */\n  hstrlen = (...args) => this.chain(new HStrLenCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/hvals\n   */\n  hvals = (...args) => this.chain(new HValsCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/incr\n   */\n  incr = (...args) => this.chain(new IncrCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/incrby\n   */\n  incrby = (...args) => this.chain(new IncrByCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/incrbyfloat\n   */\n  incrbyfloat = (...args) => this.chain(new IncrByFloatCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/keys\n   */\n  keys = (...args) => this.chain(new KeysCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lindex\n   */\n  lindex = (...args) => this.chain(new LIndexCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/linsert\n   */\n  linsert = (key, direction, pivot, value) => this.chain(new LInsertCommand([key, direction, pivot, value], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/llen\n   */\n  llen = (...args) => this.chain(new LLenCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lmove\n   */\n  lmove = (...args) => this.chain(new LMoveCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lpop\n   */\n  lpop = (...args) => this.chain(new LPopCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lmpop\n   */\n  lmpop = (...args) => this.chain(new LmPopCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lpos\n   */\n  lpos = (...args) => this.chain(new LPosCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lpush\n   */\n  lpush = (key, ...elements) => this.chain(new LPushCommand([key, ...elements], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lpushx\n   */\n  lpushx = (key, ...elements) => this.chain(new LPushXCommand([key, ...elements], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lrange\n   */\n  lrange = (...args) => this.chain(new LRangeCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lrem\n   */\n  lrem = (key, count, value) => this.chain(new LRemCommand([key, count, value], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/lset\n   */\n  lset = (key, index, value) => this.chain(new LSetCommand([key, index, value], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/ltrim\n   */\n  ltrim = (...args) => this.chain(new LTrimCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/mget\n   */\n  mget = (...args) => this.chain(new MGetCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/mset\n   */\n  mset = (kv) => this.chain(new MSetCommand([kv], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/msetnx\n   */\n  msetnx = (kv) => this.chain(new MSetNXCommand([kv], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/persist\n   */\n  persist = (...args) => this.chain(new PersistCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/pexpire\n   */\n  pexpire = (...args) => this.chain(new PExpireCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/pexpireat\n   */\n  pexpireat = (...args) => this.chain(new PExpireAtCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/pfadd\n   */\n  pfadd = (...args) => this.chain(new PfAddCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/pfcount\n   */\n  pfcount = (...args) => this.chain(new PfCountCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/pfmerge\n   */\n  pfmerge = (...args) => this.chain(new PfMergeCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/ping\n   */\n  ping = (args) => this.chain(new PingCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/psetex\n   */\n  psetex = (key, ttl, value) => this.chain(new PSetEXCommand([key, ttl, value], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/pttl\n   */\n  pttl = (...args) => this.chain(new PTtlCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/publish\n   */\n  publish = (...args) => this.chain(new PublishCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/randomkey\n   */\n  randomkey = () => this.chain(new RandomKeyCommand(this.commandOptions));\n  /**\n   * @see https://redis.io/commands/rename\n   */\n  rename = (...args) => this.chain(new RenameCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/renamenx\n   */\n  renamenx = (...args) => this.chain(new RenameNXCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/rpop\n   */\n  rpop = (...args) => this.chain(new RPopCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/rpush\n   */\n  rpush = (key, ...elements) => this.chain(new RPushCommand([key, ...elements], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/rpushx\n   */\n  rpushx = (key, ...elements) => this.chain(new RPushXCommand([key, ...elements], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/sadd\n   */\n  sadd = (key, member, ...members) => this.chain(new SAddCommand([key, member, ...members], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/scan\n   */\n  scan = (...args) => this.chain(new ScanCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/scard\n   */\n  scard = (...args) => this.chain(new SCardCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/script-exists\n   */\n  scriptExists = (...args) => this.chain(new ScriptExistsCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/script-flush\n   */\n  scriptFlush = (...args) => this.chain(new ScriptFlushCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/script-load\n   */\n  scriptLoad = (...args) => this.chain(new ScriptLoadCommand(args, this.commandOptions));\n  /*)*\n   * @see https://redis.io/commands/sdiff\n   */\n  sdiff = (...args) => this.chain(new SDiffCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/sdiffstore\n   */\n  sdiffstore = (...args) => this.chain(new SDiffStoreCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/set\n   */\n  set = (key, value, opts) => this.chain(new SetCommand([key, value, opts], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/setbit\n   */\n  setbit = (...args) => this.chain(new SetBitCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/setex\n   */\n  setex = (key, ttl, value) => this.chain(new SetExCommand([key, ttl, value], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/setnx\n   */\n  setnx = (key, value) => this.chain(new SetNxCommand([key, value], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/setrange\n   */\n  setrange = (...args) => this.chain(new SetRangeCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/sinter\n   */\n  sinter = (...args) => this.chain(new SInterCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/sinterstore\n   */\n  sinterstore = (...args) => this.chain(new SInterStoreCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/sismember\n   */\n  sismember = (key, member) => this.chain(new SIsMemberCommand([key, member], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/smembers\n   */\n  smembers = (...args) => this.chain(new SMembersCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/smismember\n   */\n  smismember = (key, members) => this.chain(new SMIsMemberCommand([key, members], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/smove\n   */\n  smove = (source, destination, member) => this.chain(new SMoveCommand([source, destination, member], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/spop\n   */\n  spop = (...args) => this.chain(new SPopCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/srandmember\n   */\n  srandmember = (...args) => this.chain(new SRandMemberCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/srem\n   */\n  srem = (key, ...members) => this.chain(new SRemCommand([key, ...members], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/sscan\n   */\n  sscan = (...args) => this.chain(new SScanCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/strlen\n   */\n  strlen = (...args) => this.chain(new StrLenCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/sunion\n   */\n  sunion = (...args) => this.chain(new SUnionCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/sunionstore\n   */\n  sunionstore = (...args) => this.chain(new SUnionStoreCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/time\n   */\n  time = () => this.chain(new TimeCommand(this.commandOptions));\n  /**\n   * @see https://redis.io/commands/touch\n   */\n  touch = (...args) => this.chain(new TouchCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/ttl\n   */\n  ttl = (...args) => this.chain(new TtlCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/type\n   */\n  type = (...args) => this.chain(new TypeCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/unlink\n   */\n  unlink = (...args) => this.chain(new UnlinkCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zadd\n   */\n  zadd = (...args) => {\n    if (\"score\" in args[1]) {\n      return this.chain(\n        new ZAddCommand([args[0], args[1], ...args.slice(2)], this.commandOptions)\n      );\n    }\n    return this.chain(\n      new ZAddCommand(\n        [args[0], args[1], ...args.slice(2)],\n        this.commandOptions\n      )\n    );\n  };\n  /**\n   * @see https://redis.io/commands/xadd\n   */\n  xadd = (...args) => this.chain(new XAddCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xack\n   */\n  xack = (...args) => this.chain(new XAckCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xdel\n   */\n  xdel = (...args) => this.chain(new XDelCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xgroup\n   */\n  xgroup = (...args) => this.chain(new XGroupCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xread\n   */\n  xread = (...args) => this.chain(new XReadCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xreadgroup\n   */\n  xreadgroup = (...args) => this.chain(new XReadGroupCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xinfo\n   */\n  xinfo = (...args) => this.chain(new XInfoCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xlen\n   */\n  xlen = (...args) => this.chain(new XLenCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xpending\n   */\n  xpending = (...args) => this.chain(new XPendingCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xclaim\n   */\n  xclaim = (...args) => this.chain(new XClaimCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xautoclaim\n   */\n  xautoclaim = (...args) => this.chain(new XAutoClaim(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xtrim\n   */\n  xtrim = (...args) => this.chain(new XTrimCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xrange\n   */\n  xrange = (...args) => this.chain(new XRangeCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/xrevrange\n   */\n  xrevrange = (...args) => this.chain(new XRevRangeCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zcard\n   */\n  zcard = (...args) => this.chain(new ZCardCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zcount\n   */\n  zcount = (...args) => this.chain(new ZCountCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zincrby\n   */\n  zincrby = (key, increment, member) => this.chain(new ZIncrByCommand([key, increment, member], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zinterstore\n   */\n  zinterstore = (...args) => this.chain(new ZInterStoreCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zlexcount\n   */\n  zlexcount = (...args) => this.chain(new ZLexCountCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zmscore\n   */\n  zmscore = (...args) => this.chain(new ZMScoreCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zpopmax\n   */\n  zpopmax = (...args) => this.chain(new ZPopMaxCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zpopmin\n   */\n  zpopmin = (...args) => this.chain(new ZPopMinCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zrange\n   */\n  zrange = (...args) => this.chain(new ZRangeCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zrank\n   */\n  zrank = (key, member) => this.chain(new ZRankCommand([key, member], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zrem\n   */\n  zrem = (key, ...members) => this.chain(new ZRemCommand([key, ...members], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zremrangebylex\n   */\n  zremrangebylex = (...args) => this.chain(new ZRemRangeByLexCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zremrangebyrank\n   */\n  zremrangebyrank = (...args) => this.chain(new ZRemRangeByRankCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zremrangebyscore\n   */\n  zremrangebyscore = (...args) => this.chain(new ZRemRangeByScoreCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zrevrank\n   */\n  zrevrank = (key, member) => this.chain(new ZRevRankCommand([key, member], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zscan\n   */\n  zscan = (...args) => this.chain(new ZScanCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zscore\n   */\n  zscore = (key, member) => this.chain(new ZScoreCommand([key, member], this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zunionstore\n   */\n  zunionstore = (...args) => this.chain(new ZUnionStoreCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/zunion\n   */\n  zunion = (...args) => this.chain(new ZUnionCommand(args, this.commandOptions));\n  /**\n   * @see https://redis.io/commands/?group=json\n   */\n  get json() {\n    return {\n      /**\n       * @see https://redis.io/commands/json.arrappend\n       */\n      arrappend: (...args) => this.chain(new JsonArrAppendCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.arrindex\n       */\n      arrindex: (...args) => this.chain(new JsonArrIndexCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.arrinsert\n       */\n      arrinsert: (...args) => this.chain(new JsonArrInsertCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.arrlen\n       */\n      arrlen: (...args) => this.chain(new JsonArrLenCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.arrpop\n       */\n      arrpop: (...args) => this.chain(new JsonArrPopCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.arrtrim\n       */\n      arrtrim: (...args) => this.chain(new JsonArrTrimCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.clear\n       */\n      clear: (...args) => this.chain(new JsonClearCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.del\n       */\n      del: (...args) => this.chain(new JsonDelCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.forget\n       */\n      forget: (...args) => this.chain(new JsonForgetCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.get\n       */\n      get: (...args) => this.chain(new JsonGetCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.mget\n       */\n      mget: (...args) => this.chain(new JsonMGetCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.mset\n       */\n      mset: (...args) => this.chain(new JsonMSetCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.numincrby\n       */\n      numincrby: (...args) => this.chain(new JsonNumIncrByCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.nummultby\n       */\n      nummultby: (...args) => this.chain(new JsonNumMultByCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.objkeys\n       */\n      objkeys: (...args) => this.chain(new JsonObjKeysCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.objlen\n       */\n      objlen: (...args) => this.chain(new JsonObjLenCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.resp\n       */\n      resp: (...args) => this.chain(new JsonRespCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.set\n       */\n      set: (...args) => this.chain(new JsonSetCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.strappend\n       */\n      strappend: (...args) => this.chain(new JsonStrAppendCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.strlen\n       */\n      strlen: (...args) => this.chain(new JsonStrLenCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.toggle\n       */\n      toggle: (...args) => this.chain(new JsonToggleCommand(args, this.commandOptions)),\n      /**\n       * @see https://redis.io/commands/json.type\n       */\n      type: (...args) => this.chain(new JsonTypeCommand(args, this.commandOptions))\n    };\n  }\n};\n\n// pkg/auto-pipeline.ts\nfunction createAutoPipelineProxy(_redis, json) {\n  const redis = _redis;\n  if (!redis.autoPipelineExecutor) {\n    redis.autoPipelineExecutor = new AutoPipelineExecutor(redis);\n  }\n  return new Proxy(redis, {\n    get: (redis2, command) => {\n      if (command === \"pipelineCounter\") {\n        return redis2.autoPipelineExecutor.pipelineCounter;\n      }\n      if (command === \"json\") {\n        return createAutoPipelineProxy(redis2, true);\n      }\n      const commandInRedisButNotPipeline = command in redis2 && !(command in redis2.autoPipelineExecutor.pipeline);\n      if (commandInRedisButNotPipeline) {\n        return redis2[command];\n      }\n      const isFunction = json ? typeof redis2.autoPipelineExecutor.pipeline.json[command] === \"function\" : typeof redis2.autoPipelineExecutor.pipeline[command] === \"function\";\n      if (isFunction) {\n        return (...args) => {\n          return redis2.autoPipelineExecutor.withAutoPipeline((pipeline) => {\n            if (json) {\n              pipeline.json[command](\n                ...args\n              );\n            } else {\n              pipeline[command](...args);\n            }\n          });\n        };\n      }\n      return redis2.autoPipelineExecutor.pipeline[command];\n    }\n  });\n}\nvar AutoPipelineExecutor = class {\n  pipelinePromises = /* @__PURE__ */ new WeakMap();\n  activePipeline = null;\n  indexInCurrentPipeline = 0;\n  redis;\n  pipeline;\n  // only to make sure that proxy can work\n  pipelineCounter = 0;\n  // to keep track of how many times a pipeline was executed\n  constructor(redis) {\n    this.redis = redis;\n    this.pipeline = redis.pipeline();\n  }\n  async withAutoPipeline(executeWithPipeline) {\n    const pipeline = this.activePipeline ?? this.redis.pipeline();\n    if (!this.activePipeline) {\n      this.activePipeline = pipeline;\n      this.indexInCurrentPipeline = 0;\n    }\n    const index = this.indexInCurrentPipeline++;\n    executeWithPipeline(pipeline);\n    const pipelineDone = this.deferExecution().then(() => {\n      if (!this.pipelinePromises.has(pipeline)) {\n        const pipelinePromise = pipeline.exec({ keepErrors: true });\n        this.pipelineCounter += 1;\n        this.pipelinePromises.set(pipeline, pipelinePromise);\n        this.activePipeline = null;\n      }\n      return this.pipelinePromises.get(pipeline);\n    });\n    const results = await pipelineDone;\n    const commandResult = results[index];\n    if (commandResult.error) {\n      throw new UpstashError(`Command failed: ${commandResult.error}`);\n    }\n    return commandResult.result;\n  }\n  async deferExecution() {\n    await Promise.resolve();\n    await Promise.resolve();\n  }\n};\n\n// pkg/commands/psubscribe.ts\nvar PSubscribeCommand = class extends Command {\n  constructor(cmd, opts) {\n    const sseHeaders = {\n      Accept: \"text/event-stream\",\n      \"Cache-Control\": \"no-cache\",\n      Connection: \"keep-alive\"\n    };\n    super([], {\n      ...opts,\n      headers: sseHeaders,\n      path: [\"psubscribe\", ...cmd],\n      streamOptions: {\n        isStreaming: true,\n        onMessage: opts?.streamOptions?.onMessage,\n        signal: opts?.streamOptions?.signal\n      }\n    });\n  }\n};\n\n// pkg/commands/subscribe.ts\nvar Subscriber = class extends EventTarget {\n  subscriptions;\n  client;\n  listeners;\n  constructor(client, channels, isPattern = false) {\n    super();\n    this.client = client;\n    this.subscriptions = /* @__PURE__ */ new Map();\n    this.listeners = /* @__PURE__ */ new Map();\n    for (const channel of channels) {\n      if (isPattern) {\n        this.subscribeToPattern(channel);\n      } else {\n        this.subscribeToChannel(channel);\n      }\n    }\n  }\n  subscribeToChannel(channel) {\n    const controller = new AbortController();\n    const command = new SubscribeCommand([channel], {\n      streamOptions: {\n        signal: controller.signal,\n        onMessage: (data) => this.handleMessage(data, false)\n      }\n    });\n    command.exec(this.client).catch((error) => {\n      if (error.name !== \"AbortError\") {\n        this.dispatchToListeners(\"error\", error);\n      }\n    });\n    this.subscriptions.set(channel, {\n      command,\n      controller,\n      isPattern: false\n    });\n  }\n  subscribeToPattern(pattern) {\n    const controller = new AbortController();\n    const command = new PSubscribeCommand([pattern], {\n      streamOptions: {\n        signal: controller.signal,\n        onMessage: (data) => this.handleMessage(data, true)\n      }\n    });\n    command.exec(this.client).catch((error) => {\n      if (error.name !== \"AbortError\") {\n        this.dispatchToListeners(\"error\", error);\n      }\n    });\n    this.subscriptions.set(pattern, {\n      command,\n      controller,\n      isPattern: true\n    });\n  }\n  handleMessage(data, isPattern) {\n    const messageData = data.replace(/^data:\\s*/, \"\");\n    const firstCommaIndex = messageData.indexOf(\",\");\n    const secondCommaIndex = messageData.indexOf(\",\", firstCommaIndex + 1);\n    const thirdCommaIndex = isPattern ? messageData.indexOf(\",\", secondCommaIndex + 1) : -1;\n    if (firstCommaIndex !== -1 && secondCommaIndex !== -1) {\n      const type = messageData.slice(0, firstCommaIndex);\n      if (isPattern && type === \"pmessage\" && thirdCommaIndex !== -1) {\n        const pattern = messageData.slice(firstCommaIndex + 1, secondCommaIndex);\n        const channel = messageData.slice(secondCommaIndex + 1, thirdCommaIndex);\n        const messageStr = messageData.slice(thirdCommaIndex + 1);\n        try {\n          const message = JSON.parse(messageStr);\n          this.dispatchToListeners(\"pmessage\", { pattern, channel, message });\n          this.dispatchToListeners(`pmessage:${pattern}`, { pattern, channel, message });\n        } catch (error) {\n          this.dispatchToListeners(\"error\", new Error(`Failed to parse message: ${error}`));\n        }\n      } else {\n        const channel = messageData.slice(firstCommaIndex + 1, secondCommaIndex);\n        const messageStr = messageData.slice(secondCommaIndex + 1);\n        try {\n          if (type === \"subscribe\" || type === \"psubscribe\" || type === \"unsubscribe\" || type === \"punsubscribe\") {\n            const count = Number.parseInt(messageStr);\n            this.dispatchToListeners(type, count);\n          } else {\n            const message = JSON.parse(messageStr);\n            this.dispatchToListeners(type, { channel, message });\n            this.dispatchToListeners(`${type}:${channel}`, { channel, message });\n          }\n        } catch (error) {\n          this.dispatchToListeners(\"error\", new Error(`Failed to parse message: ${error}`));\n        }\n      }\n    }\n  }\n  dispatchToListeners(type, data) {\n    const listeners = this.listeners.get(type);\n    if (listeners) {\n      for (const listener of listeners) {\n        listener(data);\n      }\n    }\n  }\n  on(type, listener) {\n    if (!this.listeners.has(type)) {\n      this.listeners.set(type, /* @__PURE__ */ new Set());\n    }\n    this.listeners.get(type)?.add(listener);\n  }\n  removeAllListeners() {\n    this.listeners.clear();\n  }\n  async unsubscribe(channels) {\n    if (channels) {\n      for (const channel of channels) {\n        const subscription = this.subscriptions.get(channel);\n        if (subscription) {\n          try {\n            subscription.controller.abort();\n          } catch {\n          }\n          this.subscriptions.delete(channel);\n        }\n      }\n    } else {\n      for (const subscription of this.subscriptions.values()) {\n        try {\n          subscription.controller.abort();\n        } catch {\n        }\n      }\n      this.subscriptions.clear();\n      this.removeAllListeners();\n    }\n  }\n  getSubscribedChannels() {\n    return [...this.subscriptions.keys()];\n  }\n};\nvar SubscribeCommand = class extends Command {\n  constructor(cmd, opts) {\n    const sseHeaders = {\n      Accept: \"text/event-stream\",\n      \"Cache-Control\": \"no-cache\",\n      Connection: \"keep-alive\"\n    };\n    super([], {\n      ...opts,\n      headers: sseHeaders,\n      path: [\"subscribe\", ...cmd],\n      streamOptions: {\n        isStreaming: true,\n        onMessage: opts?.streamOptions?.onMessage,\n        signal: opts?.streamOptions?.signal\n      }\n    });\n  }\n};\n\n// pkg/script.ts\nimport Hex from \"crypto-js/enc-hex.js\";\nimport sha1 from \"crypto-js/sha1.js\";\nvar Script = class {\n  script;\n  sha1;\n  redis;\n  constructor(redis, script) {\n    this.redis = redis;\n    this.sha1 = this.digest(script);\n    this.script = script;\n  }\n  /**\n   * Send an `EVAL` command to redis.\n   */\n  async eval(keys, args) {\n    return await this.redis.eval(this.script, keys, args);\n  }\n  /**\n   * Calculates the sha1 hash of the script and then calls `EVALSHA`.\n   */\n  async evalsha(keys, args) {\n    return await this.redis.evalsha(this.sha1, keys, args);\n  }\n  /**\n   * Optimistically try to run `EVALSHA` first.\n   * If the script is not loaded in redis, it will fall back and try again with `EVAL`.\n   *\n   * Following calls will be able to use the cached script\n   */\n  async exec(keys, args) {\n    const res = await this.redis.evalsha(this.sha1, keys, args).catch(async (error) => {\n      if (error instanceof Error && error.message.toLowerCase().includes(\"noscript\")) {\n        return await this.redis.eval(this.script, keys, args);\n      }\n      throw error;\n    });\n    return res;\n  }\n  /**\n   * Compute the sha1 hash of the script and return its hex representation.\n   */\n  digest(s) {\n    return Hex.stringify(sha1(s));\n  }\n};\n\n// pkg/redis.ts\nvar Redis = class {\n  client;\n  opts;\n  enableTelemetry;\n  enableAutoPipelining;\n  /**\n   * Create a new redis client\n   *\n   * @example\n   * ```typescript\n   * const redis = new Redis({\n   *  url: \"<UPSTASH_REDIS_REST_URL>\",\n   *  token: \"<UPSTASH_REDIS_REST_TOKEN>\",\n   * });\n   * ```\n   */\n  constructor(client, opts) {\n    this.client = client;\n    this.opts = opts;\n    this.enableTelemetry = opts?.enableTelemetry ?? true;\n    if (opts?.readYourWrites === false) {\n      this.client.readYourWrites = false;\n    }\n    this.enableAutoPipelining = opts?.enableAutoPipelining ?? true;\n  }\n  get readYourWritesSyncToken() {\n    return this.client.upstashSyncToken;\n  }\n  set readYourWritesSyncToken(session) {\n    this.client.upstashSyncToken = session;\n  }\n  get json() {\n    return {\n      /**\n       * @see https://redis.io/commands/json.arrappend\n       */\n      arrappend: (...args) => new JsonArrAppendCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.arrindex\n       */\n      arrindex: (...args) => new JsonArrIndexCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.arrinsert\n       */\n      arrinsert: (...args) => new JsonArrInsertCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.arrlen\n       */\n      arrlen: (...args) => new JsonArrLenCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.arrpop\n       */\n      arrpop: (...args) => new JsonArrPopCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.arrtrim\n       */\n      arrtrim: (...args) => new JsonArrTrimCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.clear\n       */\n      clear: (...args) => new JsonClearCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.del\n       */\n      del: (...args) => new JsonDelCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.forget\n       */\n      forget: (...args) => new JsonForgetCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.get\n       */\n      get: (...args) => new JsonGetCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.mget\n       */\n      mget: (...args) => new JsonMGetCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.mset\n       */\n      mset: (...args) => new JsonMSetCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.numincrby\n       */\n      numincrby: (...args) => new JsonNumIncrByCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.nummultby\n       */\n      nummultby: (...args) => new JsonNumMultByCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.objkeys\n       */\n      objkeys: (...args) => new JsonObjKeysCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.objlen\n       */\n      objlen: (...args) => new JsonObjLenCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.resp\n       */\n      resp: (...args) => new JsonRespCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.set\n       */\n      set: (...args) => new JsonSetCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.strappend\n       */\n      strappend: (...args) => new JsonStrAppendCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.strlen\n       */\n      strlen: (...args) => new JsonStrLenCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.toggle\n       */\n      toggle: (...args) => new JsonToggleCommand(args, this.opts).exec(this.client),\n      /**\n       * @see https://redis.io/commands/json.type\n       */\n      type: (...args) => new JsonTypeCommand(args, this.opts).exec(this.client)\n    };\n  }\n  /**\n   * Wrap a new middleware around the HTTP client.\n   */\n  use = (middleware) => {\n    const makeRequest = this.client.request.bind(this.client);\n    this.client.request = (req) => middleware(req, makeRequest);\n  };\n  /**\n   * Technically this is not private, we can hide it from intellisense by doing this\n   */\n  addTelemetry = (telemetry) => {\n    if (!this.enableTelemetry) {\n      return;\n    }\n    try {\n      this.client.mergeTelemetry(telemetry);\n    } catch {\n    }\n  };\n  createScript(script) {\n    return new Script(this, script);\n  }\n  /**\n   * Create a new pipeline that allows you to send requests in bulk.\n   *\n   * @see {@link Pipeline}\n   */\n  pipeline = () => new Pipeline({\n    client: this.client,\n    commandOptions: this.opts,\n    multiExec: false\n  });\n  autoPipeline = () => {\n    return createAutoPipelineProxy(this);\n  };\n  /**\n   * Create a new transaction to allow executing multiple steps atomically.\n   *\n   * All the commands in a transaction are serialized and executed sequentially. A request sent by\n   * another client will never be served in the middle of the execution of a Redis Transaction. This\n   * guarantees that the commands are executed as a single isolated operation.\n   *\n   * @see {@link Pipeline}\n   */\n  multi = () => new Pipeline({\n    client: this.client,\n    commandOptions: this.opts,\n    multiExec: true\n  });\n  /**\n   * Returns an instance that can be used to execute `BITFIELD` commands on one key.\n   *\n   * @example\n   * ```typescript\n   * redis.set(\"mykey\", 0);\n   * const result = await redis.bitfield(\"mykey\")\n   *   .set(\"u4\", 0, 16)\n   *   .incr(\"u4\", \"#1\", 1)\n   *   .exec();\n   * console.log(result); // [0, 1]\n   * ```\n   *\n   * @see https://redis.io/commands/bitfield\n   */\n  bitfield = (...args) => new BitFieldCommand(args, this.client, this.opts);\n  /**\n   * @see https://redis.io/commands/append\n   */\n  append = (...args) => new AppendCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/bitcount\n   */\n  bitcount = (...args) => new BitCountCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/bitop\n   */\n  bitop = (op, destinationKey, sourceKey, ...sourceKeys) => new BitOpCommand([op, destinationKey, sourceKey, ...sourceKeys], this.opts).exec(\n    this.client\n  );\n  /**\n   * @see https://redis.io/commands/bitpos\n   */\n  bitpos = (...args) => new BitPosCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/copy\n   */\n  copy = (...args) => new CopyCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/dbsize\n   */\n  dbsize = () => new DBSizeCommand(this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/decr\n   */\n  decr = (...args) => new DecrCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/decrby\n   */\n  decrby = (...args) => new DecrByCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/del\n   */\n  del = (...args) => new DelCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/echo\n   */\n  echo = (...args) => new EchoCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/eval\n   */\n  eval = (...args) => new EvalCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/evalsha\n   */\n  evalsha = (...args) => new EvalshaCommand(args, this.opts).exec(this.client);\n  /**\n   * Generic method to execute any Redis command.\n   */\n  exec = (args) => new ExecCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/exists\n   */\n  exists = (...args) => new ExistsCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/expire\n   */\n  expire = (...args) => new ExpireCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/expireat\n   */\n  expireat = (...args) => new ExpireAtCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/flushall\n   */\n  flushall = (args) => new FlushAllCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/flushdb\n   */\n  flushdb = (...args) => new FlushDBCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/geoadd\n   */\n  geoadd = (...args) => new GeoAddCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/geopos\n   */\n  geopos = (...args) => new GeoPosCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/geodist\n   */\n  geodist = (...args) => new GeoDistCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/geohash\n   */\n  geohash = (...args) => new GeoHashCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/geosearch\n   */\n  geosearch = (...args) => new GeoSearchCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/geosearchstore\n   */\n  geosearchstore = (...args) => new GeoSearchStoreCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/get\n   */\n  get = (...args) => new GetCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/getbit\n   */\n  getbit = (...args) => new GetBitCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/getdel\n   */\n  getdel = (...args) => new GetDelCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/getex\n   */\n  getex = (...args) => new GetExCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/getrange\n   */\n  getrange = (...args) => new GetRangeCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/getset\n   */\n  getset = (key, value) => new GetSetCommand([key, value], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hdel\n   */\n  hdel = (...args) => new HDelCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hexists\n   */\n  hexists = (...args) => new HExistsCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hget\n   */\n  hget = (...args) => new HGetCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hgetall\n   */\n  hgetall = (...args) => new HGetAllCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hincrby\n   */\n  hincrby = (...args) => new HIncrByCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hincrbyfloat\n   */\n  hincrbyfloat = (...args) => new HIncrByFloatCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hkeys\n   */\n  hkeys = (...args) => new HKeysCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hlen\n   */\n  hlen = (...args) => new HLenCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hmget\n   */\n  hmget = (...args) => new HMGetCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hmset\n   */\n  hmset = (key, kv) => new HMSetCommand([key, kv], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hrandfield\n   */\n  hrandfield = (key, count, withValues) => new HRandFieldCommand([key, count, withValues], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hscan\n   */\n  hscan = (...args) => new HScanCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hset\n   */\n  hset = (key, kv) => new HSetCommand([key, kv], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hsetnx\n   */\n  hsetnx = (key, field, value) => new HSetNXCommand([key, field, value], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hstrlen\n   */\n  hstrlen = (...args) => new HStrLenCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/hvals\n   */\n  hvals = (...args) => new HValsCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/incr\n   */\n  incr = (...args) => new IncrCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/incrby\n   */\n  incrby = (...args) => new IncrByCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/incrbyfloat\n   */\n  incrbyfloat = (...args) => new IncrByFloatCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/keys\n   */\n  keys = (...args) => new KeysCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lindex\n   */\n  lindex = (...args) => new LIndexCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/linsert\n   */\n  linsert = (key, direction, pivot, value) => new LInsertCommand([key, direction, pivot, value], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/llen\n   */\n  llen = (...args) => new LLenCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lmove\n   */\n  lmove = (...args) => new LMoveCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lpop\n   */\n  lpop = (...args) => new LPopCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lmpop\n   */\n  lmpop = (...args) => new LmPopCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lpos\n   */\n  lpos = (...args) => new LPosCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lpush\n   */\n  lpush = (key, ...elements) => new LPushCommand([key, ...elements], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lpushx\n   */\n  lpushx = (key, ...elements) => new LPushXCommand([key, ...elements], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lrange\n   */\n  lrange = (...args) => new LRangeCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lrem\n   */\n  lrem = (key, count, value) => new LRemCommand([key, count, value], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/lset\n   */\n  lset = (key, index, value) => new LSetCommand([key, index, value], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/ltrim\n   */\n  ltrim = (...args) => new LTrimCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/mget\n   */\n  mget = (...args) => new MGetCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/mset\n   */\n  mset = (kv) => new MSetCommand([kv], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/msetnx\n   */\n  msetnx = (kv) => new MSetNXCommand([kv], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/persist\n   */\n  persist = (...args) => new PersistCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/pexpire\n   */\n  pexpire = (...args) => new PExpireCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/pexpireat\n   */\n  pexpireat = (...args) => new PExpireAtCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/pfadd\n   */\n  pfadd = (...args) => new PfAddCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/pfcount\n   */\n  pfcount = (...args) => new PfCountCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/pfmerge\n   */\n  pfmerge = (...args) => new PfMergeCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/ping\n   */\n  ping = (args) => new PingCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/psetex\n   */\n  psetex = (key, ttl, value) => new PSetEXCommand([key, ttl, value], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/psubscribe\n   */\n  psubscribe = (patterns) => {\n    const patternArray = Array.isArray(patterns) ? patterns : [patterns];\n    return new Subscriber(this.client, patternArray, true);\n  };\n  /**\n   * @see https://redis.io/commands/pttl\n   */\n  pttl = (...args) => new PTtlCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/publish\n   */\n  publish = (...args) => new PublishCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/randomkey\n   */\n  randomkey = () => new RandomKeyCommand().exec(this.client);\n  /**\n   * @see https://redis.io/commands/rename\n   */\n  rename = (...args) => new RenameCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/renamenx\n   */\n  renamenx = (...args) => new RenameNXCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/rpop\n   */\n  rpop = (...args) => new RPopCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/rpush\n   */\n  rpush = (key, ...elements) => new RPushCommand([key, ...elements], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/rpushx\n   */\n  rpushx = (key, ...elements) => new RPushXCommand([key, ...elements], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/sadd\n   */\n  sadd = (key, member, ...members) => new SAddCommand([key, member, ...members], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/scan\n   */\n  scan = (...args) => new ScanCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/scard\n   */\n  scard = (...args) => new SCardCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/script-exists\n   */\n  scriptExists = (...args) => new ScriptExistsCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/script-flush\n   */\n  scriptFlush = (...args) => new ScriptFlushCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/script-load\n   */\n  scriptLoad = (...args) => new ScriptLoadCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/sdiff\n   */\n  sdiff = (...args) => new SDiffCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/sdiffstore\n   */\n  sdiffstore = (...args) => new SDiffStoreCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/set\n   */\n  set = (key, value, opts) => new SetCommand([key, value, opts], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/setbit\n   */\n  setbit = (...args) => new SetBitCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/setex\n   */\n  setex = (key, ttl, value) => new SetExCommand([key, ttl, value], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/setnx\n   */\n  setnx = (key, value) => new SetNxCommand([key, value], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/setrange\n   */\n  setrange = (...args) => new SetRangeCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/sinter\n   */\n  sinter = (...args) => new SInterCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/sinterstore\n   */\n  sinterstore = (...args) => new SInterStoreCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/sismember\n   */\n  sismember = (key, member) => new SIsMemberCommand([key, member], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/smismember\n   */\n  smismember = (key, members) => new SMIsMemberCommand([key, members], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/smembers\n   */\n  smembers = (...args) => new SMembersCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/smove\n   */\n  smove = (source, destination, member) => new SMoveCommand([source, destination, member], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/spop\n   */\n  spop = (...args) => new SPopCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/srandmember\n   */\n  srandmember = (...args) => new SRandMemberCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/srem\n   */\n  srem = (key, ...members) => new SRemCommand([key, ...members], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/sscan\n   */\n  sscan = (...args) => new SScanCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/strlen\n   */\n  strlen = (...args) => new StrLenCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/subscribe\n   */\n  subscribe = (channels) => {\n    const channelArray = Array.isArray(channels) ? channels : [channels];\n    return new Subscriber(this.client, channelArray);\n  };\n  /**\n   * @see https://redis.io/commands/sunion\n   */\n  sunion = (...args) => new SUnionCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/sunionstore\n   */\n  sunionstore = (...args) => new SUnionStoreCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/time\n   */\n  time = () => new TimeCommand().exec(this.client);\n  /**\n   * @see https://redis.io/commands/touch\n   */\n  touch = (...args) => new TouchCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/ttl\n   */\n  ttl = (...args) => new TtlCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/type\n   */\n  type = (...args) => new TypeCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/unlink\n   */\n  unlink = (...args) => new UnlinkCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xadd\n   */\n  xadd = (...args) => new XAddCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xack\n   */\n  xack = (...args) => new XAckCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xdel\n   */\n  xdel = (...args) => new XDelCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xgroup\n   */\n  xgroup = (...args) => new XGroupCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xread\n   */\n  xread = (...args) => new XReadCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xreadgroup\n   */\n  xreadgroup = (...args) => new XReadGroupCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xinfo\n   */\n  xinfo = (...args) => new XInfoCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xlen\n   */\n  xlen = (...args) => new XLenCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xpending\n   */\n  xpending = (...args) => new XPendingCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xclaim\n   */\n  xclaim = (...args) => new XClaimCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xautoclaim\n   */\n  xautoclaim = (...args) => new XAutoClaim(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xtrim\n   */\n  xtrim = (...args) => new XTrimCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xrange\n   */\n  xrange = (...args) => new XRangeCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/xrevrange\n   */\n  xrevrange = (...args) => new XRevRangeCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zadd\n   */\n  zadd = (...args) => {\n    if (\"score\" in args[1]) {\n      return new ZAddCommand([args[0], args[1], ...args.slice(2)], this.opts).exec(\n        this.client\n      );\n    }\n    return new ZAddCommand(\n      [args[0], args[1], ...args.slice(2)],\n      this.opts\n    ).exec(this.client);\n  };\n  /**\n   * @see https://redis.io/commands/zcard\n   */\n  zcard = (...args) => new ZCardCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zcount\n   */\n  zcount = (...args) => new ZCountCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zdiffstore\n   */\n  zdiffstore = (...args) => new ZDiffStoreCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zincrby\n   */\n  zincrby = (key, increment, member) => new ZIncrByCommand([key, increment, member], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zinterstore\n   */\n  zinterstore = (...args) => new ZInterStoreCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zlexcount\n   */\n  zlexcount = (...args) => new ZLexCountCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zmscore\n   */\n  zmscore = (...args) => new ZMScoreCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zpopmax\n   */\n  zpopmax = (...args) => new ZPopMaxCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zpopmin\n   */\n  zpopmin = (...args) => new ZPopMinCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zrange\n   */\n  zrange = (...args) => new ZRangeCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zrank\n   */\n  zrank = (key, member) => new ZRankCommand([key, member], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zrem\n   */\n  zrem = (key, ...members) => new ZRemCommand([key, ...members], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zremrangebylex\n   */\n  zremrangebylex = (...args) => new ZRemRangeByLexCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zremrangebyrank\n   */\n  zremrangebyrank = (...args) => new ZRemRangeByRankCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zremrangebyscore\n   */\n  zremrangebyscore = (...args) => new ZRemRangeByScoreCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zrevrank\n   */\n  zrevrank = (key, member) => new ZRevRankCommand([key, member], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zscan\n   */\n  zscan = (...args) => new ZScanCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zscore\n   */\n  zscore = (key, member) => new ZScoreCommand([key, member], this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zunion\n   */\n  zunion = (...args) => new ZUnionCommand(args, this.opts).exec(this.client);\n  /**\n   * @see https://redis.io/commands/zunionstore\n   */\n  zunionstore = (...args) => new ZUnionStoreCommand(args, this.opts).exec(this.client);\n};\n\n// version.ts\nvar VERSION = \"v1.34.6\";\n\nexport {\n  error_exports,\n  HttpClient,\n  Redis,\n  VERSION\n};\n","import {\n  HttpClient,\n  Redis,\n  VERSION,\n  error_exports\n} from \"./chunk-56TVFNIH.mjs\";\n\n// platforms/nodejs.ts\nif (typeof atob === \"undefined\") {\n  global.atob = (b64) => Buffer.from(b64, \"base64\").toString(\"utf8\");\n}\nvar Redis2 = class _Redis extends Redis {\n  /**\n   * Create a new redis client by providing a custom `Requester` implementation\n   *\n   * @example\n   * ```ts\n   *\n   * import { UpstashRequest, Requester, UpstashResponse, Redis } from \"@upstash/redis\"\n   *\n   *  const requester: Requester = {\n   *    request: <TResult>(req: UpstashRequest): Promise<UpstashResponse<TResult>> => {\n   *      // ...\n   *    }\n   *  }\n   *\n   * const redis = new Redis(requester)\n   * ```\n   */\n  constructor(configOrRequester) {\n    if (\"request\" in configOrRequester) {\n      super(configOrRequester);\n      return;\n    }\n    if (!configOrRequester.url) {\n      console.warn(\n        `[Upstash Redis] The 'url' property is missing or undefined in your Redis config.`\n      );\n    } else if (configOrRequester.url.startsWith(\" \") || configOrRequester.url.endsWith(\" \") || /\\r|\\n/.test(configOrRequester.url)) {\n      console.warn(\n        \"[Upstash Redis] The redis url contains whitespace or newline, which can cause errors!\"\n      );\n    }\n    if (!configOrRequester.token) {\n      console.warn(\n        `[Upstash Redis] The 'token' property is missing or undefined in your Redis config.`\n      );\n    } else if (configOrRequester.token.startsWith(\" \") || configOrRequester.token.endsWith(\" \") || /\\r|\\n/.test(configOrRequester.token)) {\n      console.warn(\n        \"[Upstash Redis] The redis token contains whitespace or newline, which can cause errors!\"\n      );\n    }\n    const client = new HttpClient({\n      baseUrl: configOrRequester.url,\n      retry: configOrRequester.retry,\n      headers: { authorization: `Bearer ${configOrRequester.token}` },\n      agent: configOrRequester.agent,\n      responseEncoding: configOrRequester.responseEncoding,\n      cache: configOrRequester.cache ?? \"no-store\",\n      signal: configOrRequester.signal,\n      keepAlive: configOrRequester.keepAlive,\n      readYourWrites: configOrRequester.readYourWrites\n    });\n    super(client, {\n      automaticDeserialization: configOrRequester.automaticDeserialization,\n      enableTelemetry: !process.env.UPSTASH_DISABLE_TELEMETRY,\n      latencyLogging: configOrRequester.latencyLogging,\n      enableAutoPipelining: configOrRequester.enableAutoPipelining\n    });\n    this.addTelemetry({\n      runtime: (\n        // @ts-expect-error to silence compiler\n        typeof EdgeRuntime === \"string\" ? \"edge-light\" : `node@${process.version}`\n      ),\n      platform: process.env.VERCEL ? \"vercel\" : process.env.AWS_REGION ? \"aws\" : \"unknown\",\n      sdk: `@upstash/redis@${VERSION}`\n    });\n    if (this.enableAutoPipelining) {\n      return this.autoPipeline();\n    }\n  }\n  /**\n   * Create a new Upstash Redis instance from environment variables.\n   *\n   * Use this to automatically load connection secrets from your environment\n   * variables. For instance when using the Vercel integration.\n   *\n   * This tries to load `UPSTASH_REDIS_REST_URL` and `UPSTASH_REDIS_REST_TOKEN` from\n   * your environment using `process.env`.\n   */\n  static fromEnv(config) {\n    if (process.env === void 0) {\n      throw new TypeError(\n        '[Upstash Redis] Unable to get environment variables, `process.env` is undefined. If you are deploying to cloudflare, please import from \"@upstash/redis/cloudflare\" instead'\n      );\n    }\n    const url = process.env.UPSTASH_REDIS_REST_URL || process.env.KV_REST_API_URL;\n    if (!url) {\n      console.warn(\"[Upstash Redis] Unable to find environment variable: `UPSTASH_REDIS_REST_URL`\");\n    }\n    const token = process.env.UPSTASH_REDIS_REST_TOKEN || process.env.KV_REST_API_TOKEN;\n    if (!token) {\n      console.warn(\n        \"[Upstash Redis] Unable to find environment variable: `UPSTASH_REDIS_REST_TOKEN`\"\n      );\n    }\n    return new _Redis({ ...config, url, token });\n  }\n};\nexport {\n  Redis2 as Redis,\n  error_exports as errors\n};\n","import { Redis } from '@upstash/redis';\nimport { config } from '../config';\n\n// Create Redis client\nlet redis: Redis | null = null;\n\n// Try to initialize Redis if configuration is available\ntry {\n  if (config.redis?.url && config.redis?.token) {\n    redis = new Redis({\n      url: config.redis.url,\n      token: config.redis.token,\n    });\n    console.log('Redis client initialized');\n  } else {\n    console.warn('Redis configuration missing, some features will be disabled');\n  }\n} catch (error) {\n  console.error('Failed to initialize Redis client:', error);\n}\n\n/**\n * Redis service for caching and rate limiting\n */\nexport const redisService = {\n  /**\n   * Check if Redis is available\n   */\n  isAvailable(): boolean {\n    return redis !== null\n  },\n\n  /**\n   * Get a value from Redis\n   */\n  async get(key: string): Promise<string | null> {\n    if (!redis) return null\n    try {\n      return (await redis.get(key)) as string | null\n    } catch (error) {\n      console.error(`Redis get error for key \"${key}\":`, error)\n      return null\n    }\n  },\n\n  /**\n   * Set a value in Redis with optional expiration\n   */\n  async set(key: string, value: string, expireSeconds?: number): Promise<void> {\n    if (!redis) return\n    try {\n      if (expireSeconds) {\n        await redis.set(key, value, { ex: expireSeconds })\n      } else {\n        await redis.set(key, value)\n      }\n    } catch (error) {\n      console.error(`Redis set error for key \"${key}\":`, error)\n    }\n  },\n\n  /**\n   * Delete a key from Redis\n   */\n  async delete(key: string): Promise<void> {\n    if (!redis) return\n    try {\n      await redis.del(key)\n    } catch (error) {\n      console.error(`Redis delete error for key \"${key}\":`, error)\n    }\n  },\n\n  /**\n   * Delete keys matching a pattern\n   */\n  async deleteByPattern(pattern: string): Promise<void> {\n    if (!redis) return\n    try {\n      // Scan for keys matching pattern\n      const keys = await redis.keys(pattern)\n      if (keys && keys.length > 0) {\n        // Delete all matching keys\n        await redis.del(...keys)\n      }\n    } catch (error) {\n      console.error(`Redis delete by pattern error for \"${pattern}\":`, error)\n    }\n  },\n\n  /**\n   * Check if a token is blacklisted\n   */\n  async isTokenBlacklisted(token: string): Promise<boolean> {\n    if (!redis) return false\n    try {\n      const key = `blacklist:${token}`\n      const blacklisted = await redis.get(key)\n      return !!blacklisted\n    } catch (error) {\n      console.error(\"Redis token blacklist check error:\", error)\n      return false\n    }\n  },\n\n  /**\n   * Add a token to the blacklist with expiration\n   */\n  async blacklistToken(\n    token: string,\n    expireSeconds: number = 86400\n  ): Promise<void> {\n    if (!redis) return\n    try {\n      const key = `blacklist:${token}`\n      await redis.set(key, \"1\", { ex: expireSeconds })\n    } catch (error) {\n      console.error(\"Redis token blacklist error:\", error)\n    }\n  },\n\n  /**\n   * Increment a rate limit counter\n   */\n  async incrementRateLimit(\n    key: string,\n    expireSeconds: number\n  ): Promise<number> {\n    if (!redis) return 0\n    try {\n      // Increment counter and set expiration if it's a new key\n      const count = await redis.incr(key)\n      if (count === 1) {\n        await redis.expire(key, expireSeconds)\n      }\n      return count\n    } catch (error) {\n      console.error(`Redis rate limit error for key \"${key}\":`, error)\n      return 0\n    }\n  },\n\n  /**\n   * Get rate limit counter\n   */\n  async getRateLimit(key: string): Promise<number> {\n    if (!redis) return 0\n    try {\n      const count = await redis.get(key)\n      return count ? Number(count) : 0\n    } catch (error) {\n      console.error(`Redis get rate limit error for key \"${key}\":`, error)\n      return 0\n    }\n  },\n\n  /**\n   * Get time-to-live (TTL) for a key\n   */\n  async getTTL(key: string): Promise<number> {\n    if (!redis) return 0\n    try {\n      return await redis.ttl(key)\n    } catch (error) {\n      console.error(`Redis TTL error for key \"${key}\":`, error)\n      return 0\n    }\n  },\n\n  /**\n   * Get TTL for a rate limit key\n   */\n  async getRateLimitTTL(key: string): Promise<number> {\n    return this.getTTL(key)\n  },\n\n  /**\n   * Decrement a rate limit counter (for successful requests)\n   */\n  async decrementRateLimit(key: string): Promise<number> {\n    if (!redis) return 0\n    try {\n      const count = await redis.decr(key)\n      // If count goes below 0, reset to 0\n      if (count < 0) {\n        await redis.set(key, 0)\n        return 0\n      }\n      return count\n    } catch (error) {\n      console.error(`Redis decrement rate limit error for key \"${key}\":`, error)\n      return 0\n    }\n  },\n\n  /**\n   * Reset a rate limit counter\n   */\n  async resetRateLimit(key: string): Promise<void> {\n    if (!redis) return\n    try {\n      await redis.del(key)\n    } catch (error) {\n      console.error(`Redis reset rate limit error for key \"${key}\":`, error)\n    }\n  },\n}\n","\"use strict\";var mu=Object.create;var Jt=Object.defineProperty;var fu=Object.getOwnPropertyDescriptor;var gu=Object.getOwnPropertyNames;var hu=Object.getPrototypeOf,yu=Object.prototype.hasOwnProperty;var Eu=(e,t,r)=>t in e?Jt(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var K=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Wt=(e,t)=>{for(var r in t)Jt(e,r,{get:t[r],enumerable:!0})},Ao=(e,t,r,n)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let i of gu(t))!yu.call(e,i)&&i!==r&&Jt(e,i,{get:()=>t[i],enumerable:!(n=fu(t,i))||n.enumerable});return e};var D=(e,t,r)=>(r=e!=null?mu(hu(e)):{},Ao(t||!e||!e.__esModule?Jt(r,\"default\",{value:e,enumerable:!0}):r,e)),bu=e=>Ao(Jt({},\"__esModule\",{value:!0}),e);var d=(e,t,r)=>Eu(e,typeof t!=\"symbol\"?t+\"\":t,r);var Zo=K((Kf,pi)=>{\"use strict\";var v=pi.exports;pi.exports.default=v;var N=\"\\x1B[\",Zt=\"\\x1B]\",gt=\"\\x07\",Kr=\";\",zo=process.env.TERM_PROGRAM===\"Apple_Terminal\";v.cursorTo=(e,t)=>{if(typeof e!=\"number\")throw new TypeError(\"The `x` argument is required\");return typeof t!=\"number\"?N+(e+1)+\"G\":N+(t+1)+\";\"+(e+1)+\"H\"};v.cursorMove=(e,t)=>{if(typeof e!=\"number\")throw new TypeError(\"The `x` argument is required\");let r=\"\";return e<0?r+=N+-e+\"D\":e>0&&(r+=N+e+\"C\"),t<0?r+=N+-t+\"A\":t>0&&(r+=N+t+\"B\"),r};v.cursorUp=(e=1)=>N+e+\"A\";v.cursorDown=(e=1)=>N+e+\"B\";v.cursorForward=(e=1)=>N+e+\"C\";v.cursorBackward=(e=1)=>N+e+\"D\";v.cursorLeft=N+\"G\";v.cursorSavePosition=zo?\"\\x1B7\":N+\"s\";v.cursorRestorePosition=zo?\"\\x1B8\":N+\"u\";v.cursorGetPosition=N+\"6n\";v.cursorNextLine=N+\"E\";v.cursorPrevLine=N+\"F\";v.cursorHide=N+\"?25l\";v.cursorShow=N+\"?25h\";v.eraseLines=e=>{let t=\"\";for(let r=0;r<e;r++)t+=v.eraseLine+(r<e-1?v.cursorUp():\"\");return e&&(t+=v.cursorLeft),t};v.eraseEndLine=N+\"K\";v.eraseStartLine=N+\"1K\";v.eraseLine=N+\"2K\";v.eraseDown=N+\"J\";v.eraseUp=N+\"1J\";v.eraseScreen=N+\"2J\";v.scrollUp=N+\"S\";v.scrollDown=N+\"T\";v.clearScreen=\"\\x1Bc\";v.clearTerminal=process.platform===\"win32\"?`${v.eraseScreen}${N}0f`:`${v.eraseScreen}${N}3J${N}H`;v.beep=gt;v.link=(e,t)=>[Zt,\"8\",Kr,Kr,t,gt,e,Zt,\"8\",Kr,Kr,gt].join(\"\");v.image=(e,t={})=>{let r=`${Zt}1337;File=inline=1`;return t.width&&(r+=`;width=${t.width}`),t.height&&(r+=`;height=${t.height}`),t.preserveAspectRatio===!1&&(r+=\";preserveAspectRatio=0\"),r+\":\"+e.toString(\"base64\")+gt};v.iTerm={setCwd:(e=process.cwd())=>`${Zt}50;CurrentDir=${e}${gt}`,annotation:(e,t={})=>{let r=`${Zt}1337;`,n=typeof t.x<\"u\",i=typeof t.y<\"u\";if((n||i)&&!(n&&i&&typeof t.length<\"u\"))throw new Error(\"`x`, `y` and `length` must be defined when `x` or `y` is defined\");return e=e.replace(/\\|/g,\"\"),r+=t.isHidden?\"AddHiddenAnnotation=\":\"AddAnnotation=\",t.length>0?r+=(n?[e,t.length,t.x,t.y]:[t.length,e]).join(\"|\"):r+=e,r+gt}}});var di=K((Yf,Xo)=>{\"use strict\";Xo.exports=(e,t=process.argv)=>{let r=e.startsWith(\"-\")?\"\":e.length===1?\"-\":\"--\",n=t.indexOf(r+e),i=t.indexOf(\"--\");return n!==-1&&(i===-1||n<i)}});var rs=K((zf,ts)=>{\"use strict\";var ac=require(\"os\"),es=require(\"tty\"),he=di(),{env:W}=process,We;he(\"no-color\")||he(\"no-colors\")||he(\"color=false\")||he(\"color=never\")?We=0:(he(\"color\")||he(\"colors\")||he(\"color=true\")||he(\"color=always\"))&&(We=1);\"FORCE_COLOR\"in W&&(W.FORCE_COLOR===\"true\"?We=1:W.FORCE_COLOR===\"false\"?We=0:We=W.FORCE_COLOR.length===0?1:Math.min(parseInt(W.FORCE_COLOR,10),3));function mi(e){return e===0?!1:{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}function fi(e,t){if(We===0)return 0;if(he(\"color=16m\")||he(\"color=full\")||he(\"color=truecolor\"))return 3;if(he(\"color=256\"))return 2;if(e&&!t&&We===void 0)return 0;let r=We||0;if(W.TERM===\"dumb\")return r;if(process.platform===\"win32\"){let n=ac.release().split(\".\");return Number(n[0])>=10&&Number(n[2])>=10586?Number(n[2])>=14931?3:2:1}if(\"CI\"in W)return[\"TRAVIS\",\"CIRCLECI\",\"APPVEYOR\",\"GITLAB_CI\",\"GITHUB_ACTIONS\",\"BUILDKITE\"].some(n=>n in W)||W.CI_NAME===\"codeship\"?1:r;if(\"TEAMCITY_VERSION\"in W)return/^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(W.TEAMCITY_VERSION)?1:0;if(W.COLORTERM===\"truecolor\")return 3;if(\"TERM_PROGRAM\"in W){let n=parseInt((W.TERM_PROGRAM_VERSION||\"\").split(\".\")[0],10);switch(W.TERM_PROGRAM){case\"iTerm.app\":return n>=3?3:2;case\"Apple_Terminal\":return 2}}return/-256(color)?$/i.test(W.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(W.TERM)||\"COLORTERM\"in W?1:r}function lc(e){let t=fi(e,e&&e.isTTY);return mi(t)}ts.exports={supportsColor:lc,stdout:mi(fi(!0,es.isatty(1))),stderr:mi(fi(!0,es.isatty(2)))}});var os=K((Zf,is)=>{\"use strict\";var uc=rs(),ht=di();function ns(e){if(/^\\d{3,4}$/.test(e)){let r=/(\\d{1,2})(\\d{2})/.exec(e);return{major:0,minor:parseInt(r[1],10),patch:parseInt(r[2],10)}}let t=(e||\"\").split(\".\").map(r=>parseInt(r,10));return{major:t[0],minor:t[1],patch:t[2]}}function gi(e){let{env:t}=process;if(\"FORCE_HYPERLINK\"in t)return!(t.FORCE_HYPERLINK.length>0&&parseInt(t.FORCE_HYPERLINK,10)===0);if(ht(\"no-hyperlink\")||ht(\"no-hyperlinks\")||ht(\"hyperlink=false\")||ht(\"hyperlink=never\"))return!1;if(ht(\"hyperlink=true\")||ht(\"hyperlink=always\")||\"NETLIFY\"in t)return!0;if(!uc.supportsColor(e)||e&&!e.isTTY||process.platform===\"win32\"||\"CI\"in t||\"TEAMCITY_VERSION\"in t)return!1;if(\"TERM_PROGRAM\"in t){let r=ns(t.TERM_PROGRAM_VERSION);switch(t.TERM_PROGRAM){case\"iTerm.app\":return r.major===3?r.minor>=1:r.major>3;case\"WezTerm\":return r.major>=20200620;case\"vscode\":return r.major>1||r.major===1&&r.minor>=72}}if(\"VTE_VERSION\"in t){if(t.VTE_VERSION===\"0.50.0\")return!1;let r=ns(t.VTE_VERSION);return r.major>0||r.minor>=50}return!1}is.exports={supportsHyperlink:gi,stdout:gi(process.stdout),stderr:gi(process.stderr)}});var as=K((Xf,Xt)=>{\"use strict\";var cc=Zo(),hi=os(),ss=(e,t,{target:r=\"stdout\",...n}={})=>hi[r]?cc.link(e,t):n.fallback===!1?e:typeof n.fallback==\"function\"?n.fallback(e,t):`${e} (\\u200B${t}\\u200B)`;Xt.exports=(e,t,r={})=>ss(e,t,r);Xt.exports.stderr=(e,t,r={})=>ss(e,t,{target:\"stderr\",...r});Xt.exports.isSupported=hi.stdout;Xt.exports.stderr.isSupported=hi.stderr});var us=K((ug,pc)=>{pc.exports={name:\"@prisma/internals\",version:\"6.5.0\",description:\"This package is intended for Prisma's internal use\",main:\"dist/index.js\",types:\"dist/index.d.ts\",repository:{type:\"git\",url:\"https://github.com/prisma/prisma.git\",directory:\"packages/internals\"},homepage:\"https://www.prisma.io\",author:\"Tim Suchanek <suchanek@prisma.io>\",bugs:\"https://github.com/prisma/prisma/issues\",license:\"Apache-2.0\",scripts:{dev:\"DEV=true tsx helpers/build.ts\",build:\"tsx helpers/build.ts\",test:\"dotenv -e ../../.db.env -- jest --silent\",prepublishOnly:\"pnpm run build\"},files:[\"README.md\",\"dist\",\"!**/libquery_engine*\",\"!dist/get-generators/engines/*\",\"scripts\"],devDependencies:{\"@antfu/ni\":\"0.21.12\",\"@babel/helper-validator-identifier\":\"7.25.9\",\"@opentelemetry/api\":\"1.9.0\",\"@swc/core\":\"1.11.5\",\"@swc/jest\":\"0.2.37\",\"@types/babel__helper-validator-identifier\":\"7.15.2\",\"@types/jest\":\"29.5.14\",\"@types/node\":\"18.19.76\",\"@types/resolve\":\"1.20.6\",archiver:\"6.0.2\",\"checkpoint-client\":\"1.1.33\",\"cli-truncate\":\"4.0.0\",dotenv:\"16.4.7\",esbuild:\"0.24.2\",\"escape-string-regexp\":\"4.0.0\",execa:\"5.1.1\",\"fast-glob\":\"3.3.3\",\"find-up\":\"7.0.0\",\"fp-ts\":\"2.16.9\",\"fs-extra\":\"11.3.0\",\"fs-jetpack\":\"5.1.0\",\"global-dirs\":\"4.0.0\",globby:\"11.1.0\",\"identifier-regex\":\"1.0.0\",\"indent-string\":\"4.0.0\",\"is-windows\":\"1.0.2\",\"is-wsl\":\"3.1.0\",jest:\"29.7.0\",\"jest-junit\":\"16.0.0\",kleur:\"4.1.5\",\"mock-stdin\":\"1.0.0\",\"new-github-issue-url\":\"0.2.1\",\"node-fetch\":\"3.3.2\",\"npm-packlist\":\"5.1.3\",open:\"7.4.2\",\"p-map\":\"4.0.0\",\"read-package-up\":\"11.0.0\",resolve:\"1.22.10\",\"string-width\":\"4.2.3\",\"strip-ansi\":\"6.0.1\",\"strip-indent\":\"3.0.0\",\"temp-dir\":\"2.0.0\",tempy:\"1.0.1\",\"terminal-link\":\"2.1.1\",tmp:\"0.2.3\",\"ts-node\":\"10.9.2\",\"ts-pattern\":\"5.6.2\",\"ts-toolbelt\":\"9.6.0\",typescript:\"5.4.5\",yarn:\"1.22.22\"},dependencies:{\"@prisma/config\":\"workspace:*\",\"@prisma/debug\":\"workspace:*\",\"@prisma/engines\":\"workspace:*\",\"@prisma/fetch-engine\":\"workspace:*\",\"@prisma/generator-helper\":\"workspace:*\",\"@prisma/get-platform\":\"workspace:*\",\"@prisma/prisma-schema-wasm\":\"6.5.0-73.173f8d54f8d52e692c7e27e72a88314ec7aeff60\",\"@prisma/schema-files-loader\":\"workspace:*\",arg:\"5.0.2\",prompts:\"2.4.2\"},peerDependencies:{typescript:\">=5.1.0\"},peerDependenciesMeta:{typescript:{optional:!0}},sideEffects:!1}});var bi=K((pg,mc)=>{mc.exports={name:\"@prisma/engines-version\",version:\"6.5.0-73.173f8d54f8d52e692c7e27e72a88314ec7aeff60\",main:\"index.js\",types:\"index.d.ts\",license:\"Apache-2.0\",author:\"Tim Suchanek <suchanek@prisma.io>\",prisma:{enginesVersion:\"173f8d54f8d52e692c7e27e72a88314ec7aeff60\"},repository:{type:\"git\",url:\"https://github.com/prisma/engines-wrapper.git\",directory:\"packages/engines-version\"},devDependencies:{\"@types/node\":\"18.19.76\",typescript:\"4.9.5\"},files:[\"index.js\",\"index.d.ts\"],scripts:{build:\"tsc -d\"}}});var wi=K(Yr=>{\"use strict\";Object.defineProperty(Yr,\"__esModule\",{value:!0});Yr.enginesVersion=void 0;Yr.enginesVersion=bi().prisma.enginesVersion});var ds=K((kg,hc)=>{hc.exports={name:\"dotenv\",version:\"16.4.7\",description:\"Loads environment variables from .env file\",main:\"lib/main.js\",types:\"lib/main.d.ts\",exports:{\".\":{types:\"./lib/main.d.ts\",require:\"./lib/main.js\",default:\"./lib/main.js\"},\"./config\":\"./config.js\",\"./config.js\":\"./config.js\",\"./lib/env-options\":\"./lib/env-options.js\",\"./lib/env-options.js\":\"./lib/env-options.js\",\"./lib/cli-options\":\"./lib/cli-options.js\",\"./lib/cli-options.js\":\"./lib/cli-options.js\",\"./package.json\":\"./package.json\"},scripts:{\"dts-check\":\"tsc --project tests/types/tsconfig.json\",lint:\"standard\",pretest:\"npm run lint && npm run dts-check\",test:\"tap run --allow-empty-coverage --disable-coverage --timeout=60000\",\"test:coverage\":\"tap run --show-full-coverage --timeout=60000 --coverage-report=lcov\",prerelease:\"npm test\",release:\"standard-version\"},repository:{type:\"git\",url:\"git://github.com/motdotla/dotenv.git\"},funding:\"https://dotenvx.com\",keywords:[\"dotenv\",\"env\",\".env\",\"environment\",\"variables\",\"config\",\"settings\"],readmeFilename:\"README.md\",license:\"BSD-2-Clause\",devDependencies:{\"@types/node\":\"^18.11.3\",decache:\"^4.6.2\",sinon:\"^14.0.1\",standard:\"^17.0.0\",\"standard-version\":\"^9.5.0\",tap:\"^19.2.0\",typescript:\"^4.8.4\"},engines:{node:\">=12\"},browser:{fs:!1}}});var hs=K((Og,Fe)=>{\"use strict\";var Ti=require(\"fs\"),Ci=require(\"path\"),yc=require(\"os\"),Ec=require(\"crypto\"),bc=ds(),Ri=bc.version,wc=/(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg;function xc(e){let t={},r=e.toString();r=r.replace(/\\r\\n?/mg,`\n`);let n;for(;(n=wc.exec(r))!=null;){let i=n[1],o=n[2]||\"\";o=o.trim();let s=o[0];o=o.replace(/^(['\"`])([\\s\\S]*)\\1$/mg,\"$2\"),s==='\"'&&(o=o.replace(/\\\\n/g,`\n`),o=o.replace(/\\\\r/g,\"\\r\")),t[i]=o}return t}function Pc(e){let t=gs(e),r=G.configDotenv({path:t});if(!r.parsed){let s=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw s.code=\"MISSING_DATA\",s}let n=fs(e).split(\",\"),i=n.length,o;for(let s=0;s<i;s++)try{let a=n[s].trim(),l=Cc(r,a);o=G.decrypt(l.ciphertext,l.key);break}catch(a){if(s+1>=i)throw a}return G.parse(o)}function vc(e){console.log(`[dotenv@${Ri}][INFO] ${e}`)}function Tc(e){console.log(`[dotenv@${Ri}][WARN] ${e}`)}function zr(e){console.log(`[dotenv@${Ri}][DEBUG] ${e}`)}function fs(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:\"\"}function Cc(e,t){let r;try{r=new URL(t)}catch(a){if(a.code===\"ERR_INVALID_URL\"){let l=new Error(\"INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development\");throw l.code=\"INVALID_DOTENV_KEY\",l}throw a}let n=r.password;if(!n){let a=new Error(\"INVALID_DOTENV_KEY: Missing key part\");throw a.code=\"INVALID_DOTENV_KEY\",a}let i=r.searchParams.get(\"environment\");if(!i){let a=new Error(\"INVALID_DOTENV_KEY: Missing environment part\");throw a.code=\"INVALID_DOTENV_KEY\",a}let o=`DOTENV_VAULT_${i.toUpperCase()}`,s=e.parsed[o];if(!s){let a=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${o} in your .env.vault file.`);throw a.code=\"NOT_FOUND_DOTENV_ENVIRONMENT\",a}return{ciphertext:s,key:n}}function gs(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(let r of e.path)Ti.existsSync(r)&&(t=r.endsWith(\".vault\")?r:`${r}.vault`);else t=e.path.endsWith(\".vault\")?e.path:`${e.path}.vault`;else t=Ci.resolve(process.cwd(),\".env.vault\");return Ti.existsSync(t)?t:null}function ms(e){return e[0]===\"~\"?Ci.join(yc.homedir(),e.slice(1)):e}function Rc(e){vc(\"Loading env from encrypted .env.vault\");let t=G._parseVault(e),r=process.env;return e&&e.processEnv!=null&&(r=e.processEnv),G.populate(r,t,e),{parsed:t}}function Sc(e){let t=Ci.resolve(process.cwd(),\".env\"),r=\"utf8\",n=!!(e&&e.debug);e&&e.encoding?r=e.encoding:n&&zr(\"No encoding is specified. UTF-8 is used by default\");let i=[t];if(e&&e.path)if(!Array.isArray(e.path))i=[ms(e.path)];else{i=[];for(let l of e.path)i.push(ms(l))}let o,s={};for(let l of i)try{let u=G.parse(Ti.readFileSync(l,{encoding:r}));G.populate(s,u,e)}catch(u){n&&zr(`Failed to load ${l} ${u.message}`),o=u}let a=process.env;return e&&e.processEnv!=null&&(a=e.processEnv),G.populate(a,s,e),o?{parsed:s,error:o}:{parsed:s}}function Ac(e){if(fs(e).length===0)return G.configDotenv(e);let t=gs(e);return t?G._configVault(e):(Tc(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`),G.configDotenv(e))}function Ic(e,t){let r=Buffer.from(t.slice(-64),\"hex\"),n=Buffer.from(e,\"base64\"),i=n.subarray(0,12),o=n.subarray(-16);n=n.subarray(12,-16);try{let s=Ec.createDecipheriv(\"aes-256-gcm\",r,i);return s.setAuthTag(o),`${s.update(n)}${s.final()}`}catch(s){let a=s instanceof RangeError,l=s.message===\"Invalid key length\",u=s.message===\"Unsupported state or unable to authenticate data\";if(a||l){let c=new Error(\"INVALID_DOTENV_KEY: It must be 64 characters long (or more)\");throw c.code=\"INVALID_DOTENV_KEY\",c}else if(u){let c=new Error(\"DECRYPTION_FAILED: Please check your DOTENV_KEY\");throw c.code=\"DECRYPTION_FAILED\",c}else throw s}}function kc(e,t,r={}){let n=!!(r&&r.debug),i=!!(r&&r.override);if(typeof t!=\"object\"){let o=new Error(\"OBJECT_REQUIRED: Please check the processEnv argument being passed to populate\");throw o.code=\"OBJECT_REQUIRED\",o}for(let o of Object.keys(t))Object.prototype.hasOwnProperty.call(e,o)?(i===!0&&(e[o]=t[o]),n&&zr(i===!0?`\"${o}\" is already defined and WAS overwritten`:`\"${o}\" is already defined and was NOT overwritten`)):e[o]=t[o]}var G={configDotenv:Sc,_configVault:Rc,_parseVault:Pc,config:Ac,decrypt:Ic,parse:xc,populate:kc};Fe.exports.configDotenv=G.configDotenv;Fe.exports._configVault=G._configVault;Fe.exports._parseVault=G._parseVault;Fe.exports.config=G.config;Fe.exports.decrypt=G.decrypt;Fe.exports.parse=G.parse;Fe.exports.populate=G.populate;Fe.exports=G});var Ps=K(($g,xs)=>{\"use strict\";xs.exports=e=>{let t=e.match(/^[ \\t]*(?=\\S)/gm);return t?t.reduce((r,n)=>Math.min(r,n.length),1/0):0}});var Ts=K((qg,vs)=>{\"use strict\";var Nc=Ps();vs.exports=e=>{let t=Nc(e);if(t===0)return e;let r=new RegExp(`^[ \\\\t]{${t}}`,\"gm\");return e.replace(r,\"\")}});var Oi=K((Jg,Rs)=>{\"use strict\";Rs.exports=(e,t=1,r)=>{if(r={indent:\" \",includeEmptyLines:!1,...r},typeof e!=\"string\")throw new TypeError(`Expected \\`input\\` to be a \\`string\\`, got \\`${typeof e}\\``);if(typeof t!=\"number\")throw new TypeError(`Expected \\`count\\` to be a \\`number\\`, got \\`${typeof t}\\``);if(typeof r.indent!=\"string\")throw new TypeError(`Expected \\`options.indent\\` to be a \\`string\\`, got \\`${typeof r.indent}\\``);if(t===0)return e;let n=r.includeEmptyLines?/^/gm:/^(?!\\s*$)/gm;return e.replace(n,r.indent.repeat(t))}});var ks=K((Kg,Is)=>{\"use strict\";Is.exports=({onlyFirst:e=!1}={})=>{let t=[\"[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)\",\"(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))\"].join(\"|\");return new RegExp(t,e?void 0:\"g\")}});var Li=K((Yg,Os)=>{\"use strict\";var Bc=ks();Os.exports=e=>typeof e==\"string\"?e.replace(Bc(),\"\"):e});var _s=K((Xg,tn)=>{\"use strict\";tn.exports=(e={})=>{let t;if(e.repoUrl)t=e.repoUrl;else if(e.user&&e.repo)t=`https://github.com/${e.user}/${e.repo}`;else throw new Error(\"You need to specify either the `repoUrl` option or both the `user` and `repo` options\");let r=new URL(`${t}/issues/new`),n=[\"body\",\"title\",\"labels\",\"template\",\"milestone\",\"assignee\",\"projects\"];for(let i of n){let o=e[i];if(o!==void 0){if(i===\"labels\"||i===\"projects\"){if(!Array.isArray(o))throw new TypeError(`The \\`${i}\\` option should be an array`);o=o.join(\",\")}r.searchParams.set(i,o)}}return r.toString()};tn.exports.default=tn.exports});var Qi=K((hy,ea)=>{\"use strict\";ea.exports=function(){function e(t,r,n,i,o){return t<r||n<r?t>n?n+1:t+1:i===o?r:r+1}return function(t,r){if(t===r)return 0;if(t.length>r.length){var n=t;t=r,r=n}for(var i=t.length,o=r.length;i>0&&t.charCodeAt(i-1)===r.charCodeAt(o-1);)i--,o--;for(var s=0;s<i&&t.charCodeAt(s)===r.charCodeAt(s);)s++;if(i-=s,o-=s,i===0||o<3)return o;var a=0,l,u,c,p,m,g,h,y,O,T,S,R,_=[];for(l=0;l<i;l++)_.push(l+1),_.push(t.charCodeAt(s+l));for(var I=_.length-1;a<o-3;)for(O=r.charCodeAt(s+(u=a)),T=r.charCodeAt(s+(c=a+1)),S=r.charCodeAt(s+(p=a+2)),R=r.charCodeAt(s+(m=a+3)),g=a+=4,l=0;l<I;l+=2)h=_[l],y=_[l+1],u=e(h,u,c,O,y),c=e(u,c,p,T,y),p=e(c,p,m,S,y),g=e(p,m,g,R,y),_[l]=g,m=p,p=c,c=u,u=h;for(;a<o;)for(O=r.charCodeAt(s+(u=a)),g=++a,l=0;l<I;l+=2)h=_[l],_[l]=g=e(h,u,g,O,_[l+1]),u=h;return g}}()});var pf={};Wt(pf,{Debug:()=>ri,Decimal:()=>Ce,Extensions:()=>Kn,MetricsClient:()=>Dt,PrismaClientInitializationError:()=>C,PrismaClientKnownRequestError:()=>te,PrismaClientRustPanicError:()=>pe,PrismaClientUnknownRequestError:()=>U,PrismaClientValidationError:()=>re,Public:()=>Yn,Sql:()=>le,createParam:()=>xa,defineDmmfProperty:()=>Aa,deserializeJsonResponse:()=>Pt,deserializeRawResult:()=>Jn,dmmfToRuntimeDataModel:()=>Sa,empty:()=>Oa,getPrismaClient:()=>cu,getRuntime:()=>Fn,join:()=>ka,makeStrictEnum:()=>pu,makeTypedQueryFactory:()=>Ia,objectEnumValues:()=>Pn,raw:()=>Xi,serializeJsonQuery:()=>In,skip:()=>An,sqltag:()=>eo,warnEnvConflicts:()=>du,warnOnce:()=>or});module.exports=bu(pf);var Kn={};Wt(Kn,{defineExtension:()=>Io,getExtensionContext:()=>ko});function Io(e){return typeof e==\"function\"?e:t=>t.$extends(e)}function ko(e){return e}var Yn={};Wt(Yn,{validator:()=>Oo});function Oo(...e){return t=>t}function zn(e){return e.name===\"DriverAdapterError\"&&typeof e.cause==\"object\"}function qr(e){return{ok:!0,value:e,map(t){return qr(t(e))},flatMap(t){return t(e)}}}function nt(e){return{ok:!1,error:e,map(){return nt(e)},flatMap(){return nt(e)}}}var Zn=class{constructor(){d(this,\"registeredErrors\",[])}consumeError(t){return this.registeredErrors[t]}registerNewError(t){let r=0;for(;this.registeredErrors[r]!==void 0;)r++;return this.registeredErrors[r]={error:t},r}},Xn=e=>{let t=new Zn,r=me(t,e.transactionContext.bind(e)),n={adapterName:e.adapterName,errorRegistry:t,queryRaw:me(t,e.queryRaw.bind(e)),executeRaw:me(t,e.executeRaw.bind(e)),executeScript:me(t,e.executeScript.bind(e)),dispose:me(t,e.dispose.bind(e)),provider:e.provider,transactionContext:async(...i)=>(await r(...i)).map(s=>wu(t,s))};return e.getConnectionInfo&&(n.getConnectionInfo=Pu(t,e.getConnectionInfo.bind(e))),n},wu=(e,t)=>{let r=me(e,t.startTransaction.bind(t));return{adapterName:t.adapterName,provider:t.provider,queryRaw:me(e,t.queryRaw.bind(t)),executeRaw:me(e,t.executeRaw.bind(t)),startTransaction:async(...n)=>(await r(...n)).map(o=>xu(e,o))}},xu=(e,t)=>({adapterName:t.adapterName,provider:t.provider,options:t.options,queryRaw:me(e,t.queryRaw.bind(t)),executeRaw:me(e,t.executeRaw.bind(t)),commit:me(e,t.commit.bind(t)),rollback:me(e,t.rollback.bind(t))});function me(e,t){return async(...r)=>{try{return qr(await t(...r))}catch(n){if(zn(n))return nt(n.cause);let i=e.registerNewError(n);return nt({kind:\"GenericJs\",id:i})}}}function Pu(e,t){return(...r)=>{try{return qr(t(...r))}catch(n){if(zn(n))return nt(n.cause);let i=e.registerNewError(n);return nt({kind:\"GenericJs\",id:i})}}}var Vr={};Wt(Vr,{$:()=>Fo,bgBlack:()=>_u,bgBlue:()=>Fu,bgCyan:()=>$u,bgGreen:()=>Nu,bgMagenta:()=>Mu,bgRed:()=>Du,bgWhite:()=>qu,bgYellow:()=>Lu,black:()=>Au,blue:()=>it,bold:()=>Y,cyan:()=>Ne,dim:()=>_e,gray:()=>Ht,green:()=>je,grey:()=>Ou,hidden:()=>Ru,inverse:()=>Cu,italic:()=>Tu,magenta:()=>Iu,red:()=>fe,reset:()=>vu,strikethrough:()=>Su,underline:()=>ee,white:()=>ku,yellow:()=>De});var ei,_o,Do,No,Lo=!0;typeof process<\"u\"&&({FORCE_COLOR:ei,NODE_DISABLE_COLORS:_o,NO_COLOR:Do,TERM:No}=process.env||{},Lo=process.stdout&&process.stdout.isTTY);var Fo={enabled:!_o&&Do==null&&No!==\"dumb\"&&(ei!=null&&ei!==\"0\"||Lo)};function q(e,t){let r=new RegExp(`\\\\x1b\\\\[${t}m`,\"g\"),n=`\\x1B[${e}m`,i=`\\x1B[${t}m`;return function(o){return!Fo.enabled||o==null?o:n+(~(\"\"+o).indexOf(i)?o.replace(r,i+n):o)+i}}var vu=q(0,0),Y=q(1,22),_e=q(2,22),Tu=q(3,23),ee=q(4,24),Cu=q(7,27),Ru=q(8,28),Su=q(9,29),Au=q(30,39),fe=q(31,39),je=q(32,39),De=q(33,39),it=q(34,39),Iu=q(35,39),Ne=q(36,39),ku=q(37,39),Ht=q(90,39),Ou=q(90,39),_u=q(40,49),Du=q(41,49),Nu=q(42,49),Lu=q(43,49),Fu=q(44,49),Mu=q(45,49),$u=q(46,49),qu=q(47,49);var Vu=100,Mo=[\"green\",\"yellow\",\"blue\",\"magenta\",\"cyan\",\"red\"],Kt=[],$o=Date.now(),ju=0,ti=typeof process<\"u\"?process.env:{};globalThis.DEBUG??=ti.DEBUG??\"\";globalThis.DEBUG_COLORS??=ti.DEBUG_COLORS?ti.DEBUG_COLORS===\"true\":!0;var Yt={enable(e){typeof e==\"string\"&&(globalThis.DEBUG=e)},disable(){let e=globalThis.DEBUG;return globalThis.DEBUG=\"\",e},enabled(e){let t=globalThis.DEBUG.split(\",\").map(i=>i.replace(/[.+?^${}()|[\\]\\\\]/g,\"\\\\$&\")),r=t.some(i=>i===\"\"||i[0]===\"-\"?!1:e.match(RegExp(i.split(\"*\").join(\".*\")+\"$\"))),n=t.some(i=>i===\"\"||i[0]!==\"-\"?!1:e.match(RegExp(i.slice(1).split(\"*\").join(\".*\")+\"$\")));return r&&!n},log:(...e)=>{let[t,r,...n]=e;(console.warn??console.log)(`${t} ${r}`,...n)},formatters:{}};function Bu(e){let t={color:Mo[ju++%Mo.length],enabled:Yt.enabled(e),namespace:e,log:Yt.log,extend:()=>{}},r=(...n)=>{let{enabled:i,namespace:o,color:s,log:a}=t;if(n.length!==0&&Kt.push([o,...n]),Kt.length>Vu&&Kt.shift(),Yt.enabled(o)||i){let l=n.map(c=>typeof c==\"string\"?c:Uu(c)),u=`+${Date.now()-$o}ms`;$o=Date.now(),globalThis.DEBUG_COLORS?a(Vr[s](Y(o)),...l,Vr[s](u)):a(o,...l,u)}};return new Proxy(r,{get:(n,i)=>t[i],set:(n,i,o)=>t[i]=o})}var ri=new Proxy(Bu,{get:(e,t)=>Yt[t],set:(e,t,r)=>Yt[t]=r});function Uu(e,t=2){let r=new Set;return JSON.stringify(e,(n,i)=>{if(typeof i==\"object\"&&i!==null){if(r.has(i))return\"[Circular *]\";r.add(i)}else if(typeof i==\"bigint\")return i.toString();return i},t)}function qo(e=7500){let t=Kt.map(([r,...n])=>`${r} ${n.map(i=>typeof i==\"string\"?i:JSON.stringify(i)).join(\" \")}`).join(`\n`);return t.length<e?t:t.slice(-e)}function Vo(){Kt.length=0}var M=ri;var jo=D(require(\"fs\"));function ni(){let e=process.env.PRISMA_QUERY_ENGINE_LIBRARY;if(!(e&&jo.default.existsSync(e))&&process.arch===\"ia32\")throw new Error('The default query engine type (Node-API, \"library\") is currently not supported for 32bit Node. Please set `engineType = \"binary\"` in the \"generator\" block of your \"schema.prisma\" file (or use the environment variables \"PRISMA_CLIENT_ENGINE_TYPE=binary\" and/or \"PRISMA_CLI_QUERY_ENGINE_TYPE=binary\".)')}var ii=[\"darwin\",\"darwin-arm64\",\"debian-openssl-1.0.x\",\"debian-openssl-1.1.x\",\"debian-openssl-3.0.x\",\"rhel-openssl-1.0.x\",\"rhel-openssl-1.1.x\",\"rhel-openssl-3.0.x\",\"linux-arm64-openssl-1.1.x\",\"linux-arm64-openssl-1.0.x\",\"linux-arm64-openssl-3.0.x\",\"linux-arm-openssl-1.1.x\",\"linux-arm-openssl-1.0.x\",\"linux-arm-openssl-3.0.x\",\"linux-musl\",\"linux-musl-openssl-3.0.x\",\"linux-musl-arm64-openssl-1.1.x\",\"linux-musl-arm64-openssl-3.0.x\",\"linux-nixos\",\"linux-static-x64\",\"linux-static-arm64\",\"windows\",\"freebsd11\",\"freebsd12\",\"freebsd13\",\"freebsd14\",\"freebsd15\",\"openbsd\",\"netbsd\",\"arm\"];var jr=\"libquery_engine\";function Br(e,t){let r=t===\"url\";return e.includes(\"windows\")?r?\"query_engine.dll.node\":`query_engine-${e}.dll.node`:e.includes(\"darwin\")?r?`${jr}.dylib.node`:`${jr}-${e}.dylib.node`:r?`${jr}.so.node`:`${jr}-${e}.so.node`}var Go=D(require(\"child_process\")),ui=D(require(\"fs/promises\")),Wr=D(require(\"os\"));var Le=Symbol.for(\"@ts-pattern/matcher\"),Qu=Symbol.for(\"@ts-pattern/isVariadic\"),Qr=\"@ts-pattern/anonymous-select-key\",oi=e=>!!(e&&typeof e==\"object\"),Ur=e=>e&&!!e[Le],Pe=(e,t,r)=>{if(Ur(e)){let n=e[Le](),{matched:i,selections:o}=n.match(t);return i&&o&&Object.keys(o).forEach(s=>r(s,o[s])),i}if(oi(e)){if(!oi(t))return!1;if(Array.isArray(e)){if(!Array.isArray(t))return!1;let n=[],i=[],o=[];for(let s of e.keys()){let a=e[s];Ur(a)&&a[Qu]?o.push(a):o.length?i.push(a):n.push(a)}if(o.length){if(o.length>1)throw new Error(\"Pattern error: Using `...P.array(...)` several times in a single pattern is not allowed.\");if(t.length<n.length+i.length)return!1;let s=t.slice(0,n.length),a=i.length===0?[]:t.slice(-i.length),l=t.slice(n.length,i.length===0?1/0:-i.length);return n.every((u,c)=>Pe(u,s[c],r))&&i.every((u,c)=>Pe(u,a[c],r))&&(o.length===0||Pe(o[0],l,r))}return e.length===t.length&&e.every((s,a)=>Pe(s,t[a],r))}return Reflect.ownKeys(e).every(n=>{let i=e[n];return(n in t||Ur(o=i)&&o[Le]().matcherType===\"optional\")&&Pe(i,t[n],r);var o})}return Object.is(t,e)},Je=e=>{var t,r,n;return oi(e)?Ur(e)?(t=(r=(n=e[Le]()).getSelectionKeys)==null?void 0:r.call(n))!=null?t:[]:Array.isArray(e)?zt(e,Je):zt(Object.values(e),Je):[]},zt=(e,t)=>e.reduce((r,n)=>r.concat(t(n)),[]);function ge(e){return Object.assign(e,{optional:()=>Gu(e),and:t=>B(e,t),or:t=>Ju(e,t),select:t=>t===void 0?Bo(e):Bo(t,e)})}function Gu(e){return ge({[Le]:()=>({match:t=>{let r={},n=(i,o)=>{r[i]=o};return t===void 0?(Je(e).forEach(i=>n(i,void 0)),{matched:!0,selections:r}):{matched:Pe(e,t,n),selections:r}},getSelectionKeys:()=>Je(e),matcherType:\"optional\"})})}function B(...e){return ge({[Le]:()=>({match:t=>{let r={},n=(i,o)=>{r[i]=o};return{matched:e.every(i=>Pe(i,t,n)),selections:r}},getSelectionKeys:()=>zt(e,Je),matcherType:\"and\"})})}function Ju(...e){return ge({[Le]:()=>({match:t=>{let r={},n=(i,o)=>{r[i]=o};return zt(e,Je).forEach(i=>n(i,void 0)),{matched:e.some(i=>Pe(i,t,n)),selections:r}},getSelectionKeys:()=>zt(e,Je),matcherType:\"or\"})})}function k(e){return{[Le]:()=>({match:t=>({matched:!!e(t)})})}}function Bo(...e){let t=typeof e[0]==\"string\"?e[0]:void 0,r=e.length===2?e[1]:typeof e[0]==\"string\"?void 0:e[0];return ge({[Le]:()=>({match:n=>{let i={[t??Qr]:n};return{matched:r===void 0||Pe(r,n,(o,s)=>{i[o]=s}),selections:i}},getSelectionKeys:()=>[t??Qr].concat(r===void 0?[]:Je(r))})})}function we(e){return typeof e==\"number\"}function Be(e){return typeof e==\"string\"}function Ue(e){return typeof e==\"bigint\"}var Nf=ge(k(function(e){return!0}));var Qe=e=>Object.assign(ge(e),{startsWith:t=>{return Qe(B(e,(r=t,k(n=>Be(n)&&n.startsWith(r)))));var r},endsWith:t=>{return Qe(B(e,(r=t,k(n=>Be(n)&&n.endsWith(r)))));var r},minLength:t=>Qe(B(e,(r=>k(n=>Be(n)&&n.length>=r))(t))),length:t=>Qe(B(e,(r=>k(n=>Be(n)&&n.length===r))(t))),maxLength:t=>Qe(B(e,(r=>k(n=>Be(n)&&n.length<=r))(t))),includes:t=>{return Qe(B(e,(r=t,k(n=>Be(n)&&n.includes(r)))));var r},regex:t=>{return Qe(B(e,(r=t,k(n=>Be(n)&&!!n.match(r)))));var r}}),Lf=Qe(k(Be)),xe=e=>Object.assign(ge(e),{between:(t,r)=>xe(B(e,((n,i)=>k(o=>we(o)&&n<=o&&i>=o))(t,r))),lt:t=>xe(B(e,(r=>k(n=>we(n)&&n<r))(t))),gt:t=>xe(B(e,(r=>k(n=>we(n)&&n>r))(t))),lte:t=>xe(B(e,(r=>k(n=>we(n)&&n<=r))(t))),gte:t=>xe(B(e,(r=>k(n=>we(n)&&n>=r))(t))),int:()=>xe(B(e,k(t=>we(t)&&Number.isInteger(t)))),finite:()=>xe(B(e,k(t=>we(t)&&Number.isFinite(t)))),positive:()=>xe(B(e,k(t=>we(t)&&t>0))),negative:()=>xe(B(e,k(t=>we(t)&&t<0)))}),Ff=xe(k(we)),Ge=e=>Object.assign(ge(e),{between:(t,r)=>Ge(B(e,((n,i)=>k(o=>Ue(o)&&n<=o&&i>=o))(t,r))),lt:t=>Ge(B(e,(r=>k(n=>Ue(n)&&n<r))(t))),gt:t=>Ge(B(e,(r=>k(n=>Ue(n)&&n>r))(t))),lte:t=>Ge(B(e,(r=>k(n=>Ue(n)&&n<=r))(t))),gte:t=>Ge(B(e,(r=>k(n=>Ue(n)&&n>=r))(t))),positive:()=>Ge(B(e,k(t=>Ue(t)&&t>0))),negative:()=>Ge(B(e,k(t=>Ue(t)&&t<0)))}),Mf=Ge(k(Ue)),$f=ge(k(function(e){return typeof e==\"boolean\"})),qf=ge(k(function(e){return typeof e==\"symbol\"})),Vf=ge(k(function(e){return e==null})),jf=ge(k(function(e){return e!=null}));var si=class extends Error{constructor(t){let r;try{r=JSON.stringify(t)}catch{r=t}super(`Pattern matching error: no pattern matches value ${r}`),this.input=void 0,this.input=t}},ai={matched:!1,value:void 0};function ft(e){return new li(e,ai)}var li=class e{constructor(t,r){this.input=void 0,this.state=void 0,this.input=t,this.state=r}with(...t){if(this.state.matched)return this;let r=t[t.length-1],n=[t[0]],i;t.length===3&&typeof t[1]==\"function\"?i=t[1]:t.length>2&&n.push(...t.slice(1,t.length-1));let o=!1,s={},a=(u,c)=>{o=!0,s[u]=c},l=!n.some(u=>Pe(u,this.input,a))||i&&!i(this.input)?ai:{matched:!0,value:r(o?Qr in s?s[Qr]:s:this.input,this.input)};return new e(this.input,l)}when(t,r){if(this.state.matched)return this;let n=!!t(this.input);return new e(this.input,n?{matched:!0,value:r(this.input,this.input)}:ai)}otherwise(t){return this.state.matched?this.state.value:t(this.input)}exhaustive(){if(this.state.matched)return this.state.value;throw new si(this.input)}run(){return this.exhaustive()}returnType(){return this}};var Jo=require(\"util\");var Wu={warn:De(\"prisma:warn\")},Hu={warn:()=>!process.env.PRISMA_DISABLE_WARNINGS};function Gr(e,...t){Hu.warn()&&console.warn(`${Wu.warn} ${e}`,...t)}var Ku=(0,Jo.promisify)(Go.default.exec),ie=M(\"prisma:get-platform\"),Yu=[\"1.0.x\",\"1.1.x\",\"3.0.x\"];async function Wo(){let e=Wr.default.platform(),t=process.arch;if(e===\"freebsd\"){let s=await Hr(\"freebsd-version\");if(s&&s.trim().length>0){let l=/^(\\d+)\\.?/.exec(s);if(l)return{platform:\"freebsd\",targetDistro:`freebsd${l[1]}`,arch:t}}}if(e!==\"linux\")return{platform:e,arch:t};let r=await Zu(),n=await sc(),i=ec({arch:t,archFromUname:n,familyDistro:r.familyDistro}),{libssl:o}=await tc(i);return{platform:\"linux\",libssl:o,arch:t,archFromUname:n,...r}}function zu(e){let t=/^ID=\"?([^\"\\n]*)\"?$/im,r=/^ID_LIKE=\"?([^\"\\n]*)\"?$/im,n=t.exec(e),i=n&&n[1]&&n[1].toLowerCase()||\"\",o=r.exec(e),s=o&&o[1]&&o[1].toLowerCase()||\"\",a=ft({id:i,idLike:s}).with({id:\"alpine\"},({id:l})=>({targetDistro:\"musl\",familyDistro:l,originalDistro:l})).with({id:\"raspbian\"},({id:l})=>({targetDistro:\"arm\",familyDistro:\"debian\",originalDistro:l})).with({id:\"nixos\"},({id:l})=>({targetDistro:\"nixos\",originalDistro:l,familyDistro:\"nixos\"})).with({id:\"debian\"},{id:\"ubuntu\"},({id:l})=>({targetDistro:\"debian\",familyDistro:\"debian\",originalDistro:l})).with({id:\"rhel\"},{id:\"centos\"},{id:\"fedora\"},({id:l})=>({targetDistro:\"rhel\",familyDistro:\"rhel\",originalDistro:l})).when(({idLike:l})=>l.includes(\"debian\")||l.includes(\"ubuntu\"),({id:l})=>({targetDistro:\"debian\",familyDistro:\"debian\",originalDistro:l})).when(({idLike:l})=>i===\"arch\"||l.includes(\"arch\"),({id:l})=>({targetDistro:\"debian\",familyDistro:\"arch\",originalDistro:l})).when(({idLike:l})=>l.includes(\"centos\")||l.includes(\"fedora\")||l.includes(\"rhel\")||l.includes(\"suse\"),({id:l})=>({targetDistro:\"rhel\",familyDistro:\"rhel\",originalDistro:l})).otherwise(({id:l})=>({targetDistro:void 0,familyDistro:void 0,originalDistro:l}));return ie(`Found distro info:\n${JSON.stringify(a,null,2)}`),a}async function Zu(){let e=\"/etc/os-release\";try{let t=await ui.default.readFile(e,{encoding:\"utf-8\"});return zu(t)}catch{return{targetDistro:void 0,familyDistro:void 0,originalDistro:void 0}}}function Xu(e){let t=/^OpenSSL\\s(\\d+\\.\\d+)\\.\\d+/.exec(e);if(t){let r=`${t[1]}.x`;return Ho(r)}}function Uo(e){let t=/libssl\\.so\\.(\\d)(\\.\\d)?/.exec(e);if(t){let r=`${t[1]}${t[2]??\".0\"}.x`;return Ho(r)}}function Ho(e){let t=(()=>{if(Yo(e))return e;let r=e.split(\".\");return r[1]=\"0\",r.join(\".\")})();if(Yu.includes(t))return t}function ec(e){return ft(e).with({familyDistro:\"musl\"},()=>(ie('Trying platform-specific paths for \"alpine\"'),[\"/lib\",\"/usr/lib\"])).with({familyDistro:\"debian\"},({archFromUname:t})=>(ie('Trying platform-specific paths for \"debian\" (and \"ubuntu\")'),[`/usr/lib/${t}-linux-gnu`,`/lib/${t}-linux-gnu`])).with({familyDistro:\"rhel\"},()=>(ie('Trying platform-specific paths for \"rhel\"'),[\"/lib64\",\"/usr/lib64\"])).otherwise(({familyDistro:t,arch:r,archFromUname:n})=>(ie(`Don't know any platform-specific paths for \"${t}\" on ${r} (${n})`),[]))}async function tc(e){let t='grep -v \"libssl.so.0\"',r=await Qo(e);if(r){ie(`Found libssl.so file using platform-specific paths: ${r}`);let o=Uo(r);if(ie(`The parsed libssl version is: ${o}`),o)return{libssl:o,strategy:\"libssl-specific-path\"}}ie('Falling back to \"ldconfig\" and other generic paths');let n=await Hr(`ldconfig -p | sed \"s/.*=>s*//\" | sed \"s|.*/||\" | grep libssl | sort | ${t}`);if(n||(n=await Qo([\"/lib64\",\"/usr/lib64\",\"/lib\",\"/usr/lib\"])),n){ie(`Found libssl.so file using \"ldconfig\" or other generic paths: ${n}`);let o=Uo(n);if(ie(`The parsed libssl version is: ${o}`),o)return{libssl:o,strategy:\"ldconfig\"}}let i=await Hr(\"openssl version -v\");if(i){ie(`Found openssl binary with version: ${i}`);let o=Xu(i);if(ie(`The parsed openssl version is: ${o}`),o)return{libssl:o,strategy:\"openssl-binary\"}}return ie(\"Couldn't find any version of libssl or OpenSSL in the system\"),{}}async function Qo(e){for(let t of e){let r=await rc(t);if(r)return r}}async function rc(e){try{return(await ui.default.readdir(e)).find(r=>r.startsWith(\"libssl.so.\")&&!r.startsWith(\"libssl.so.0\"))}catch(t){if(t.code===\"ENOENT\")return;throw t}}async function ot(){let{binaryTarget:e}=await Ko();return e}function nc(e){return e.binaryTarget!==void 0}async function ci(){let{memoized:e,...t}=await Ko();return t}var Jr={};async function Ko(){if(nc(Jr))return Promise.resolve({...Jr,memoized:!0});let e=await Wo(),t=ic(e);return Jr={...e,binaryTarget:t},{...Jr,memoized:!1}}function ic(e){let{platform:t,arch:r,archFromUname:n,libssl:i,targetDistro:o,familyDistro:s,originalDistro:a}=e;t===\"linux\"&&![\"x64\",\"arm64\"].includes(r)&&Gr(`Prisma only officially supports Linux on amd64 (x86_64) and arm64 (aarch64) system architectures (detected \"${r}\" instead). If you are using your own custom Prisma engines, you can ignore this warning, as long as you've compiled the engines for your system architecture \"${n}\".`);let l=\"1.1.x\";if(t===\"linux\"&&i===void 0){let c=ft({familyDistro:s}).with({familyDistro:\"debian\"},()=>\"Please manually install OpenSSL via `apt-get update -y && apt-get install -y openssl` and try installing Prisma again. If you're running Prisma on Docker, add this command to your Dockerfile, or switch to an image that already has OpenSSL installed.\").otherwise(()=>\"Please manually install OpenSSL and try installing Prisma again.\");Gr(`Prisma failed to detect the libssl/openssl version to use, and may not work as expected. Defaulting to \"openssl-${l}\".\n${c}`)}let u=\"debian\";if(t===\"linux\"&&o===void 0&&ie(`Distro is \"${a}\". Falling back to Prisma engines built for \"${u}\".`),t===\"darwin\"&&r===\"arm64\")return\"darwin-arm64\";if(t===\"darwin\")return\"darwin\";if(t===\"win32\")return\"windows\";if(t===\"freebsd\")return o;if(t===\"openbsd\")return\"openbsd\";if(t===\"netbsd\")return\"netbsd\";if(t===\"linux\"&&o===\"nixos\")return\"linux-nixos\";if(t===\"linux\"&&r===\"arm64\")return`${o===\"musl\"?\"linux-musl-arm64\":\"linux-arm64\"}-openssl-${i||l}`;if(t===\"linux\"&&r===\"arm\")return`linux-arm-openssl-${i||l}`;if(t===\"linux\"&&o===\"musl\"){let c=\"linux-musl\";return!i||Yo(i)?c:`${c}-openssl-${i}`}return t===\"linux\"&&o&&i?`${o}-openssl-${i}`:(t!==\"linux\"&&Gr(`Prisma detected unknown OS \"${t}\" and may not work as expected. Defaulting to \"linux\".`),i?`${u}-openssl-${i}`:o?`${o}-openssl-${l}`:`${u}-openssl-${l}`)}async function oc(e){try{return await e()}catch{return}}function Hr(e){return oc(async()=>{let t=await Ku(e);return ie(`Command \"${e}\" successfully returned \"${t.stdout}\"`),t.stdout})}async function sc(){return typeof Wr.default.machine==\"function\"?Wr.default.machine():(await Hr(\"uname -m\"))?.trim()}function Yo(e){return e.startsWith(\"1.\")}var ls=D(as());function yi(e){return(0,ls.default)(e,e,{fallback:ee})}var dc=us(),Ei=dc.version;var fc=D(wi());var V=D(require(\"path\")),gc=D(wi()),xg=M(\"prisma:engines\");function cs(){return V.default.join(__dirname,\"../\")}var Pg=\"libquery-engine\";V.default.join(__dirname,\"../query-engine-darwin\");V.default.join(__dirname,\"../query-engine-darwin-arm64\");V.default.join(__dirname,\"../query-engine-debian-openssl-1.0.x\");V.default.join(__dirname,\"../query-engine-debian-openssl-1.1.x\");V.default.join(__dirname,\"../query-engine-debian-openssl-3.0.x\");V.default.join(__dirname,\"../query-engine-linux-static-x64\");V.default.join(__dirname,\"../query-engine-linux-static-arm64\");V.default.join(__dirname,\"../query-engine-rhel-openssl-1.0.x\");V.default.join(__dirname,\"../query-engine-rhel-openssl-1.1.x\");V.default.join(__dirname,\"../query-engine-rhel-openssl-3.0.x\");V.default.join(__dirname,\"../libquery_engine-darwin.dylib.node\");V.default.join(__dirname,\"../libquery_engine-darwin-arm64.dylib.node\");V.default.join(__dirname,\"../libquery_engine-debian-openssl-1.0.x.so.node\");V.default.join(__dirname,\"../libquery_engine-debian-openssl-1.1.x.so.node\");V.default.join(__dirname,\"../libquery_engine-debian-openssl-3.0.x.so.node\");V.default.join(__dirname,\"../libquery_engine-linux-arm64-openssl-1.0.x.so.node\");V.default.join(__dirname,\"../libquery_engine-linux-arm64-openssl-1.1.x.so.node\");V.default.join(__dirname,\"../libquery_engine-linux-arm64-openssl-3.0.x.so.node\");V.default.join(__dirname,\"../libquery_engine-linux-musl.so.node\");V.default.join(__dirname,\"../libquery_engine-linux-musl-openssl-3.0.x.so.node\");V.default.join(__dirname,\"../libquery_engine-rhel-openssl-1.0.x.so.node\");V.default.join(__dirname,\"../libquery_engine-rhel-openssl-1.1.x.so.node\");V.default.join(__dirname,\"../libquery_engine-rhel-openssl-3.0.x.so.node\");V.default.join(__dirname,\"../query_engine-windows.dll.node\");var xi=D(require(\"fs\")),ps=M(\"chmodPlusX\");function Pi(e){if(process.platform===\"win32\")return;let t=xi.default.statSync(e),r=t.mode|64|8|1;if(t.mode===r){ps(`Execution permissions of ${e} are fine`);return}let n=r.toString(8).slice(-3);ps(`Have to call chmodPlusX on ${e}`),xi.default.chmodSync(e,n)}function vi(e){let t=e.e,r=a=>`Prisma cannot find the required \\`${a}\\` system library in your system`,n=t.message.includes(\"cannot open shared object file\"),i=`Please refer to the documentation about Prisma's system requirements: ${yi(\"https://pris.ly/d/system-requirements\")}`,o=`Unable to require(\\`${_e(e.id)}\\`).`,s=ft({message:t.message,code:t.code}).with({code:\"ENOENT\"},()=>\"File does not exist.\").when(({message:a})=>n&&a.includes(\"libz\"),()=>`${r(\"libz\")}. Please install it and try again.`).when(({message:a})=>n&&a.includes(\"libgcc_s\"),()=>`${r(\"libgcc_s\")}. Please install it and try again.`).when(({message:a})=>n&&a.includes(\"libssl\"),()=>{let a=e.platformInfo.libssl?`openssl-${e.platformInfo.libssl}`:\"openssl\";return`${r(\"libssl\")}. Please install ${a} and try again.`}).when(({message:a})=>a.includes(\"GLIBC\"),()=>`Prisma has detected an incompatible version of the \\`glibc\\` C standard library installed in your system. This probably means your system may be too old to run Prisma. ${i}`).when(({message:a})=>e.platformInfo.platform===\"linux\"&&a.includes(\"symbol not found\"),()=>`The Prisma engines are not compatible with your system ${e.platformInfo.originalDistro} on (${e.platformInfo.archFromUname}) which uses the \\`${e.platformInfo.binaryTarget}\\` binaryTarget by default. ${i}`).otherwise(()=>`The Prisma engines do not seem to be compatible with your system. ${i}`);return`${o}\n${s}\n\nDetails: ${t.message}`}var Ai=D(hs()),Zr=D(require(\"fs\"));var yt=D(require(\"path\"));function ys(e){let t=e.ignoreProcessEnv?{}:process.env,r=n=>n.match(/(.?\\${(?:[a-zA-Z0-9_]+)?})/g)?.reduce(function(o,s){let a=/(.?)\\${([a-zA-Z0-9_]+)?}/g.exec(s);if(!a)return o;let l=a[1],u,c;if(l===\"\\\\\")c=a[0],u=c.replace(\"\\\\$\",\"$\");else{let p=a[2];c=a[0].substring(l.length),u=Object.hasOwnProperty.call(t,p)?t[p]:e.parsed[p]||\"\",u=r(u)}return o.replace(c,u)},n)??n;for(let n in e.parsed){let i=Object.hasOwnProperty.call(t,n)?t[n]:e.parsed[n];e.parsed[n]=r(i)}for(let n in e.parsed)t[n]=e.parsed[n];return e}var Si=M(\"prisma:tryLoadEnv\");function er({rootEnvPath:e,schemaEnvPath:t},r={conflictCheck:\"none\"}){let n=Es(e);r.conflictCheck!==\"none\"&&Oc(n,t,r.conflictCheck);let i=null;return bs(n?.path,t)||(i=Es(t)),!n&&!i&&Si(\"No Environment variables loaded\"),i?.dotenvResult.error?console.error(fe(Y(\"Schema Env Error: \"))+i.dotenvResult.error):{message:[n?.message,i?.message].filter(Boolean).join(`\n`),parsed:{...n?.dotenvResult?.parsed,...i?.dotenvResult?.parsed}}}function Oc(e,t,r){let n=e?.dotenvResult.parsed,i=!bs(e?.path,t);if(n&&t&&i&&Zr.default.existsSync(t)){let o=Ai.default.parse(Zr.default.readFileSync(t)),s=[];for(let a in o)n[a]===o[a]&&s.push(a);if(s.length>0){let a=yt.default.relative(process.cwd(),e.path),l=yt.default.relative(process.cwd(),t);if(r===\"error\"){let u=`There is a conflict between env var${s.length>1?\"s\":\"\"} in ${ee(a)} and ${ee(l)}\nConflicting env vars:\n${s.map(c=>`  ${Y(c)}`).join(`\n`)}\n\nWe suggest to move the contents of ${ee(l)} to ${ee(a)} to consolidate your env vars.\n`;throw new Error(u)}else if(r===\"warn\"){let u=`Conflict for env var${s.length>1?\"s\":\"\"} ${s.map(c=>Y(c)).join(\", \")} in ${ee(a)} and ${ee(l)}\nEnv vars from ${ee(l)} overwrite the ones from ${ee(a)}\n      `;console.warn(`${De(\"warn(prisma)\")} ${u}`)}}}}function Es(e){if(_c(e)){Si(`Environment variables loaded from ${e}`);let t=Ai.default.config({path:e,debug:process.env.DOTENV_CONFIG_DEBUG?!0:void 0});return{dotenvResult:ys(t),message:_e(`Environment variables loaded from ${yt.default.relative(process.cwd(),e)}`),path:e}}else Si(`Environment variables not found at ${e}`);return null}function bs(e,t){return e&&t&&yt.default.resolve(e)===yt.default.resolve(t)}function _c(e){return!!(e&&Zr.default.existsSync(e))}var ws=\"library\";function Et(e){let t=Dc();return t||(e?.config.engineType===\"library\"?\"library\":e?.config.engineType===\"binary\"?\"binary\":e?.config.engineType===\"client\"?\"client\":ws)}function Dc(){let e=process.env.PRISMA_CLIENT_ENGINE_TYPE;return e===\"library\"?\"library\":e===\"binary\"?\"binary\":e===\"client\"?\"client\":void 0}var Cs=\"prisma+postgres\",Xr=`${Cs}:`;function Ii(e){return e?.startsWith(`${Xr}//`)??!1}var tr;(t=>{let e;(I=>(I.findUnique=\"findUnique\",I.findUniqueOrThrow=\"findUniqueOrThrow\",I.findFirst=\"findFirst\",I.findFirstOrThrow=\"findFirstOrThrow\",I.findMany=\"findMany\",I.create=\"create\",I.createMany=\"createMany\",I.createManyAndReturn=\"createManyAndReturn\",I.update=\"update\",I.updateMany=\"updateMany\",I.updateManyAndReturn=\"updateManyAndReturn\",I.upsert=\"upsert\",I.delete=\"delete\",I.deleteMany=\"deleteMany\",I.groupBy=\"groupBy\",I.count=\"count\",I.aggregate=\"aggregate\",I.findRaw=\"findRaw\",I.aggregateRaw=\"aggregateRaw\"))(e=t.ModelAction||={})})(tr||={});var rr=D(require(\"path\"));function ki(e){return rr.default.sep===rr.default.posix.sep?e:e.split(rr.default.sep).join(rr.default.posix.sep)}var Ss=D(Oi());function Di(e){return String(new _i(e))}var _i=class{constructor(t){this.config=t}toString(){let{config:t}=this,r=t.provider.fromEnvVar?`env(\"${t.provider.fromEnvVar}\")`:t.provider.value,n=JSON.parse(JSON.stringify({provider:r,binaryTargets:Lc(t.binaryTargets)}));return`generator ${t.name} {\n${(0,Ss.default)(Fc(n),2)}\n}`}};function Lc(e){let t;if(e.length>0){let r=e.find(n=>n.fromEnvVar!==null);r?t=`env(\"${r.fromEnvVar}\")`:t=e.map(n=>n.native?\"native\":n.value)}else t=void 0;return t}function Fc(e){let t=Object.keys(e).reduce((r,n)=>Math.max(r,n.length),0);return Object.entries(e).map(([r,n])=>`${r.padEnd(t)} = ${Mc(n)}`).join(`\n`)}function Mc(e){return JSON.parse(JSON.stringify(e,(t,r)=>Array.isArray(r)?`[${r.map(n=>JSON.stringify(n)).join(\", \")}]`:JSON.stringify(r)))}var ir={};Wt(ir,{error:()=>Vc,info:()=>qc,log:()=>$c,query:()=>jc,should:()=>As,tags:()=>nr,warn:()=>Ni});var nr={error:fe(\"prisma:error\"),warn:De(\"prisma:warn\"),info:Ne(\"prisma:info\"),query:it(\"prisma:query\")},As={warn:()=>!process.env.PRISMA_DISABLE_WARNINGS};function $c(...e){console.log(...e)}function Ni(e,...t){As.warn()&&console.warn(`${nr.warn} ${e}`,...t)}function qc(e,...t){console.info(`${nr.info} ${e}`,...t)}function Vc(e,...t){console.error(`${nr.error} ${e}`,...t)}function jc(e,...t){console.log(`${nr.query} ${e}`,...t)}function en(e,t){if(!e)throw new Error(`${t}. This should never happen. If you see this error, please, open an issue at https://pris.ly/prisma-prisma-bug-report`)}function Me(e,t){throw new Error(t)}function Fi(e,t){return Object.prototype.hasOwnProperty.call(e,t)}var Mi=(e,t)=>e.reduce((r,n)=>(r[t(n)]=n,r),{});function bt(e,t){let r={};for(let n of Object.keys(e))r[n]=t(e[n],n);return r}function $i(e,t){if(e.length===0)return;let r=e[0];for(let n=1;n<e.length;n++)t(r,e[n])<0&&(r=e[n]);return r}function x(e,t){Object.defineProperty(e,\"name\",{value:t,configurable:!0})}var Ds=new Set,or=(e,t,...r)=>{Ds.has(e)||(Ds.add(e),Ni(t,...r))};var C=class e extends Error{constructor(r,n,i){super(r);d(this,\"clientVersion\");d(this,\"errorCode\");d(this,\"retryable\");this.name=\"PrismaClientInitializationError\",this.clientVersion=n,this.errorCode=i,Error.captureStackTrace(e)}get[Symbol.toStringTag](){return\"PrismaClientInitializationError\"}};x(C,\"PrismaClientInitializationError\");var te=class extends Error{constructor(r,{code:n,clientVersion:i,meta:o,batchRequestIdx:s}){super(r);d(this,\"code\");d(this,\"meta\");d(this,\"clientVersion\");d(this,\"batchRequestIdx\");this.name=\"PrismaClientKnownRequestError\",this.code=n,this.clientVersion=i,this.meta=o,Object.defineProperty(this,\"batchRequestIdx\",{value:s,enumerable:!1,writable:!0})}get[Symbol.toStringTag](){return\"PrismaClientKnownRequestError\"}};x(te,\"PrismaClientKnownRequestError\");var pe=class extends Error{constructor(r,n){super(r);d(this,\"clientVersion\");this.name=\"PrismaClientRustPanicError\",this.clientVersion=n}get[Symbol.toStringTag](){return\"PrismaClientRustPanicError\"}};x(pe,\"PrismaClientRustPanicError\");var U=class extends Error{constructor(r,{clientVersion:n,batchRequestIdx:i}){super(r);d(this,\"clientVersion\");d(this,\"batchRequestIdx\");this.name=\"PrismaClientUnknownRequestError\",this.clientVersion=n,Object.defineProperty(this,\"batchRequestIdx\",{value:i,writable:!0,enumerable:!1})}get[Symbol.toStringTag](){return\"PrismaClientUnknownRequestError\"}};x(U,\"PrismaClientUnknownRequestError\");var re=class extends Error{constructor(r,{clientVersion:n}){super(r);d(this,\"name\",\"PrismaClientValidationError\");d(this,\"clientVersion\");this.clientVersion=n}get[Symbol.toStringTag](){return\"PrismaClientValidationError\"}};x(re,\"PrismaClientValidationError\");var wt=9e15,ze=1e9,qi=\"0123456789abcdef\",sn=\"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\",an=\"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\",Vi={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-wt,maxE:wt,crypto:!1},Ms,$e,w=!0,un=\"[DecimalError] \",Ye=un+\"Invalid argument: \",$s=un+\"Precision limit exceeded\",qs=un+\"crypto unavailable\",Vs=\"[object Decimal]\",ne=Math.floor,J=Math.pow,Uc=/^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,Qc=/^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,Gc=/^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,js=/^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,ye=1e7,b=7,Jc=9007199254740991,Wc=sn.length-1,ji=an.length-1,f={toStringTag:Vs};f.absoluteValue=f.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),E(e)};f.ceil=function(){return E(new this.constructor(this),this.e+1,2)};f.clampedTo=f.clamp=function(e,t){var r,n=this,i=n.constructor;if(e=new i(e),t=new i(t),!e.s||!t.s)return new i(NaN);if(e.gt(t))throw Error(Ye+t);return r=n.cmp(e),r<0?e:n.cmp(t)>0?t:new i(n)};f.comparedTo=f.cmp=function(e){var t,r,n,i,o=this,s=o.d,a=(e=new o.constructor(e)).d,l=o.s,u=e.s;if(!s||!a)return!l||!u?NaN:l!==u?l:s===a?0:!s^l<0?1:-1;if(!s[0]||!a[0])return s[0]?l:a[0]?-u:0;if(l!==u)return l;if(o.e!==e.e)return o.e>e.e^l<0?1:-1;for(n=s.length,i=a.length,t=0,r=n<i?n:i;t<r;++t)if(s[t]!==a[t])return s[t]>a[t]^l<0?1:-1;return n===i?0:n>i^l<0?1:-1};f.cosine=f.cos=function(){var e,t,r=this,n=r.constructor;return r.d?r.d[0]?(e=n.precision,t=n.rounding,n.precision=e+Math.max(r.e,r.sd())+b,n.rounding=1,r=Hc(n,Js(n,r)),n.precision=e,n.rounding=t,E($e==2||$e==3?r.neg():r,e,t,!0)):new n(1):new n(NaN)};f.cubeRoot=f.cbrt=function(){var e,t,r,n,i,o,s,a,l,u,c=this,p=c.constructor;if(!c.isFinite()||c.isZero())return new p(c);for(w=!1,o=c.s*J(c.s*c,1/3),!o||Math.abs(o)==1/0?(r=z(c.d),e=c.e,(o=(e-r.length+1)%3)&&(r+=o==1||o==-2?\"0\":\"00\"),o=J(r,1/3),e=ne((e+1)/3)-(e%3==(e<0?-1:2)),o==1/0?r=\"5e\"+e:(r=o.toExponential(),r=r.slice(0,r.indexOf(\"e\")+1)+e),n=new p(r),n.s=c.s):n=new p(o.toString()),s=(e=p.precision)+3;;)if(a=n,l=a.times(a).times(a),u=l.plus(c),n=$(u.plus(c).times(a),u.plus(l),s+2,1),z(a.d).slice(0,s)===(r=z(n.d)).slice(0,s))if(r=r.slice(s-3,s+1),r==\"9999\"||!i&&r==\"4999\"){if(!i&&(E(a,e+1,0),a.times(a).times(a).eq(c))){n=a;break}s+=4,i=1}else{(!+r||!+r.slice(1)&&r.charAt(0)==\"5\")&&(E(n,e+1,1),t=!n.times(n).times(n).eq(c));break}return w=!0,E(n,e,p.rounding,t)};f.decimalPlaces=f.dp=function(){var e,t=this.d,r=NaN;if(t){if(e=t.length-1,r=(e-ne(this.e/b))*b,e=t[e],e)for(;e%10==0;e/=10)r--;r<0&&(r=0)}return r};f.dividedBy=f.div=function(e){return $(this,new this.constructor(e))};f.dividedToIntegerBy=f.divToInt=function(e){var t=this,r=t.constructor;return E($(t,new r(e),0,1,1),r.precision,r.rounding)};f.equals=f.eq=function(e){return this.cmp(e)===0};f.floor=function(){return E(new this.constructor(this),this.e+1,3)};f.greaterThan=f.gt=function(e){return this.cmp(e)>0};f.greaterThanOrEqualTo=f.gte=function(e){var t=this.cmp(e);return t==1||t===0};f.hyperbolicCosine=f.cosh=function(){var e,t,r,n,i,o=this,s=o.constructor,a=new s(1);if(!o.isFinite())return new s(o.s?1/0:NaN);if(o.isZero())return a;r=s.precision,n=s.rounding,s.precision=r+Math.max(o.e,o.sd())+4,s.rounding=1,i=o.d.length,i<32?(e=Math.ceil(i/3),t=(1/pn(4,e)).toString()):(e=16,t=\"2.3283064365386962890625e-10\"),o=xt(s,1,o.times(t),new s(1),!0);for(var l,u=e,c=new s(8);u--;)l=o.times(o),o=a.minus(l.times(c.minus(l.times(c))));return E(o,s.precision=r,s.rounding=n,!0)};f.hyperbolicSine=f.sinh=function(){var e,t,r,n,i=this,o=i.constructor;if(!i.isFinite()||i.isZero())return new o(i);if(t=o.precision,r=o.rounding,o.precision=t+Math.max(i.e,i.sd())+4,o.rounding=1,n=i.d.length,n<3)i=xt(o,2,i,i,!0);else{e=1.4*Math.sqrt(n),e=e>16?16:e|0,i=i.times(1/pn(5,e)),i=xt(o,2,i,i,!0);for(var s,a=new o(5),l=new o(16),u=new o(20);e--;)s=i.times(i),i=i.times(a.plus(s.times(l.times(s).plus(u))))}return o.precision=t,o.rounding=r,E(i,t,r,!0)};f.hyperbolicTangent=f.tanh=function(){var e,t,r=this,n=r.constructor;return r.isFinite()?r.isZero()?new n(r):(e=n.precision,t=n.rounding,n.precision=e+7,n.rounding=1,$(r.sinh(),r.cosh(),n.precision=e,n.rounding=t)):new n(r.s)};f.inverseCosine=f.acos=function(){var e=this,t=e.constructor,r=e.abs().cmp(1),n=t.precision,i=t.rounding;return r!==-1?r===0?e.isNeg()?ve(t,n,i):new t(0):new t(NaN):e.isZero()?ve(t,n+4,i).times(.5):(t.precision=n+6,t.rounding=1,e=new t(1).minus(e).div(e.plus(1)).sqrt().atan(),t.precision=n,t.rounding=i,e.times(2))};f.inverseHyperbolicCosine=f.acosh=function(){var e,t,r=this,n=r.constructor;return r.lte(1)?new n(r.eq(1)?0:NaN):r.isFinite()?(e=n.precision,t=n.rounding,n.precision=e+Math.max(Math.abs(r.e),r.sd())+4,n.rounding=1,w=!1,r=r.times(r).minus(1).sqrt().plus(r),w=!0,n.precision=e,n.rounding=t,r.ln()):new n(r)};f.inverseHyperbolicSine=f.asinh=function(){var e,t,r=this,n=r.constructor;return!r.isFinite()||r.isZero()?new n(r):(e=n.precision,t=n.rounding,n.precision=e+2*Math.max(Math.abs(r.e),r.sd())+6,n.rounding=1,w=!1,r=r.times(r).plus(1).sqrt().plus(r),w=!0,n.precision=e,n.rounding=t,r.ln())};f.inverseHyperbolicTangent=f.atanh=function(){var e,t,r,n,i=this,o=i.constructor;return i.isFinite()?i.e>=0?new o(i.abs().eq(1)?i.s/0:i.isZero()?i:NaN):(e=o.precision,t=o.rounding,n=i.sd(),Math.max(n,e)<2*-i.e-1?E(new o(i),e,t,!0):(o.precision=r=n-i.e,i=$(i.plus(1),new o(1).minus(i),r+e,1),o.precision=e+4,o.rounding=1,i=i.ln(),o.precision=e,o.rounding=t,i.times(.5))):new o(NaN)};f.inverseSine=f.asin=function(){var e,t,r,n,i=this,o=i.constructor;return i.isZero()?new o(i):(t=i.abs().cmp(1),r=o.precision,n=o.rounding,t!==-1?t===0?(e=ve(o,r+4,n).times(.5),e.s=i.s,e):new o(NaN):(o.precision=r+6,o.rounding=1,i=i.div(new o(1).minus(i.times(i)).sqrt().plus(1)).atan(),o.precision=r,o.rounding=n,i.times(2)))};f.inverseTangent=f.atan=function(){var e,t,r,n,i,o,s,a,l,u=this,c=u.constructor,p=c.precision,m=c.rounding;if(u.isFinite()){if(u.isZero())return new c(u);if(u.abs().eq(1)&&p+4<=ji)return s=ve(c,p+4,m).times(.25),s.s=u.s,s}else{if(!u.s)return new c(NaN);if(p+4<=ji)return s=ve(c,p+4,m).times(.5),s.s=u.s,s}for(c.precision=a=p+10,c.rounding=1,r=Math.min(28,a/b+2|0),e=r;e;--e)u=u.div(u.times(u).plus(1).sqrt().plus(1));for(w=!1,t=Math.ceil(a/b),n=1,l=u.times(u),s=new c(u),i=u;e!==-1;)if(i=i.times(l),o=s.minus(i.div(n+=2)),i=i.times(l),s=o.plus(i.div(n+=2)),s.d[t]!==void 0)for(e=t;s.d[e]===o.d[e]&&e--;);return r&&(s=s.times(2<<r-1)),w=!0,E(s,c.precision=p,c.rounding=m,!0)};f.isFinite=function(){return!!this.d};f.isInteger=f.isInt=function(){return!!this.d&&ne(this.e/b)>this.d.length-2};f.isNaN=function(){return!this.s};f.isNegative=f.isNeg=function(){return this.s<0};f.isPositive=f.isPos=function(){return this.s>0};f.isZero=function(){return!!this.d&&this.d[0]===0};f.lessThan=f.lt=function(e){return this.cmp(e)<0};f.lessThanOrEqualTo=f.lte=function(e){return this.cmp(e)<1};f.logarithm=f.log=function(e){var t,r,n,i,o,s,a,l,u=this,c=u.constructor,p=c.precision,m=c.rounding,g=5;if(e==null)e=new c(10),t=!0;else{if(e=new c(e),r=e.d,e.s<0||!r||!r[0]||e.eq(1))return new c(NaN);t=e.eq(10)}if(r=u.d,u.s<0||!r||!r[0]||u.eq(1))return new c(r&&!r[0]?-1/0:u.s!=1?NaN:r?0:1/0);if(t)if(r.length>1)o=!0;else{for(i=r[0];i%10===0;)i/=10;o=i!==1}if(w=!1,a=p+g,s=Ke(u,a),n=t?ln(c,a+10):Ke(e,a),l=$(s,n,a,1),sr(l.d,i=p,m))do if(a+=10,s=Ke(u,a),n=t?ln(c,a+10):Ke(e,a),l=$(s,n,a,1),!o){+z(l.d).slice(i+1,i+15)+1==1e14&&(l=E(l,p+1,0));break}while(sr(l.d,i+=10,m));return w=!0,E(l,p,m)};f.minus=f.sub=function(e){var t,r,n,i,o,s,a,l,u,c,p,m,g=this,h=g.constructor;if(e=new h(e),!g.d||!e.d)return!g.s||!e.s?e=new h(NaN):g.d?e.s=-e.s:e=new h(e.d||g.s!==e.s?g:NaN),e;if(g.s!=e.s)return e.s=-e.s,g.plus(e);if(u=g.d,m=e.d,a=h.precision,l=h.rounding,!u[0]||!m[0]){if(m[0])e.s=-e.s;else if(u[0])e=new h(g);else return new h(l===3?-0:0);return w?E(e,a,l):e}if(r=ne(e.e/b),c=ne(g.e/b),u=u.slice(),o=c-r,o){for(p=o<0,p?(t=u,o=-o,s=m.length):(t=m,r=c,s=u.length),n=Math.max(Math.ceil(a/b),s)+2,o>n&&(o=n,t.length=1),t.reverse(),n=o;n--;)t.push(0);t.reverse()}else{for(n=u.length,s=m.length,p=n<s,p&&(s=n),n=0;n<s;n++)if(u[n]!=m[n]){p=u[n]<m[n];break}o=0}for(p&&(t=u,u=m,m=t,e.s=-e.s),s=u.length,n=m.length-s;n>0;--n)u[s++]=0;for(n=m.length;n>o;){if(u[--n]<m[n]){for(i=n;i&&u[--i]===0;)u[i]=ye-1;--u[i],u[n]+=ye}u[n]-=m[n]}for(;u[--s]===0;)u.pop();for(;u[0]===0;u.shift())--r;return u[0]?(e.d=u,e.e=cn(u,r),w?E(e,a,l):e):new h(l===3?-0:0)};f.modulo=f.mod=function(e){var t,r=this,n=r.constructor;return e=new n(e),!r.d||!e.s||e.d&&!e.d[0]?new n(NaN):!e.d||r.d&&!r.d[0]?E(new n(r),n.precision,n.rounding):(w=!1,n.modulo==9?(t=$(r,e.abs(),0,3,1),t.s*=e.s):t=$(r,e,0,n.modulo,1),t=t.times(e),w=!0,r.minus(t))};f.naturalExponential=f.exp=function(){return Bi(this)};f.naturalLogarithm=f.ln=function(){return Ke(this)};f.negated=f.neg=function(){var e=new this.constructor(this);return e.s=-e.s,E(e)};f.plus=f.add=function(e){var t,r,n,i,o,s,a,l,u,c,p=this,m=p.constructor;if(e=new m(e),!p.d||!e.d)return!p.s||!e.s?e=new m(NaN):p.d||(e=new m(e.d||p.s===e.s?p:NaN)),e;if(p.s!=e.s)return e.s=-e.s,p.minus(e);if(u=p.d,c=e.d,a=m.precision,l=m.rounding,!u[0]||!c[0])return c[0]||(e=new m(p)),w?E(e,a,l):e;if(o=ne(p.e/b),n=ne(e.e/b),u=u.slice(),i=o-n,i){for(i<0?(r=u,i=-i,s=c.length):(r=c,n=o,s=u.length),o=Math.ceil(a/b),s=o>s?o+1:s+1,i>s&&(i=s,r.length=1),r.reverse();i--;)r.push(0);r.reverse()}for(s=u.length,i=c.length,s-i<0&&(i=s,r=c,c=u,u=r),t=0;i;)t=(u[--i]=u[i]+c[i]+t)/ye|0,u[i]%=ye;for(t&&(u.unshift(t),++n),s=u.length;u[--s]==0;)u.pop();return e.d=u,e.e=cn(u,n),w?E(e,a,l):e};f.precision=f.sd=function(e){var t,r=this;if(e!==void 0&&e!==!!e&&e!==1&&e!==0)throw Error(Ye+e);return r.d?(t=Bs(r.d),e&&r.e+1>t&&(t=r.e+1)):t=NaN,t};f.round=function(){var e=this,t=e.constructor;return E(new t(e),e.e+1,t.rounding)};f.sine=f.sin=function(){var e,t,r=this,n=r.constructor;return r.isFinite()?r.isZero()?new n(r):(e=n.precision,t=n.rounding,n.precision=e+Math.max(r.e,r.sd())+b,n.rounding=1,r=Yc(n,Js(n,r)),n.precision=e,n.rounding=t,E($e>2?r.neg():r,e,t,!0)):new n(NaN)};f.squareRoot=f.sqrt=function(){var e,t,r,n,i,o,s=this,a=s.d,l=s.e,u=s.s,c=s.constructor;if(u!==1||!a||!a[0])return new c(!u||u<0&&(!a||a[0])?NaN:a?s:1/0);for(w=!1,u=Math.sqrt(+s),u==0||u==1/0?(t=z(a),(t.length+l)%2==0&&(t+=\"0\"),u=Math.sqrt(t),l=ne((l+1)/2)-(l<0||l%2),u==1/0?t=\"5e\"+l:(t=u.toExponential(),t=t.slice(0,t.indexOf(\"e\")+1)+l),n=new c(t)):n=new c(u.toString()),r=(l=c.precision)+3;;)if(o=n,n=o.plus($(s,o,r+2,1)).times(.5),z(o.d).slice(0,r)===(t=z(n.d)).slice(0,r))if(t=t.slice(r-3,r+1),t==\"9999\"||!i&&t==\"4999\"){if(!i&&(E(o,l+1,0),o.times(o).eq(s))){n=o;break}r+=4,i=1}else{(!+t||!+t.slice(1)&&t.charAt(0)==\"5\")&&(E(n,l+1,1),e=!n.times(n).eq(s));break}return w=!0,E(n,l,c.rounding,e)};f.tangent=f.tan=function(){var e,t,r=this,n=r.constructor;return r.isFinite()?r.isZero()?new n(r):(e=n.precision,t=n.rounding,n.precision=e+10,n.rounding=1,r=r.sin(),r.s=1,r=$(r,new n(1).minus(r.times(r)).sqrt(),e+10,0),n.precision=e,n.rounding=t,E($e==2||$e==4?r.neg():r,e,t,!0)):new n(NaN)};f.times=f.mul=function(e){var t,r,n,i,o,s,a,l,u,c=this,p=c.constructor,m=c.d,g=(e=new p(e)).d;if(e.s*=c.s,!m||!m[0]||!g||!g[0])return new p(!e.s||m&&!m[0]&&!g||g&&!g[0]&&!m?NaN:!m||!g?e.s/0:e.s*0);for(r=ne(c.e/b)+ne(e.e/b),l=m.length,u=g.length,l<u&&(o=m,m=g,g=o,s=l,l=u,u=s),o=[],s=l+u,n=s;n--;)o.push(0);for(n=u;--n>=0;){for(t=0,i=l+n;i>n;)a=o[i]+g[n]*m[i-n-1]+t,o[i--]=a%ye|0,t=a/ye|0;o[i]=(o[i]+t)%ye|0}for(;!o[--s];)o.pop();return t?++r:o.shift(),e.d=o,e.e=cn(o,r),w?E(e,p.precision,p.rounding):e};f.toBinary=function(e,t){return Ui(this,2,e,t)};f.toDecimalPlaces=f.toDP=function(e,t){var r=this,n=r.constructor;return r=new n(r),e===void 0?r:(ae(e,0,ze),t===void 0?t=n.rounding:ae(t,0,8),E(r,e+r.e+1,t))};f.toExponential=function(e,t){var r,n=this,i=n.constructor;return e===void 0?r=Te(n,!0):(ae(e,0,ze),t===void 0?t=i.rounding:ae(t,0,8),n=E(new i(n),e+1,t),r=Te(n,!0,e+1)),n.isNeg()&&!n.isZero()?\"-\"+r:r};f.toFixed=function(e,t){var r,n,i=this,o=i.constructor;return e===void 0?r=Te(i):(ae(e,0,ze),t===void 0?t=o.rounding:ae(t,0,8),n=E(new o(i),e+i.e+1,t),r=Te(n,!1,e+n.e+1)),i.isNeg()&&!i.isZero()?\"-\"+r:r};f.toFraction=function(e){var t,r,n,i,o,s,a,l,u,c,p,m,g=this,h=g.d,y=g.constructor;if(!h)return new y(g);if(u=r=new y(1),n=l=new y(0),t=new y(n),o=t.e=Bs(h)-g.e-1,s=o%b,t.d[0]=J(10,s<0?b+s:s),e==null)e=o>0?t:u;else{if(a=new y(e),!a.isInt()||a.lt(u))throw Error(Ye+a);e=a.gt(t)?o>0?t:u:a}for(w=!1,a=new y(z(h)),c=y.precision,y.precision=o=h.length*b*2;p=$(a,t,0,1,1),i=r.plus(p.times(n)),i.cmp(e)!=1;)r=n,n=i,i=u,u=l.plus(p.times(i)),l=i,i=t,t=a.minus(p.times(i)),a=i;return i=$(e.minus(r),n,0,1,1),l=l.plus(i.times(u)),r=r.plus(i.times(n)),l.s=u.s=g.s,m=$(u,n,o,1).minus(g).abs().cmp($(l,r,o,1).minus(g).abs())<1?[u,n]:[l,r],y.precision=c,w=!0,m};f.toHexadecimal=f.toHex=function(e,t){return Ui(this,16,e,t)};f.toNearest=function(e,t){var r=this,n=r.constructor;if(r=new n(r),e==null){if(!r.d)return r;e=new n(1),t=n.rounding}else{if(e=new n(e),t===void 0?t=n.rounding:ae(t,0,8),!r.d)return e.s?r:e;if(!e.d)return e.s&&(e.s=r.s),e}return e.d[0]?(w=!1,r=$(r,e,0,t,1).times(e),w=!0,E(r)):(e.s=r.s,r=e),r};f.toNumber=function(){return+this};f.toOctal=function(e,t){return Ui(this,8,e,t)};f.toPower=f.pow=function(e){var t,r,n,i,o,s,a=this,l=a.constructor,u=+(e=new l(e));if(!a.d||!e.d||!a.d[0]||!e.d[0])return new l(J(+a,u));if(a=new l(a),a.eq(1))return a;if(n=l.precision,o=l.rounding,e.eq(1))return E(a,n,o);if(t=ne(e.e/b),t>=e.d.length-1&&(r=u<0?-u:u)<=Jc)return i=Us(l,a,r,n),e.s<0?new l(1).div(i):E(i,n,o);if(s=a.s,s<0){if(t<e.d.length-1)return new l(NaN);if(e.d[t]&1||(s=1),a.e==0&&a.d[0]==1&&a.d.length==1)return a.s=s,a}return r=J(+a,u),t=r==0||!isFinite(r)?ne(u*(Math.log(\"0.\"+z(a.d))/Math.LN10+a.e+1)):new l(r+\"\").e,t>l.maxE+1||t<l.minE-1?new l(t>0?s/0:0):(w=!1,l.rounding=a.s=1,r=Math.min(12,(t+\"\").length),i=Bi(e.times(Ke(a,n+r)),n),i.d&&(i=E(i,n+5,1),sr(i.d,n,o)&&(t=n+10,i=E(Bi(e.times(Ke(a,t+r)),t),t+5,1),+z(i.d).slice(n+1,n+15)+1==1e14&&(i=E(i,n+1,0)))),i.s=s,w=!0,l.rounding=o,E(i,n,o))};f.toPrecision=function(e,t){var r,n=this,i=n.constructor;return e===void 0?r=Te(n,n.e<=i.toExpNeg||n.e>=i.toExpPos):(ae(e,1,ze),t===void 0?t=i.rounding:ae(t,0,8),n=E(new i(n),e,t),r=Te(n,e<=n.e||n.e<=i.toExpNeg,e)),n.isNeg()&&!n.isZero()?\"-\"+r:r};f.toSignificantDigits=f.toSD=function(e,t){var r=this,n=r.constructor;return e===void 0?(e=n.precision,t=n.rounding):(ae(e,1,ze),t===void 0?t=n.rounding:ae(t,0,8)),E(new n(r),e,t)};f.toString=function(){var e=this,t=e.constructor,r=Te(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()&&!e.isZero()?\"-\"+r:r};f.truncated=f.trunc=function(){return E(new this.constructor(this),this.e+1,1)};f.valueOf=f.toJSON=function(){var e=this,t=e.constructor,r=Te(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()?\"-\"+r:r};function z(e){var t,r,n,i=e.length-1,o=\"\",s=e[0];if(i>0){for(o+=s,t=1;t<i;t++)n=e[t]+\"\",r=b-n.length,r&&(o+=He(r)),o+=n;s=e[t],n=s+\"\",r=b-n.length,r&&(o+=He(r))}else if(s===0)return\"0\";for(;s%10===0;)s/=10;return o+s}function ae(e,t,r){if(e!==~~e||e<t||e>r)throw Error(Ye+e)}function sr(e,t,r,n){var i,o,s,a;for(o=e[0];o>=10;o/=10)--t;return--t<0?(t+=b,i=0):(i=Math.ceil((t+1)/b),t%=b),o=J(10,b-t),a=e[i]%o|0,n==null?t<3?(t==0?a=a/100|0:t==1&&(a=a/10|0),s=r<4&&a==99999||r>3&&a==49999||a==5e4||a==0):s=(r<4&&a+1==o||r>3&&a+1==o/2)&&(e[i+1]/o/100|0)==J(10,t-2)-1||(a==o/2||a==0)&&(e[i+1]/o/100|0)==0:t<4?(t==0?a=a/1e3|0:t==1?a=a/100|0:t==2&&(a=a/10|0),s=(n||r<4)&&a==9999||!n&&r>3&&a==4999):s=((n||r<4)&&a+1==o||!n&&r>3&&a+1==o/2)&&(e[i+1]/o/1e3|0)==J(10,t-3)-1,s}function nn(e,t,r){for(var n,i=[0],o,s=0,a=e.length;s<a;){for(o=i.length;o--;)i[o]*=t;for(i[0]+=qi.indexOf(e.charAt(s++)),n=0;n<i.length;n++)i[n]>r-1&&(i[n+1]===void 0&&(i[n+1]=0),i[n+1]+=i[n]/r|0,i[n]%=r)}return i.reverse()}function Hc(e,t){var r,n,i;if(t.isZero())return t;n=t.d.length,n<32?(r=Math.ceil(n/3),i=(1/pn(4,r)).toString()):(r=16,i=\"2.3283064365386962890625e-10\"),e.precision+=r,t=xt(e,1,t.times(i),new e(1));for(var o=r;o--;){var s=t.times(t);t=s.times(s).minus(s).times(8).plus(1)}return e.precision-=r,t}var $=function(){function e(n,i,o){var s,a=0,l=n.length;for(n=n.slice();l--;)s=n[l]*i+a,n[l]=s%o|0,a=s/o|0;return a&&n.unshift(a),n}function t(n,i,o,s){var a,l;if(o!=s)l=o>s?1:-1;else for(a=l=0;a<o;a++)if(n[a]!=i[a]){l=n[a]>i[a]?1:-1;break}return l}function r(n,i,o,s){for(var a=0;o--;)n[o]-=a,a=n[o]<i[o]?1:0,n[o]=a*s+n[o]-i[o];for(;!n[0]&&n.length>1;)n.shift()}return function(n,i,o,s,a,l){var u,c,p,m,g,h,y,O,T,S,R,_,I,ce,Gt,Q,se,Oe,Z,mt,$r=n.constructor,Hn=n.s==i.s?1:-1,X=n.d,F=i.d;if(!X||!X[0]||!F||!F[0])return new $r(!n.s||!i.s||(X?F&&X[0]==F[0]:!F)?NaN:X&&X[0]==0||!F?Hn*0:Hn/0);for(l?(g=1,c=n.e-i.e):(l=ye,g=b,c=ne(n.e/g)-ne(i.e/g)),Z=F.length,se=X.length,T=new $r(Hn),S=T.d=[],p=0;F[p]==(X[p]||0);p++);if(F[p]>(X[p]||0)&&c--,o==null?(ce=o=$r.precision,s=$r.rounding):a?ce=o+(n.e-i.e)+1:ce=o,ce<0)S.push(1),h=!0;else{if(ce=ce/g+2|0,p=0,Z==1){for(m=0,F=F[0],ce++;(p<se||m)&&ce--;p++)Gt=m*l+(X[p]||0),S[p]=Gt/F|0,m=Gt%F|0;h=m||p<se}else{for(m=l/(F[0]+1)|0,m>1&&(F=e(F,m,l),X=e(X,m,l),Z=F.length,se=X.length),Q=Z,R=X.slice(0,Z),_=R.length;_<Z;)R[_++]=0;mt=F.slice(),mt.unshift(0),Oe=F[0],F[1]>=l/2&&++Oe;do m=0,u=t(F,R,Z,_),u<0?(I=R[0],Z!=_&&(I=I*l+(R[1]||0)),m=I/Oe|0,m>1?(m>=l&&(m=l-1),y=e(F,m,l),O=y.length,_=R.length,u=t(y,R,O,_),u==1&&(m--,r(y,Z<O?mt:F,O,l))):(m==0&&(u=m=1),y=F.slice()),O=y.length,O<_&&y.unshift(0),r(R,y,_,l),u==-1&&(_=R.length,u=t(F,R,Z,_),u<1&&(m++,r(R,Z<_?mt:F,_,l))),_=R.length):u===0&&(m++,R=[0]),S[p++]=m,u&&R[0]?R[_++]=X[Q]||0:(R=[X[Q]],_=1);while((Q++<se||R[0]!==void 0)&&ce--);h=R[0]!==void 0}S[0]||S.shift()}if(g==1)T.e=c,Ms=h;else{for(p=1,m=S[0];m>=10;m/=10)p++;T.e=p+c*g-1,E(T,a?o+T.e+1:o,s,h)}return T}}();function E(e,t,r,n){var i,o,s,a,l,u,c,p,m,g=e.constructor;e:if(t!=null){if(p=e.d,!p)return e;for(i=1,a=p[0];a>=10;a/=10)i++;if(o=t-i,o<0)o+=b,s=t,c=p[m=0],l=c/J(10,i-s-1)%10|0;else if(m=Math.ceil((o+1)/b),a=p.length,m>=a)if(n){for(;a++<=m;)p.push(0);c=l=0,i=1,o%=b,s=o-b+1}else break e;else{for(c=a=p[m],i=1;a>=10;a/=10)i++;o%=b,s=o-b+i,l=s<0?0:c/J(10,i-s-1)%10|0}if(n=n||t<0||p[m+1]!==void 0||(s<0?c:c%J(10,i-s-1)),u=r<4?(l||n)&&(r==0||r==(e.s<0?3:2)):l>5||l==5&&(r==4||n||r==6&&(o>0?s>0?c/J(10,i-s):0:p[m-1])%10&1||r==(e.s<0?8:7)),t<1||!p[0])return p.length=0,u?(t-=e.e+1,p[0]=J(10,(b-t%b)%b),e.e=-t||0):p[0]=e.e=0,e;if(o==0?(p.length=m,a=1,m--):(p.length=m+1,a=J(10,b-o),p[m]=s>0?(c/J(10,i-s)%J(10,s)|0)*a:0),u)for(;;)if(m==0){for(o=1,s=p[0];s>=10;s/=10)o++;for(s=p[0]+=a,a=1;s>=10;s/=10)a++;o!=a&&(e.e++,p[0]==ye&&(p[0]=1));break}else{if(p[m]+=a,p[m]!=ye)break;p[m--]=0,a=1}for(o=p.length;p[--o]===0;)p.pop()}return w&&(e.e>g.maxE?(e.d=null,e.e=NaN):e.e<g.minE&&(e.e=0,e.d=[0])),e}function Te(e,t,r){if(!e.isFinite())return Gs(e);var n,i=e.e,o=z(e.d),s=o.length;return t?(r&&(n=r-s)>0?o=o.charAt(0)+\".\"+o.slice(1)+He(n):s>1&&(o=o.charAt(0)+\".\"+o.slice(1)),o=o+(e.e<0?\"e\":\"e+\")+e.e):i<0?(o=\"0.\"+He(-i-1)+o,r&&(n=r-s)>0&&(o+=He(n))):i>=s?(o+=He(i+1-s),r&&(n=r-i-1)>0&&(o=o+\".\"+He(n))):((n=i+1)<s&&(o=o.slice(0,n)+\".\"+o.slice(n)),r&&(n=r-s)>0&&(i+1===s&&(o+=\".\"),o+=He(n))),o}function cn(e,t){var r=e[0];for(t*=b;r>=10;r/=10)t++;return t}function ln(e,t,r){if(t>Wc)throw w=!0,r&&(e.precision=r),Error($s);return E(new e(sn),t,1,!0)}function ve(e,t,r){if(t>ji)throw Error($s);return E(new e(an),t,r,!0)}function Bs(e){var t=e.length-1,r=t*b+1;if(t=e[t],t){for(;t%10==0;t/=10)r--;for(t=e[0];t>=10;t/=10)r++}return r}function He(e){for(var t=\"\";e--;)t+=\"0\";return t}function Us(e,t,r,n){var i,o=new e(1),s=Math.ceil(n/b+4);for(w=!1;;){if(r%2&&(o=o.times(t),Ls(o.d,s)&&(i=!0)),r=ne(r/2),r===0){r=o.d.length-1,i&&o.d[r]===0&&++o.d[r];break}t=t.times(t),Ls(t.d,s)}return w=!0,o}function Ns(e){return e.d[e.d.length-1]&1}function Qs(e,t,r){for(var n,i,o=new e(t[0]),s=0;++s<t.length;){if(i=new e(t[s]),!i.s){o=i;break}n=o.cmp(i),(n===r||n===0&&o.s===r)&&(o=i)}return o}function Bi(e,t){var r,n,i,o,s,a,l,u=0,c=0,p=0,m=e.constructor,g=m.rounding,h=m.precision;if(!e.d||!e.d[0]||e.e>17)return new m(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(t==null?(w=!1,l=h):l=t,a=new m(.03125);e.e>-2;)e=e.times(a),p+=5;for(n=Math.log(J(2,p))/Math.LN10*2+5|0,l+=n,r=o=s=new m(1),m.precision=l;;){if(o=E(o.times(e),l,1),r=r.times(++c),a=s.plus($(o,r,l,1)),z(a.d).slice(0,l)===z(s.d).slice(0,l)){for(i=p;i--;)s=E(s.times(s),l,1);if(t==null)if(u<3&&sr(s.d,l-n,g,u))m.precision=l+=10,r=o=a=new m(1),c=0,u++;else return E(s,m.precision=h,g,w=!0);else return m.precision=h,s}s=a}}function Ke(e,t){var r,n,i,o,s,a,l,u,c,p,m,g=1,h=10,y=e,O=y.d,T=y.constructor,S=T.rounding,R=T.precision;if(y.s<0||!O||!O[0]||!y.e&&O[0]==1&&O.length==1)return new T(O&&!O[0]?-1/0:y.s!=1?NaN:O?0:y);if(t==null?(w=!1,c=R):c=t,T.precision=c+=h,r=z(O),n=r.charAt(0),Math.abs(o=y.e)<15e14){for(;n<7&&n!=1||n==1&&r.charAt(1)>3;)y=y.times(e),r=z(y.d),n=r.charAt(0),g++;o=y.e,n>1?(y=new T(\"0.\"+r),o++):y=new T(n+\".\"+r.slice(1))}else return u=ln(T,c+2,R).times(o+\"\"),y=Ke(new T(n+\".\"+r.slice(1)),c-h).plus(u),T.precision=R,t==null?E(y,R,S,w=!0):y;for(p=y,l=s=y=$(y.minus(1),y.plus(1),c,1),m=E(y.times(y),c,1),i=3;;){if(s=E(s.times(m),c,1),u=l.plus($(s,new T(i),c,1)),z(u.d).slice(0,c)===z(l.d).slice(0,c))if(l=l.times(2),o!==0&&(l=l.plus(ln(T,c+2,R).times(o+\"\"))),l=$(l,new T(g),c,1),t==null)if(sr(l.d,c-h,S,a))T.precision=c+=h,u=s=y=$(p.minus(1),p.plus(1),c,1),m=E(y.times(y),c,1),i=a=1;else return E(l,T.precision=R,S,w=!0);else return T.precision=R,l;l=u,i+=2}}function Gs(e){return String(e.s*e.s/0)}function on(e,t){var r,n,i;for((r=t.indexOf(\".\"))>-1&&(t=t.replace(\".\",\"\")),(n=t.search(/e/i))>0?(r<0&&(r=n),r+=+t.slice(n+1),t=t.substring(0,n)):r<0&&(r=t.length),n=0;t.charCodeAt(n)===48;n++);for(i=t.length;t.charCodeAt(i-1)===48;--i);if(t=t.slice(n,i),t){if(i-=n,e.e=r=r-n-1,e.d=[],n=(r+1)%b,r<0&&(n+=b),n<i){for(n&&e.d.push(+t.slice(0,n)),i-=b;n<i;)e.d.push(+t.slice(n,n+=b));t=t.slice(n),n=b-t.length}else n-=i;for(;n--;)t+=\"0\";e.d.push(+t),w&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function Kc(e,t){var r,n,i,o,s,a,l,u,c;if(t.indexOf(\"_\")>-1){if(t=t.replace(/(\\d)_(?=\\d)/g,\"$1\"),js.test(t))return on(e,t)}else if(t===\"Infinity\"||t===\"NaN\")return+t||(e.s=NaN),e.e=NaN,e.d=null,e;if(Qc.test(t))r=16,t=t.toLowerCase();else if(Uc.test(t))r=2;else if(Gc.test(t))r=8;else throw Error(Ye+t);for(o=t.search(/p/i),o>0?(l=+t.slice(o+1),t=t.substring(2,o)):t=t.slice(2),o=t.indexOf(\".\"),s=o>=0,n=e.constructor,s&&(t=t.replace(\".\",\"\"),a=t.length,o=a-o,i=Us(n,new n(r),o,o*2)),u=nn(t,r,ye),c=u.length-1,o=c;u[o]===0;--o)u.pop();return o<0?new n(e.s*0):(e.e=cn(u,c),e.d=u,w=!1,s&&(e=$(e,i,a*4)),l&&(e=e.times(Math.abs(l)<54?J(2,l):st.pow(2,l))),w=!0,e)}function Yc(e,t){var r,n=t.d.length;if(n<3)return t.isZero()?t:xt(e,2,t,t);r=1.4*Math.sqrt(n),r=r>16?16:r|0,t=t.times(1/pn(5,r)),t=xt(e,2,t,t);for(var i,o=new e(5),s=new e(16),a=new e(20);r--;)i=t.times(t),t=t.times(o.plus(i.times(s.times(i).minus(a))));return t}function xt(e,t,r,n,i){var o,s,a,l,u=1,c=e.precision,p=Math.ceil(c/b);for(w=!1,l=r.times(r),a=new e(n);;){if(s=$(a.times(l),new e(t++*t++),c,1),a=i?n.plus(s):n.minus(s),n=$(s.times(l),new e(t++*t++),c,1),s=a.plus(n),s.d[p]!==void 0){for(o=p;s.d[o]===a.d[o]&&o--;);if(o==-1)break}o=a,a=n,n=s,s=o,u++}return w=!0,s.d.length=p+1,s}function pn(e,t){for(var r=e;--t;)r*=e;return r}function Js(e,t){var r,n=t.s<0,i=ve(e,e.precision,1),o=i.times(.5);if(t=t.abs(),t.lte(o))return $e=n?4:1,t;if(r=t.divToInt(i),r.isZero())$e=n?3:2;else{if(t=t.minus(r.times(i)),t.lte(o))return $e=Ns(r)?n?2:3:n?4:1,t;$e=Ns(r)?n?1:4:n?3:2}return t.minus(i).abs()}function Ui(e,t,r,n){var i,o,s,a,l,u,c,p,m,g=e.constructor,h=r!==void 0;if(h?(ae(r,1,ze),n===void 0?n=g.rounding:ae(n,0,8)):(r=g.precision,n=g.rounding),!e.isFinite())c=Gs(e);else{for(c=Te(e),s=c.indexOf(\".\"),h?(i=2,t==16?r=r*4-3:t==8&&(r=r*3-2)):i=t,s>=0&&(c=c.replace(\".\",\"\"),m=new g(1),m.e=c.length-s,m.d=nn(Te(m),10,i),m.e=m.d.length),p=nn(c,10,i),o=l=p.length;p[--l]==0;)p.pop();if(!p[0])c=h?\"0p+0\":\"0\";else{if(s<0?o--:(e=new g(e),e.d=p,e.e=o,e=$(e,m,r,n,0,i),p=e.d,o=e.e,u=Ms),s=p[r],a=i/2,u=u||p[r+1]!==void 0,u=n<4?(s!==void 0||u)&&(n===0||n===(e.s<0?3:2)):s>a||s===a&&(n===4||u||n===6&&p[r-1]&1||n===(e.s<0?8:7)),p.length=r,u)for(;++p[--r]>i-1;)p[r]=0,r||(++o,p.unshift(1));for(l=p.length;!p[l-1];--l);for(s=0,c=\"\";s<l;s++)c+=qi.charAt(p[s]);if(h){if(l>1)if(t==16||t==8){for(s=t==16?4:3,--l;l%s;l++)c+=\"0\";for(p=nn(c,i,t),l=p.length;!p[l-1];--l);for(s=1,c=\"1.\";s<l;s++)c+=qi.charAt(p[s])}else c=c.charAt(0)+\".\"+c.slice(1);c=c+(o<0?\"p\":\"p+\")+o}else if(o<0){for(;++o;)c=\"0\"+c;c=\"0.\"+c}else if(++o>l)for(o-=l;o--;)c+=\"0\";else o<l&&(c=c.slice(0,o)+\".\"+c.slice(o))}c=(t==16?\"0x\":t==2?\"0b\":t==8?\"0o\":\"\")+c}return e.s<0?\"-\"+c:c}function Ls(e,t){if(e.length>t)return e.length=t,!0}function zc(e){return new this(e).abs()}function Zc(e){return new this(e).acos()}function Xc(e){return new this(e).acosh()}function ep(e,t){return new this(e).plus(t)}function tp(e){return new this(e).asin()}function rp(e){return new this(e).asinh()}function np(e){return new this(e).atan()}function ip(e){return new this(e).atanh()}function op(e,t){e=new this(e),t=new this(t);var r,n=this.precision,i=this.rounding,o=n+4;return!e.s||!t.s?r=new this(NaN):!e.d&&!t.d?(r=ve(this,o,1).times(t.s>0?.25:.75),r.s=e.s):!t.d||e.isZero()?(r=t.s<0?ve(this,n,i):new this(0),r.s=e.s):!e.d||t.isZero()?(r=ve(this,o,1).times(.5),r.s=e.s):t.s<0?(this.precision=o,this.rounding=1,r=this.atan($(e,t,o,1)),t=ve(this,o,1),this.precision=n,this.rounding=i,r=e.s<0?r.minus(t):r.plus(t)):r=this.atan($(e,t,o,1)),r}function sp(e){return new this(e).cbrt()}function ap(e){return E(e=new this(e),e.e+1,2)}function lp(e,t,r){return new this(e).clamp(t,r)}function up(e){if(!e||typeof e!=\"object\")throw Error(un+\"Object expected\");var t,r,n,i=e.defaults===!0,o=[\"precision\",1,ze,\"rounding\",0,8,\"toExpNeg\",-wt,0,\"toExpPos\",0,wt,\"maxE\",0,wt,\"minE\",-wt,0,\"modulo\",0,9];for(t=0;t<o.length;t+=3)if(r=o[t],i&&(this[r]=Vi[r]),(n=e[r])!==void 0)if(ne(n)===n&&n>=o[t+1]&&n<=o[t+2])this[r]=n;else throw Error(Ye+r+\": \"+n);if(r=\"crypto\",i&&(this[r]=Vi[r]),(n=e[r])!==void 0)if(n===!0||n===!1||n===0||n===1)if(n)if(typeof crypto<\"u\"&&crypto&&(crypto.getRandomValues||crypto.randomBytes))this[r]=!0;else throw Error(qs);else this[r]=!1;else throw Error(Ye+r+\": \"+n);return this}function cp(e){return new this(e).cos()}function pp(e){return new this(e).cosh()}function Ws(e){var t,r,n;function i(o){var s,a,l,u=this;if(!(u instanceof i))return new i(o);if(u.constructor=i,Fs(o)){u.s=o.s,w?!o.d||o.e>i.maxE?(u.e=NaN,u.d=null):o.e<i.minE?(u.e=0,u.d=[0]):(u.e=o.e,u.d=o.d.slice()):(u.e=o.e,u.d=o.d?o.d.slice():o.d);return}if(l=typeof o,l===\"number\"){if(o===0){u.s=1/o<0?-1:1,u.e=0,u.d=[0];return}if(o<0?(o=-o,u.s=-1):u.s=1,o===~~o&&o<1e7){for(s=0,a=o;a>=10;a/=10)s++;w?s>i.maxE?(u.e=NaN,u.d=null):s<i.minE?(u.e=0,u.d=[0]):(u.e=s,u.d=[o]):(u.e=s,u.d=[o]);return}if(o*0!==0){o||(u.s=NaN),u.e=NaN,u.d=null;return}return on(u,o.toString())}if(l===\"string\")return(a=o.charCodeAt(0))===45?(o=o.slice(1),u.s=-1):(a===43&&(o=o.slice(1)),u.s=1),js.test(o)?on(u,o):Kc(u,o);if(l===\"bigint\")return o<0?(o=-o,u.s=-1):u.s=1,on(u,o.toString());throw Error(Ye+o)}if(i.prototype=f,i.ROUND_UP=0,i.ROUND_DOWN=1,i.ROUND_CEIL=2,i.ROUND_FLOOR=3,i.ROUND_HALF_UP=4,i.ROUND_HALF_DOWN=5,i.ROUND_HALF_EVEN=6,i.ROUND_HALF_CEIL=7,i.ROUND_HALF_FLOOR=8,i.EUCLID=9,i.config=i.set=up,i.clone=Ws,i.isDecimal=Fs,i.abs=zc,i.acos=Zc,i.acosh=Xc,i.add=ep,i.asin=tp,i.asinh=rp,i.atan=np,i.atanh=ip,i.atan2=op,i.cbrt=sp,i.ceil=ap,i.clamp=lp,i.cos=cp,i.cosh=pp,i.div=dp,i.exp=mp,i.floor=fp,i.hypot=gp,i.ln=hp,i.log=yp,i.log10=bp,i.log2=Ep,i.max=wp,i.min=xp,i.mod=Pp,i.mul=vp,i.pow=Tp,i.random=Cp,i.round=Rp,i.sign=Sp,i.sin=Ap,i.sinh=Ip,i.sqrt=kp,i.sub=Op,i.sum=_p,i.tan=Dp,i.tanh=Np,i.trunc=Lp,e===void 0&&(e={}),e&&e.defaults!==!0)for(n=[\"precision\",\"rounding\",\"toExpNeg\",\"toExpPos\",\"maxE\",\"minE\",\"modulo\",\"crypto\"],t=0;t<n.length;)e.hasOwnProperty(r=n[t++])||(e[r]=this[r]);return i.config(e),i}function dp(e,t){return new this(e).div(t)}function mp(e){return new this(e).exp()}function fp(e){return E(e=new this(e),e.e+1,3)}function gp(){var e,t,r=new this(0);for(w=!1,e=0;e<arguments.length;)if(t=new this(arguments[e++]),t.d)r.d&&(r=r.plus(t.times(t)));else{if(t.s)return w=!0,new this(1/0);r=t}return w=!0,r.sqrt()}function Fs(e){return e instanceof st||e&&e.toStringTag===Vs||!1}function hp(e){return new this(e).ln()}function yp(e,t){return new this(e).log(t)}function Ep(e){return new this(e).log(2)}function bp(e){return new this(e).log(10)}function wp(){return Qs(this,arguments,-1)}function xp(){return Qs(this,arguments,1)}function Pp(e,t){return new this(e).mod(t)}function vp(e,t){return new this(e).mul(t)}function Tp(e,t){return new this(e).pow(t)}function Cp(e){var t,r,n,i,o=0,s=new this(1),a=[];if(e===void 0?e=this.precision:ae(e,1,ze),n=Math.ceil(e/b),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(n));o<n;)i=t[o],i>=429e7?t[o]=crypto.getRandomValues(new Uint32Array(1))[0]:a[o++]=i%1e7;else if(crypto.randomBytes){for(t=crypto.randomBytes(n*=4);o<n;)i=t[o]+(t[o+1]<<8)+(t[o+2]<<16)+((t[o+3]&127)<<24),i>=214e7?crypto.randomBytes(4).copy(t,o):(a.push(i%1e7),o+=4);o=n/4}else throw Error(qs);else for(;o<n;)a[o++]=Math.random()*1e7|0;for(n=a[--o],e%=b,n&&e&&(i=J(10,b-e),a[o]=(n/i|0)*i);a[o]===0;o--)a.pop();if(o<0)r=0,a=[0];else{for(r=-1;a[0]===0;r-=b)a.shift();for(n=1,i=a[0];i>=10;i/=10)n++;n<b&&(r-=b-n)}return s.e=r,s.d=a,s}function Rp(e){return E(e=new this(e),e.e+1,this.rounding)}function Sp(e){return e=new this(e),e.d?e.d[0]?e.s:0*e.s:e.s||NaN}function Ap(e){return new this(e).sin()}function Ip(e){return new this(e).sinh()}function kp(e){return new this(e).sqrt()}function Op(e,t){return new this(e).sub(t)}function _p(){var e=0,t=arguments,r=new this(t[e]);for(w=!1;r.s&&++e<t.length;)r=r.plus(t[e]);return w=!0,E(r,this.precision,this.rounding)}function Dp(e){return new this(e).tan()}function Np(e){return new this(e).tanh()}function Lp(e){return E(e=new this(e),e.e+1,1)}f[Symbol.for(\"nodejs.util.inspect.custom\")]=f.toString;f[Symbol.toStringTag]=\"Decimal\";var st=f.constructor=Ws(Vi);sn=new st(sn);an=new st(an);var Ce=st;function Pt(e){return e===null?e:Array.isArray(e)?e.map(Pt):typeof e==\"object\"?Fp(e)?Mp(e):bt(e,Pt):e}function Fp(e){return e!==null&&typeof e==\"object\"&&typeof e.$type==\"string\"}function Mp({$type:e,value:t}){switch(e){case\"BigInt\":return BigInt(t);case\"Bytes\":{let{buffer:r,byteOffset:n,byteLength:i}=Buffer.from(t,\"base64\");return new Uint8Array(r,n,i)}case\"DateTime\":return new Date(t);case\"Decimal\":return new Ce(t);case\"Json\":return JSON.parse(t);default:Me(t,\"Unknown tagged value\")}}function vt(e){return e.substring(0,1).toLowerCase()+e.substring(1)}function Tt(e){return e instanceof Date||Object.prototype.toString.call(e)===\"[object Date]\"}function dn(e){return e.toString()!==\"Invalid Date\"}function Ct(e){return st.isDecimal(e)?!0:e!==null&&typeof e==\"object\"&&typeof e.s==\"number\"&&typeof e.e==\"number\"&&typeof e.toFixed==\"function\"&&Array.isArray(e.d)}var Xs=D(Oi());var Zs=D(require(\"fs\"));var Hs={keyword:Ne,entity:Ne,value:e=>Y(it(e)),punctuation:it,directive:Ne,function:Ne,variable:e=>Y(it(e)),string:e=>Y(je(e)),boolean:De,number:Ne,comment:Ht};var $p=e=>e,mn={},qp=0,P={manual:mn.Prism&&mn.Prism.manual,disableWorkerMessageHandler:mn.Prism&&mn.Prism.disableWorkerMessageHandler,util:{encode:function(e){if(e instanceof Ee){let t=e;return new Ee(t.type,P.util.encode(t.content),t.alias)}else return Array.isArray(e)?e.map(P.util.encode):e.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/\\u00a0/g,\" \")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,\"__id\",{value:++qp}),e.__id},clone:function e(t,r){let n,i,o=P.util.type(t);switch(r=r||{},o){case\"Object\":if(i=P.util.objId(t),r[i])return r[i];n={},r[i]=n;for(let s in t)t.hasOwnProperty(s)&&(n[s]=e(t[s],r));return n;case\"Array\":return i=P.util.objId(t),r[i]?r[i]:(n=[],r[i]=n,t.forEach(function(s,a){n[a]=e(s,r)}),n);default:return t}}},languages:{extend:function(e,t){let r=P.util.clone(P.languages[e]);for(let n in t)r[n]=t[n];return r},insertBefore:function(e,t,r,n){n=n||P.languages;let i=n[e],o={};for(let a in i)if(i.hasOwnProperty(a)){if(a==t)for(let l in r)r.hasOwnProperty(l)&&(o[l]=r[l]);r.hasOwnProperty(a)||(o[a]=i[a])}let s=n[e];return n[e]=o,P.languages.DFS(P.languages,function(a,l){l===s&&a!=e&&(this[a]=o)}),o},DFS:function e(t,r,n,i){i=i||{};let o=P.util.objId;for(let s in t)if(t.hasOwnProperty(s)){r.call(t,s,t[s],n||s);let a=t[s],l=P.util.type(a);l===\"Object\"&&!i[o(a)]?(i[o(a)]=!0,e(a,r,null,i)):l===\"Array\"&&!i[o(a)]&&(i[o(a)]=!0,e(a,r,s,i))}}},plugins:{},highlight:function(e,t,r){let n={code:e,grammar:t,language:r};return P.hooks.run(\"before-tokenize\",n),n.tokens=P.tokenize(n.code,n.grammar),P.hooks.run(\"after-tokenize\",n),Ee.stringify(P.util.encode(n.tokens),n.language)},matchGrammar:function(e,t,r,n,i,o,s){for(let y in r){if(!r.hasOwnProperty(y)||!r[y])continue;if(y==s)return;let O=r[y];O=P.util.type(O)===\"Array\"?O:[O];for(let T=0;T<O.length;++T){let S=O[T],R=S.inside,_=!!S.lookbehind,I=!!S.greedy,ce=0,Gt=S.alias;if(I&&!S.pattern.global){let Q=S.pattern.toString().match(/[imuy]*$/)[0];S.pattern=RegExp(S.pattern.source,Q+\"g\")}S=S.pattern||S;for(let Q=n,se=i;Q<t.length;se+=t[Q].length,++Q){let Oe=t[Q];if(t.length>e.length)return;if(Oe instanceof Ee)continue;if(I&&Q!=t.length-1){S.lastIndex=se;var p=S.exec(e);if(!p)break;var c=p.index+(_?p[1].length:0),m=p.index+p[0].length,a=Q,l=se;for(let F=t.length;a<F&&(l<m||!t[a].type&&!t[a-1].greedy);++a)l+=t[a].length,c>=l&&(++Q,se=l);if(t[Q]instanceof Ee)continue;u=a-Q,Oe=e.slice(se,l),p.index-=se}else{S.lastIndex=0;var p=S.exec(Oe),u=1}if(!p){if(o)break;continue}_&&(ce=p[1]?p[1].length:0);var c=p.index+ce,p=p[0].slice(ce),m=c+p.length,g=Oe.slice(0,c),h=Oe.slice(m);let Z=[Q,u];g&&(++Q,se+=g.length,Z.push(g));let mt=new Ee(y,R?P.tokenize(p,R):p,Gt,p,I);if(Z.push(mt),h&&Z.push(h),Array.prototype.splice.apply(t,Z),u!=1&&P.matchGrammar(e,t,r,Q,se,!0,y),o)break}}}},tokenize:function(e,t){let r=[e],n=t.rest;if(n){for(let i in n)t[i]=n[i];delete t.rest}return P.matchGrammar(e,r,t,0,0,!1),r},hooks:{all:{},add:function(e,t){let r=P.hooks.all;r[e]=r[e]||[],r[e].push(t)},run:function(e,t){let r=P.hooks.all[e];if(!(!r||!r.length))for(var n=0,i;i=r[n++];)i(t)}},Token:Ee};P.languages.clike={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,lookbehind:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"class-name\":{pattern:/((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\\\]/}},keyword:/\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,boolean:/\\b(?:true|false)\\b/,function:/\\w+(?=\\()/,number:/\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,operator:/--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,punctuation:/[{}[\\];(),.:]/};P.languages.javascript=P.languages.extend(\"clike\",{\"class-name\":[P.languages.clike[\"class-name\"],{pattern:/(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,lookbehind:!0}],keyword:[{pattern:/((?:^|})\\s*)(?:catch|finally)\\b/,lookbehind:!0},{pattern:/(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,lookbehind:!0}],number:/\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,function:/[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,operator:/-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/});P.languages.javascript[\"class-name\"][0].pattern=/(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;P.languages.insertBefore(\"javascript\",\"keyword\",{regex:{pattern:/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=\\s*($|[\\r\\n,.;})\\]]))/,lookbehind:!0,greedy:!0},\"function-variable\":{pattern:/[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,alias:\"function\"},parameter:[{pattern:/(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,lookbehind:!0,inside:P.languages.javascript},{pattern:/[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,inside:P.languages.javascript},{pattern:/(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,lookbehind:!0,inside:P.languages.javascript},{pattern:/((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,lookbehind:!0,inside:P.languages.javascript}],constant:/\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/});P.languages.markup&&P.languages.markup.tag.addInlined(\"script\",\"javascript\");P.languages.js=P.languages.javascript;P.languages.typescript=P.languages.extend(\"javascript\",{keyword:/\\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|var|void|while|with|yield)\\b/,builtin:/\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/});P.languages.ts=P.languages.typescript;function Ee(e,t,r,n,i){this.type=e,this.content=t,this.alias=r,this.length=(n||\"\").length|0,this.greedy=!!i}Ee.stringify=function(e,t){return typeof e==\"string\"?e:Array.isArray(e)?e.map(function(r){return Ee.stringify(r,t)}).join(\"\"):Vp(e.type)(e.content)};function Vp(e){return Hs[e]||$p}function Ks(e){return jp(e,P.languages.javascript)}function jp(e,t){return P.tokenize(e,t).map(n=>Ee.stringify(n)).join(\"\")}var Ys=D(Ts());function zs(e){return(0,Ys.default)(e)}var fn=class e{constructor(t,r){d(this,\"firstLineNumber\");d(this,\"lines\");this.firstLineNumber=t,this.lines=r}static read(t){let r;try{r=Zs.default.readFileSync(t,\"utf-8\")}catch{return null}return e.fromContent(r)}static fromContent(t){let r=t.split(/\\r?\\n/);return new e(1,r)}get lastLineNumber(){return this.firstLineNumber+this.lines.length-1}mapLineAt(t,r){if(t<this.firstLineNumber||t>this.lines.length+this.firstLineNumber)return this;let n=t-this.firstLineNumber,i=[...this.lines];return i[n]=r(i[n]),new e(this.firstLineNumber,i)}mapLines(t){return new e(this.firstLineNumber,this.lines.map((r,n)=>t(r,this.firstLineNumber+n)))}lineAt(t){return this.lines[t-this.firstLineNumber]}prependSymbolAt(t,r){return this.mapLines((n,i)=>i===t?`${r} ${n}`:`  ${n}`)}slice(t,r){let n=this.lines.slice(t-1,r).join(`\n`);return new e(t,zs(n).split(`\n`))}highlight(){let t=Ks(this.toString());return new e(this.firstLineNumber,t.split(`\n`))}toString(){return this.lines.join(`\n`)}};var Bp={red:fe,gray:Ht,dim:_e,bold:Y,underline:ee,highlightSource:e=>e.highlight()},Up={red:e=>e,gray:e=>e,dim:e=>e,bold:e=>e,underline:e=>e,highlightSource:e=>e};function Qp({message:e,originalMethod:t,isPanic:r,callArguments:n}){return{functionName:`prisma.${t}()`,message:e,isPanic:r??!1,callArguments:n}}function Gp({callsite:e,message:t,originalMethod:r,isPanic:n,callArguments:i},o){let s=Qp({message:t,originalMethod:r,isPanic:n,callArguments:i});if(!e||typeof window<\"u\"||process.env.NODE_ENV===\"production\")return s;let a=e.getLocation();if(!a||!a.lineNumber||!a.columnNumber)return s;let l=Math.max(1,a.lineNumber-3),u=fn.read(a.fileName)?.slice(l,a.lineNumber),c=u?.lineAt(a.lineNumber);if(u&&c){let p=Wp(c),m=Jp(c);if(!m)return s;s.functionName=`${m.code})`,s.location=a,n||(u=u.mapLineAt(a.lineNumber,h=>h.slice(0,m.openingBraceIndex))),u=o.highlightSource(u);let g=String(u.lastLineNumber).length;if(s.contextLines=u.mapLines((h,y)=>o.gray(String(y).padStart(g))+\" \"+h).mapLines(h=>o.dim(h)).prependSymbolAt(a.lineNumber,o.bold(o.red(\"\\u2192\"))),i){let h=p+g+1;h+=2,s.callArguments=(0,Xs.default)(i,h).slice(h)}}return s}function Jp(e){let t=Object.keys(tr.ModelAction).join(\"|\"),n=new RegExp(String.raw`\\.(${t})\\(`).exec(e);if(n){let i=n.index+n[0].length,o=e.lastIndexOf(\" \",n.index)+1;return{code:e.slice(o,i),openingBraceIndex:i}}return null}function Wp(e){let t=0;for(let r=0;r<e.length;r++){if(e.charAt(r)!==\" \")return t;t++}return t}function Hp({functionName:e,location:t,message:r,isPanic:n,contextLines:i,callArguments:o},s){let a=[\"\"],l=t?\" in\":\":\";if(n?(a.push(s.red(`Oops, an unknown error occurred! This is ${s.bold(\"on us\")}, you did nothing wrong.`)),a.push(s.red(`It occurred in the ${s.bold(`\\`${e}\\``)} invocation${l}`))):a.push(s.red(`Invalid ${s.bold(`\\`${e}\\``)} invocation${l}`)),t&&a.push(s.underline(Kp(t))),i){a.push(\"\");let u=[i.toString()];o&&(u.push(o),u.push(s.dim(\")\"))),a.push(u.join(\"\")),o&&a.push(\"\")}else a.push(\"\"),o&&a.push(o),a.push(\"\");return a.push(r),a.join(`\n`)}function Kp(e){let t=[e.fileName];return e.lineNumber&&t.push(String(e.lineNumber)),e.columnNumber&&t.push(String(e.columnNumber)),t.join(\":\")}function gn(e){let t=e.showColors?Bp:Up,r;return r=Gp(e,t),Hp(r,t)}var sa=D(Qi());function na(e,t,r){let n=ia(e),i=Yp(n),o=Zp(i);o?hn(o,t,r):t.addErrorMessage(()=>\"Unknown error\")}function ia(e){return e.errors.flatMap(t=>t.kind===\"Union\"?ia(t):[t])}function Yp(e){let t=new Map,r=[];for(let n of e){if(n.kind!==\"InvalidArgumentType\"){r.push(n);continue}let i=`${n.selectionPath.join(\".\")}:${n.argumentPath.join(\".\")}`,o=t.get(i);o?t.set(i,{...n,argument:{...n.argument,typeNames:zp(o.argument.typeNames,n.argument.typeNames)}}):t.set(i,n)}return r.push(...t.values()),r}function zp(e,t){return[...new Set(e.concat(t))]}function Zp(e){return $i(e,(t,r)=>{let n=ta(t),i=ta(r);return n!==i?n-i:ra(t)-ra(r)})}function ta(e){let t=0;return Array.isArray(e.selectionPath)&&(t+=e.selectionPath.length),Array.isArray(e.argumentPath)&&(t+=e.argumentPath.length),t}function ra(e){switch(e.kind){case\"InvalidArgumentValue\":case\"ValueTooLarge\":return 20;case\"InvalidArgumentType\":return 10;case\"RequiredArgumentMissing\":return-10;default:return 0}}var de=class{constructor(t,r){this.name=t;this.value=r;d(this,\"isRequired\",!1)}makeRequired(){return this.isRequired=!0,this}write(t){let{colors:{green:r}}=t.context;t.addMarginSymbol(r(this.isRequired?\"+\":\"?\")),t.write(r(this.name)),this.isRequired||t.write(r(\"?\")),t.write(r(\": \")),typeof this.value==\"string\"?t.write(r(this.value)):t.write(this.value)}};var Rt=class{constructor(t=0,r){this.context=r;d(this,\"lines\",[]);d(this,\"currentLine\",\"\");d(this,\"currentIndent\",0);d(this,\"marginSymbol\");d(this,\"afterNextNewLineCallback\");this.currentIndent=t}write(t){return typeof t==\"string\"?this.currentLine+=t:t.write(this),this}writeJoined(t,r,n=(i,o)=>o.write(i)){let i=r.length-1;for(let o=0;o<r.length;o++)n(r[o],this),o!==i&&this.write(t);return this}writeLine(t){return this.write(t).newLine()}newLine(){this.lines.push(this.indentedCurrentLine()),this.currentLine=\"\",this.marginSymbol=void 0;let t=this.afterNextNewLineCallback;return this.afterNextNewLineCallback=void 0,t?.(),this}withIndent(t){return this.indent(),t(this),this.unindent(),this}afterNextNewline(t){return this.afterNextNewLineCallback=t,this}indent(){return this.currentIndent++,this}unindent(){return this.currentIndent>0&&this.currentIndent--,this}addMarginSymbol(t){return this.marginSymbol=t,this}toString(){return this.lines.concat(this.indentedCurrentLine()).join(`\n`)}getCurrentLineLength(){return this.currentLine.length}indentedCurrentLine(){let t=this.currentLine.padStart(this.currentLine.length+2*this.currentIndent);return this.marginSymbol?this.marginSymbol+t.slice(1):t}};var yn=class{constructor(t){this.value=t}write(t){t.write(this.value)}markAsError(){this.value.markAsError()}};var En=e=>e,bn={bold:En,red:En,green:En,dim:En,enabled:!1},oa={bold:Y,red:fe,green:je,dim:_e,enabled:!0},St={write(e){e.writeLine(\",\")}};var Re=class{constructor(t){this.contents=t;d(this,\"isUnderlined\",!1);d(this,\"color\",t=>t)}underline(){return this.isUnderlined=!0,this}setColor(t){return this.color=t,this}write(t){let r=t.getCurrentLineLength();t.write(this.color(this.contents)),this.isUnderlined&&t.afterNextNewline(()=>{t.write(\" \".repeat(r)).writeLine(this.color(\"~\".repeat(this.contents.length)))})}};var Ze=class{constructor(){d(this,\"hasError\",!1)}markAsError(){return this.hasError=!0,this}};var At=class extends Ze{constructor(){super(...arguments);d(this,\"items\",[])}addItem(r){return this.items.push(new yn(r)),this}getField(r){return this.items[r]}getPrintWidth(){return this.items.length===0?2:Math.max(...this.items.map(n=>n.value.getPrintWidth()))+2}write(r){if(this.items.length===0){this.writeEmpty(r);return}this.writeWithItems(r)}writeEmpty(r){let n=new Re(\"[]\");this.hasError&&n.setColor(r.context.colors.red).underline(),r.write(n)}writeWithItems(r){let{colors:n}=r.context;r.writeLine(\"[\").withIndent(()=>r.writeJoined(St,this.items).newLine()).write(\"]\"),this.hasError&&r.afterNextNewline(()=>{r.writeLine(n.red(\"~\".repeat(this.getPrintWidth())))})}asObject(){}};var It=class e extends Ze{constructor(){super(...arguments);d(this,\"fields\",{});d(this,\"suggestions\",[])}addField(r){this.fields[r.name]=r}addSuggestion(r){this.suggestions.push(r)}getField(r){return this.fields[r]}getDeepField(r){let[n,...i]=r,o=this.getField(n);if(!o)return;let s=o;for(let a of i){let l;if(s.value instanceof e?l=s.value.getField(a):s.value instanceof At&&(l=s.value.getField(Number(a))),!l)return;s=l}return s}getDeepFieldValue(r){return r.length===0?this:this.getDeepField(r)?.value}hasField(r){return!!this.getField(r)}removeAllFields(){this.fields={}}removeField(r){delete this.fields[r]}getFields(){return this.fields}isEmpty(){return Object.keys(this.fields).length===0}getFieldValue(r){return this.getField(r)?.value}getDeepSubSelectionValue(r){let n=this;for(let i of r){if(!(n instanceof e))return;let o=n.getSubSelectionValue(i);if(!o)return;n=o}return n}getDeepSelectionParent(r){let n=this.getSelectionParent();if(!n)return;let i=n;for(let o of r){let s=i.value.getFieldValue(o);if(!s||!(s instanceof e))return;let a=s.getSelectionParent();if(!a)return;i=a}return i}getSelectionParent(){let r=this.getField(\"select\")?.value.asObject();if(r)return{kind:\"select\",value:r};let n=this.getField(\"include\")?.value.asObject();if(n)return{kind:\"include\",value:n}}getSubSelectionValue(r){return this.getSelectionParent()?.value.fields[r].value}getPrintWidth(){let r=Object.values(this.fields);return r.length==0?2:Math.max(...r.map(i=>i.getPrintWidth()))+2}write(r){let n=Object.values(this.fields);if(n.length===0&&this.suggestions.length===0){this.writeEmpty(r);return}this.writeWithContents(r,n)}asObject(){return this}writeEmpty(r){let n=new Re(\"{}\");this.hasError&&n.setColor(r.context.colors.red).underline(),r.write(n)}writeWithContents(r,n){r.writeLine(\"{\").withIndent(()=>{r.writeJoined(St,[...n,...this.suggestions]).newLine()}),r.write(\"}\"),this.hasError&&r.afterNextNewline(()=>{r.writeLine(r.context.colors.red(\"~\".repeat(this.getPrintWidth())))})}};var H=class extends Ze{constructor(r){super();this.text=r}getPrintWidth(){return this.text.length}write(r){let n=new Re(this.text);this.hasError&&n.underline().setColor(r.context.colors.red),r.write(n)}asObject(){}};var ar=class{constructor(){d(this,\"fields\",[])}addField(t,r){return this.fields.push({write(n){let{green:i,dim:o}=n.context.colors;n.write(i(o(`${t}: ${r}`))).addMarginSymbol(i(o(\"+\")))}}),this}write(t){let{colors:{green:r}}=t.context;t.writeLine(r(\"{\")).withIndent(()=>{t.writeJoined(St,this.fields).newLine()}).write(r(\"}\")).addMarginSymbol(r(\"+\"))}};function hn(e,t,r){switch(e.kind){case\"MutuallyExclusiveFields\":ed(e,t);break;case\"IncludeOnScalar\":td(e,t);break;case\"EmptySelection\":rd(e,t,r);break;case\"UnknownSelectionField\":sd(e,t);break;case\"InvalidSelectionValue\":ad(e,t);break;case\"UnknownArgument\":ld(e,t);break;case\"UnknownInputField\":ud(e,t);break;case\"RequiredArgumentMissing\":cd(e,t);break;case\"InvalidArgumentType\":pd(e,t);break;case\"InvalidArgumentValue\":dd(e,t);break;case\"ValueTooLarge\":md(e,t);break;case\"SomeFieldsMissing\":fd(e,t);break;case\"TooManyFieldsGiven\":gd(e,t);break;case\"Union\":na(e,t,r);break;default:throw new Error(\"not implemented: \"+e.kind)}}function ed(e,t){let r=t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();r&&(r.getField(e.firstField)?.markAsError(),r.getField(e.secondField)?.markAsError()),t.addErrorMessage(n=>`Please ${n.bold(\"either\")} use ${n.green(`\\`${e.firstField}\\``)} or ${n.green(`\\`${e.secondField}\\``)}, but ${n.red(\"not both\")} at the same time.`)}function td(e,t){let[r,n]=lr(e.selectionPath),i=e.outputType,o=t.arguments.getDeepSelectionParent(r)?.value;if(o&&(o.getField(n)?.markAsError(),i))for(let s of i.fields)s.isRelation&&o.addSuggestion(new de(s.name,\"true\"));t.addErrorMessage(s=>{let a=`Invalid scalar field ${s.red(`\\`${n}\\``)} for ${s.bold(\"include\")} statement`;return i?a+=` on model ${s.bold(i.name)}. ${ur(s)}`:a+=\".\",a+=`\nNote that ${s.bold(\"include\")} statements only accept relation fields.`,a})}function rd(e,t,r){let n=t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();if(n){let i=n.getField(\"omit\")?.value.asObject();if(i){nd(e,t,i);return}if(n.hasField(\"select\")){id(e,t);return}}if(r?.[vt(e.outputType.name)]){od(e,t);return}t.addErrorMessage(()=>`Unknown field at \"${e.selectionPath.join(\".\")} selection\"`)}function nd(e,t,r){r.removeAllFields();for(let n of e.outputType.fields)r.addSuggestion(new de(n.name,\"false\"));t.addErrorMessage(n=>`The ${n.red(\"omit\")} statement includes every field of the model ${n.bold(e.outputType.name)}. At least one field must be included in the result`)}function id(e,t){let r=e.outputType,n=t.arguments.getDeepSelectionParent(e.selectionPath)?.value,i=n?.isEmpty()??!1;n&&(n.removeAllFields(),ua(n,r)),t.addErrorMessage(o=>i?`The ${o.red(\"`select`\")} statement for type ${o.bold(r.name)} must not be empty. ${ur(o)}`:`The ${o.red(\"`select`\")} statement for type ${o.bold(r.name)} needs ${o.bold(\"at least one truthy value\")}.`)}function od(e,t){let r=new ar;for(let i of e.outputType.fields)i.isRelation||r.addField(i.name,\"false\");let n=new de(\"omit\",r).makeRequired();if(e.selectionPath.length===0)t.arguments.addSuggestion(n);else{let[i,o]=lr(e.selectionPath),a=t.arguments.getDeepSelectionParent(i)?.value.asObject()?.getField(o);if(a){let l=a?.value.asObject()??new It;l.addSuggestion(n),a.value=l}}t.addErrorMessage(i=>`The global ${i.red(\"omit\")} configuration excludes every field of the model ${i.bold(e.outputType.name)}. At least one field must be included in the result`)}function sd(e,t){let r=ca(e.selectionPath,t);if(r.parentKind!==\"unknown\"){r.field.markAsError();let n=r.parent;switch(r.parentKind){case\"select\":ua(n,e.outputType);break;case\"include\":hd(n,e.outputType);break;case\"omit\":yd(n,e.outputType);break}}t.addErrorMessage(n=>{let i=[`Unknown field ${n.red(`\\`${r.fieldName}\\``)}`];return r.parentKind!==\"unknown\"&&i.push(`for ${n.bold(r.parentKind)} statement`),i.push(`on model ${n.bold(`\\`${e.outputType.name}\\``)}.`),i.push(ur(n)),i.join(\" \")})}function ad(e,t){let r=ca(e.selectionPath,t);r.parentKind!==\"unknown\"&&r.field.value.markAsError(),t.addErrorMessage(n=>`Invalid value for selection field \\`${n.red(r.fieldName)}\\`: ${e.underlyingError}`)}function ld(e,t){let r=e.argumentPath[0],n=t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();n&&(n.getField(r)?.markAsError(),Ed(n,e.arguments)),t.addErrorMessage(i=>aa(i,r,e.arguments.map(o=>o.name)))}function ud(e,t){let[r,n]=lr(e.argumentPath),i=t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();if(i){i.getDeepField(e.argumentPath)?.markAsError();let o=i.getDeepFieldValue(r)?.asObject();o&&pa(o,e.inputType)}t.addErrorMessage(o=>aa(o,n,e.inputType.fields.map(s=>s.name)))}function aa(e,t,r){let n=[`Unknown argument \\`${e.red(t)}\\`.`],i=wd(t,r);return i&&n.push(`Did you mean \\`${e.green(i)}\\`?`),r.length>0&&n.push(ur(e)),n.join(\" \")}function cd(e,t){let r;t.addErrorMessage(l=>r?.value instanceof H&&r.value.text===\"null\"?`Argument \\`${l.green(o)}\\` must not be ${l.red(\"null\")}.`:`Argument \\`${l.green(o)}\\` is missing.`);let n=t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();if(!n)return;let[i,o]=lr(e.argumentPath),s=new ar,a=n.getDeepFieldValue(i)?.asObject();if(a)if(r=a.getField(o),r&&a.removeField(o),e.inputTypes.length===1&&e.inputTypes[0].kind===\"object\"){for(let l of e.inputTypes[0].fields)s.addField(l.name,l.typeNames.join(\" | \"));a.addSuggestion(new de(o,s).makeRequired())}else{let l=e.inputTypes.map(la).join(\" | \");a.addSuggestion(new de(o,l).makeRequired())}}function la(e){return e.kind===\"list\"?`${la(e.elementType)}[]`:e.name}function pd(e,t){let r=e.argument.name,n=t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();n&&n.getDeepFieldValue(e.argumentPath)?.markAsError(),t.addErrorMessage(i=>{let o=wn(\"or\",e.argument.typeNames.map(s=>i.green(s)));return`Argument \\`${i.bold(r)}\\`: Invalid value provided. Expected ${o}, provided ${i.red(e.inferredType)}.`})}function dd(e,t){let r=e.argument.name,n=t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();n&&n.getDeepFieldValue(e.argumentPath)?.markAsError(),t.addErrorMessage(i=>{let o=[`Invalid value for argument \\`${i.bold(r)}\\``];if(e.underlyingError&&o.push(`: ${e.underlyingError}`),o.push(\".\"),e.argument.typeNames.length>0){let s=wn(\"or\",e.argument.typeNames.map(a=>i.green(a)));o.push(` Expected ${s}.`)}return o.join(\"\")})}function md(e,t){let r=e.argument.name,n=t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject(),i;if(n){let s=n.getDeepField(e.argumentPath)?.value;s?.markAsError(),s instanceof H&&(i=s.text)}t.addErrorMessage(o=>{let s=[\"Unable to fit value\"];return i&&s.push(o.red(i)),s.push(`into a 64-bit signed integer for field \\`${o.bold(r)}\\``),s.join(\" \")})}function fd(e,t){let r=e.argumentPath[e.argumentPath.length-1],n=t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject();if(n){let i=n.getDeepFieldValue(e.argumentPath)?.asObject();i&&pa(i,e.inputType)}t.addErrorMessage(i=>{let o=[`Argument \\`${i.bold(r)}\\` of type ${i.bold(e.inputType.name)} needs`];return e.constraints.minFieldCount===1?e.constraints.requiredFields?o.push(`${i.green(\"at least one of\")} ${wn(\"or\",e.constraints.requiredFields.map(s=>`\\`${i.bold(s)}\\``))} arguments.`):o.push(`${i.green(\"at least one\")} argument.`):o.push(`${i.green(`at least ${e.constraints.minFieldCount}`)} arguments.`),o.push(ur(i)),o.join(\" \")})}function gd(e,t){let r=e.argumentPath[e.argumentPath.length-1],n=t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject(),i=[];if(n){let o=n.getDeepFieldValue(e.argumentPath)?.asObject();o&&(o.markAsError(),i=Object.keys(o.getFields()))}t.addErrorMessage(o=>{let s=[`Argument \\`${o.bold(r)}\\` of type ${o.bold(e.inputType.name)} needs`];return e.constraints.minFieldCount===1&&e.constraints.maxFieldCount==1?s.push(`${o.green(\"exactly one\")} argument,`):e.constraints.maxFieldCount==1?s.push(`${o.green(\"at most one\")} argument,`):s.push(`${o.green(`at most ${e.constraints.maxFieldCount}`)} arguments,`),s.push(`but you provided ${wn(\"and\",i.map(a=>o.red(a)))}. Please choose`),e.constraints.maxFieldCount===1?s.push(\"one.\"):s.push(`${e.constraints.maxFieldCount}.`),s.join(\" \")})}function ua(e,t){for(let r of t.fields)e.hasField(r.name)||e.addSuggestion(new de(r.name,\"true\"))}function hd(e,t){for(let r of t.fields)r.isRelation&&!e.hasField(r.name)&&e.addSuggestion(new de(r.name,\"true\"))}function yd(e,t){for(let r of t.fields)!e.hasField(r.name)&&!r.isRelation&&e.addSuggestion(new de(r.name,\"true\"))}function Ed(e,t){for(let r of t)e.hasField(r.name)||e.addSuggestion(new de(r.name,r.typeNames.join(\" | \")))}function ca(e,t){let[r,n]=lr(e),i=t.arguments.getDeepSubSelectionValue(r)?.asObject();if(!i)return{parentKind:\"unknown\",fieldName:n};let o=i.getFieldValue(\"select\")?.asObject(),s=i.getFieldValue(\"include\")?.asObject(),a=i.getFieldValue(\"omit\")?.asObject(),l=o?.getField(n);return o&&l?{parentKind:\"select\",parent:o,field:l,fieldName:n}:(l=s?.getField(n),s&&l?{parentKind:\"include\",field:l,parent:s,fieldName:n}:(l=a?.getField(n),a&&l?{parentKind:\"omit\",field:l,parent:a,fieldName:n}:{parentKind:\"unknown\",fieldName:n}))}function pa(e,t){if(t.kind===\"object\")for(let r of t.fields)e.hasField(r.name)||e.addSuggestion(new de(r.name,r.typeNames.join(\" | \")))}function lr(e){let t=[...e],r=t.pop();if(!r)throw new Error(\"unexpected empty path\");return[t,r]}function ur({green:e,enabled:t}){return\"Available options are \"+(t?`listed in ${e(\"green\")}`:\"marked with ?\")+\".\"}function wn(e,t){if(t.length===1)return t[0];let r=[...t],n=r.pop();return`${r.join(\", \")} ${e} ${n}`}var bd=3;function wd(e,t){let r=1/0,n;for(let i of t){let o=(0,sa.default)(e,i);o>bd||o<r&&(r=o,n=i)}return n}function da(e){return e.substring(0,1).toLowerCase()+e.substring(1)}var cr=class{constructor(t,r,n,i,o){d(this,\"modelName\");d(this,\"name\");d(this,\"typeName\");d(this,\"isList\");d(this,\"isEnum\");this.modelName=t,this.name=r,this.typeName=n,this.isList=i,this.isEnum=o}_toGraphQLInputType(){let t=this.isList?\"List\":\"\",r=this.isEnum?\"Enum\":\"\";return`${t}${r}${this.typeName}FieldRefInput<${this.modelName}>`}};function kt(e){return e instanceof cr}var xn=Symbol(),Gi=new WeakMap,qe=class{constructor(t){t===xn?Gi.set(this,`Prisma.${this._getName()}`):Gi.set(this,`new Prisma.${this._getNamespace()}.${this._getName()}()`)}_getName(){return this.constructor.name}toString(){return Gi.get(this)}},pr=class extends qe{_getNamespace(){return\"NullTypes\"}},dr=class extends pr{};Ji(dr,\"DbNull\");var mr=class extends pr{};Ji(mr,\"JsonNull\");var fr=class extends pr{};Ji(fr,\"AnyNull\");var Pn={classes:{DbNull:dr,JsonNull:mr,AnyNull:fr},instances:{DbNull:new dr(xn),JsonNull:new mr(xn),AnyNull:new fr(xn)}};function Ji(e,t){Object.defineProperty(e,\"name\",{value:t,configurable:!0})}var ma=\": \",vn=class{constructor(t,r){this.name=t;this.value=r;d(this,\"hasError\",!1)}markAsError(){this.hasError=!0}getPrintWidth(){return this.name.length+this.value.getPrintWidth()+ma.length}write(t){let r=new Re(this.name);this.hasError&&r.underline().setColor(t.context.colors.red),t.write(r).write(ma).write(this.value)}};var Wi=class{constructor(t){d(this,\"arguments\");d(this,\"errorMessages\",[]);this.arguments=t}write(t){t.write(this.arguments)}addErrorMessage(t){this.errorMessages.push(t)}renderAllMessages(t){return this.errorMessages.map(r=>r(t)).join(`\n`)}};function Ot(e){return new Wi(fa(e))}function fa(e){let t=new It;for(let[r,n]of Object.entries(e)){let i=new vn(r,ga(n));t.addField(i)}return t}function ga(e){if(typeof e==\"string\")return new H(JSON.stringify(e));if(typeof e==\"number\"||typeof e==\"boolean\")return new H(String(e));if(typeof e==\"bigint\")return new H(`${e}n`);if(e===null)return new H(\"null\");if(e===void 0)return new H(\"undefined\");if(Ct(e))return new H(`new Prisma.Decimal(\"${e.toFixed()}\")`);if(e instanceof Uint8Array)return Buffer.isBuffer(e)?new H(`Buffer.alloc(${e.byteLength})`):new H(`new Uint8Array(${e.byteLength})`);if(e instanceof Date){let t=dn(e)?e.toISOString():\"Invalid Date\";return new H(`new Date(\"${t}\")`)}return e instanceof qe?new H(`Prisma.${e._getName()}`):kt(e)?new H(`prisma.${da(e.modelName)}.$fields.${e.name}`):Array.isArray(e)?xd(e):typeof e==\"object\"?fa(e):new H(Object.prototype.toString.call(e))}function xd(e){let t=new At;for(let r of e)t.addItem(ga(r));return t}function Tn(e,t){let r=t===\"pretty\"?oa:bn,n=e.renderAllMessages(r),i=new Rt(0,{colors:r}).write(e).toString();return{message:n,args:i}}function Cn({args:e,errors:t,errorFormat:r,callsite:n,originalMethod:i,clientVersion:o,globalOmit:s}){let a=Ot(e);for(let p of t)hn(p,a,s);let{message:l,args:u}=Tn(a,r),c=gn({message:l,callsite:n,originalMethod:i,showColors:r===\"pretty\",callArguments:u});throw new re(c,{clientVersion:o})}var Se=class{constructor(){d(this,\"_map\",new Map)}get(t){return this._map.get(t)?.value}set(t,r){this._map.set(t,{value:r})}getOrCreate(t,r){let n=this._map.get(t);if(n)return n.value;let i=r();return this.set(t,i),i}};function gr(e){let t;return{get(){return t||(t={value:e()}),t.value}}}function Ae(e){return e.replace(/^./,t=>t.toLowerCase())}function ya(e,t,r){let n=Ae(r);return!t.result||!(t.result.$allModels||t.result[n])?e:Pd({...e,...ha(t.name,e,t.result.$allModels),...ha(t.name,e,t.result[n])})}function Pd(e){let t=new Se,r=(n,i)=>t.getOrCreate(n,()=>i.has(n)?[n]:(i.add(n),e[n]?e[n].needs.flatMap(o=>r(o,i)):[n]));return bt(e,n=>({...n,needs:r(n.name,new Set)}))}function ha(e,t,r){return r?bt(r,({needs:n,compute:i},o)=>({name:o,needs:n?Object.keys(n).filter(s=>n[s]):[],compute:vd(t,o,i)})):{}}function vd(e,t,r){let n=e?.[t]?.compute;return n?i=>r({...i,[t]:n(i)}):r}function Ea(e,t){if(!t)return e;let r={...e};for(let n of Object.values(t))if(e[n.name])for(let i of n.needs)r[i]=!0;return r}function ba(e,t){if(!t)return e;let r={...e};for(let n of Object.values(t))if(!e[n.name])for(let i of n.needs)delete r[i];return r}var Rn=class{constructor(t,r){this.extension=t;this.previous=r;d(this,\"computedFieldsCache\",new Se);d(this,\"modelExtensionsCache\",new Se);d(this,\"queryCallbacksCache\",new Se);d(this,\"clientExtensions\",gr(()=>this.extension.client?{...this.previous?.getAllClientExtensions(),...this.extension.client}:this.previous?.getAllClientExtensions()));d(this,\"batchCallbacks\",gr(()=>{let t=this.previous?.getAllBatchQueryCallbacks()??[],r=this.extension.query?.$__internalBatch;return r?t.concat(r):t}))}getAllComputedFields(t){return this.computedFieldsCache.getOrCreate(t,()=>ya(this.previous?.getAllComputedFields(t),this.extension,t))}getAllClientExtensions(){return this.clientExtensions.get()}getAllModelExtensions(t){return this.modelExtensionsCache.getOrCreate(t,()=>{let r=Ae(t);return!this.extension.model||!(this.extension.model[r]||this.extension.model.$allModels)?this.previous?.getAllModelExtensions(t):{...this.previous?.getAllModelExtensions(t),...this.extension.model.$allModels,...this.extension.model[r]}})}getAllQueryCallbacks(t,r){return this.queryCallbacksCache.getOrCreate(`${t}:${r}`,()=>{let n=this.previous?.getAllQueryCallbacks(t,r)??[],i=[],o=this.extension.query;return!o||!(o[t]||o.$allModels||o[r]||o.$allOperations)?n:(o[t]!==void 0&&(o[t][r]!==void 0&&i.push(o[t][r]),o[t].$allOperations!==void 0&&i.push(o[t].$allOperations)),t!==\"$none\"&&o.$allModels!==void 0&&(o.$allModels[r]!==void 0&&i.push(o.$allModels[r]),o.$allModels.$allOperations!==void 0&&i.push(o.$allModels.$allOperations)),o[r]!==void 0&&i.push(o[r]),o.$allOperations!==void 0&&i.push(o.$allOperations),n.concat(i))})}getAllBatchQueryCallbacks(){return this.batchCallbacks.get()}},_t=class e{constructor(t){this.head=t}static empty(){return new e}static single(t){return new e(new Rn(t))}isEmpty(){return this.head===void 0}append(t){return new e(new Rn(t,this.head))}getAllComputedFields(t){return this.head?.getAllComputedFields(t)}getAllClientExtensions(){return this.head?.getAllClientExtensions()}getAllModelExtensions(t){return this.head?.getAllModelExtensions(t)}getAllQueryCallbacks(t,r){return this.head?.getAllQueryCallbacks(t,r)??[]}getAllBatchQueryCallbacks(){return this.head?.getAllBatchQueryCallbacks()??[]}};var Sn=class{constructor(t){this.name=t}};function wa(e){return e instanceof Sn}function xa(e){return new Sn(e)}var Pa=Symbol(),hr=class{constructor(t){if(t!==Pa)throw new Error(\"Skip instance can not be constructed directly\")}ifUndefined(t){return t===void 0?An:t}},An=new hr(Pa);function Ie(e){return e instanceof hr}var Td={findUnique:\"findUnique\",findUniqueOrThrow:\"findUniqueOrThrow\",findFirst:\"findFirst\",findFirstOrThrow:\"findFirstOrThrow\",findMany:\"findMany\",count:\"aggregate\",create:\"createOne\",createMany:\"createMany\",createManyAndReturn:\"createManyAndReturn\",update:\"updateOne\",updateMany:\"updateMany\",updateManyAndReturn:\"updateManyAndReturn\",upsert:\"upsertOne\",delete:\"deleteOne\",deleteMany:\"deleteMany\",executeRaw:\"executeRaw\",queryRaw:\"queryRaw\",aggregate:\"aggregate\",groupBy:\"groupBy\",runCommandRaw:\"runCommandRaw\",findRaw:\"findRaw\",aggregateRaw:\"aggregateRaw\"},va=\"explicitly `undefined` values are not allowed\";function In({modelName:e,action:t,args:r,runtimeDataModel:n,extensions:i=_t.empty(),callsite:o,clientMethod:s,errorFormat:a,clientVersion:l,previewFeatures:u,globalOmit:c}){let p=new Hi({runtimeDataModel:n,modelName:e,action:t,rootArgs:r,callsite:o,extensions:i,selectionPath:[],argumentPath:[],originalMethod:s,errorFormat:a,clientVersion:l,previewFeatures:u,globalOmit:c});return{modelName:e,action:Td[t],query:yr(r,p)}}function yr({select:e,include:t,...r}={},n){let i=r.omit;return delete r.omit,{arguments:Ca(r,n),selection:Cd(e,t,i,n)}}function Cd(e,t,r,n){return e?(t?n.throwValidationError({kind:\"MutuallyExclusiveFields\",firstField:\"include\",secondField:\"select\",selectionPath:n.getSelectionPath()}):r&&n.throwValidationError({kind:\"MutuallyExclusiveFields\",firstField:\"omit\",secondField:\"select\",selectionPath:n.getSelectionPath()}),Id(e,n)):Rd(n,t,r)}function Rd(e,t,r){let n={};return e.modelOrType&&!e.isRawAction()&&(n.$composites=!0,n.$scalars=!0),t&&Sd(n,t,e),Ad(n,r,e),n}function Sd(e,t,r){for(let[n,i]of Object.entries(t)){if(Ie(i))continue;let o=r.nestSelection(n);if(Ki(i,o),i===!1||i===void 0){e[n]=!1;continue}let s=r.findField(n);if(s&&s.kind!==\"object\"&&r.throwValidationError({kind:\"IncludeOnScalar\",selectionPath:r.getSelectionPath().concat(n),outputType:r.getOutputTypeDescription()}),s){e[n]=yr(i===!0?{}:i,o);continue}if(i===!0){e[n]=!0;continue}e[n]=yr(i,o)}}function Ad(e,t,r){let n=r.getComputedFields(),i={...r.getGlobalOmit(),...t},o=ba(i,n);for(let[s,a]of Object.entries(o)){if(Ie(a))continue;Ki(a,r.nestSelection(s));let l=r.findField(s);n?.[s]&&!l||(e[s]=!a)}}function Id(e,t){let r={},n=t.getComputedFields(),i=Ea(e,n);for(let[o,s]of Object.entries(i)){if(Ie(s))continue;let a=t.nestSelection(o);Ki(s,a);let l=t.findField(o);if(!(n?.[o]&&!l)){if(s===!1||s===void 0||Ie(s)){r[o]=!1;continue}if(s===!0){l?.kind===\"object\"?r[o]=yr({},a):r[o]=!0;continue}r[o]=yr(s,a)}}return r}function Ta(e,t){if(e===null)return null;if(typeof e==\"string\"||typeof e==\"number\"||typeof e==\"boolean\")return e;if(typeof e==\"bigint\")return{$type:\"BigInt\",value:String(e)};if(Tt(e)){if(dn(e))return{$type:\"DateTime\",value:e.toISOString()};t.throwValidationError({kind:\"InvalidArgumentValue\",selectionPath:t.getSelectionPath(),argumentPath:t.getArgumentPath(),argument:{name:t.getArgumentName(),typeNames:[\"Date\"]},underlyingError:\"Provided Date object is invalid\"})}if(wa(e))return{$type:\"Param\",value:e.name};if(kt(e))return{$type:\"FieldRef\",value:{_ref:e.name,_container:e.modelName}};if(Array.isArray(e))return kd(e,t);if(ArrayBuffer.isView(e)){let{buffer:r,byteOffset:n,byteLength:i}=e;return{$type:\"Bytes\",value:Buffer.from(r,n,i).toString(\"base64\")}}if(Od(e))return e.values;if(Ct(e))return{$type:\"Decimal\",value:e.toFixed()};if(e instanceof qe){if(e!==Pn.instances[e._getName()])throw new Error(\"Invalid ObjectEnumValue\");return{$type:\"Enum\",value:e._getName()}}if(_d(e))return e.toJSON();if(typeof e==\"object\")return Ca(e,t);t.throwValidationError({kind:\"InvalidArgumentValue\",selectionPath:t.getSelectionPath(),argumentPath:t.getArgumentPath(),argument:{name:t.getArgumentName(),typeNames:[]},underlyingError:`We could not serialize ${Object.prototype.toString.call(e)} value. Serialize the object to JSON or implement a \".toJSON()\" method on it`})}function Ca(e,t){if(e.$type)return{$type:\"Raw\",value:e};let r={};for(let n in e){let i=e[n],o=t.nestArgument(n);Ie(i)||(i!==void 0?r[n]=Ta(i,o):t.isPreviewFeatureOn(\"strictUndefinedChecks\")&&t.throwValidationError({kind:\"InvalidArgumentValue\",argumentPath:o.getArgumentPath(),selectionPath:t.getSelectionPath(),argument:{name:t.getArgumentName(),typeNames:[]},underlyingError:va}))}return r}function kd(e,t){let r=[];for(let n=0;n<e.length;n++){let i=t.nestArgument(String(n)),o=e[n];if(o===void 0||Ie(o)){let s=o===void 0?\"undefined\":\"Prisma.skip\";t.throwValidationError({kind:\"InvalidArgumentValue\",selectionPath:i.getSelectionPath(),argumentPath:i.getArgumentPath(),argument:{name:`${t.getArgumentName()}[${n}]`,typeNames:[]},underlyingError:`Can not use \\`${s}\\` value within array. Use \\`null\\` or filter out \\`${s}\\` values`})}r.push(Ta(o,i))}return r}function Od(e){return typeof e==\"object\"&&e!==null&&e.__prismaRawParameters__===!0}function _d(e){return typeof e==\"object\"&&e!==null&&typeof e.toJSON==\"function\"}function Ki(e,t){e===void 0&&t.isPreviewFeatureOn(\"strictUndefinedChecks\")&&t.throwValidationError({kind:\"InvalidSelectionValue\",selectionPath:t.getSelectionPath(),underlyingError:va})}var Hi=class e{constructor(t){this.params=t;d(this,\"modelOrType\");this.params.modelName&&(this.modelOrType=this.params.runtimeDataModel.models[this.params.modelName]??this.params.runtimeDataModel.types[this.params.modelName])}throwValidationError(t){Cn({errors:[t],originalMethod:this.params.originalMethod,args:this.params.rootArgs??{},callsite:this.params.callsite,errorFormat:this.params.errorFormat,clientVersion:this.params.clientVersion,globalOmit:this.params.globalOmit})}getSelectionPath(){return this.params.selectionPath}getArgumentPath(){return this.params.argumentPath}getArgumentName(){return this.params.argumentPath[this.params.argumentPath.length-1]}getOutputTypeDescription(){if(!(!this.params.modelName||!this.modelOrType))return{name:this.params.modelName,fields:this.modelOrType.fields.map(t=>({name:t.name,typeName:\"boolean\",isRelation:t.kind===\"object\"}))}}isRawAction(){return[\"executeRaw\",\"queryRaw\",\"runCommandRaw\",\"findRaw\",\"aggregateRaw\"].includes(this.params.action)}isPreviewFeatureOn(t){return this.params.previewFeatures.includes(t)}getComputedFields(){if(this.params.modelName)return this.params.extensions.getAllComputedFields(this.params.modelName)}findField(t){return this.modelOrType?.fields.find(r=>r.name===t)}nestSelection(t){let r=this.findField(t),n=r?.kind===\"object\"?r.type:void 0;return new e({...this.params,modelName:n,selectionPath:this.params.selectionPath.concat(t)})}getGlobalOmit(){return this.params.modelName&&this.shouldApplyGlobalOmit()?this.params.globalOmit?.[vt(this.params.modelName)]??{}:{}}shouldApplyGlobalOmit(){switch(this.params.action){case\"findFirst\":case\"findFirstOrThrow\":case\"findUniqueOrThrow\":case\"findMany\":case\"upsert\":case\"findUnique\":case\"createManyAndReturn\":case\"create\":case\"update\":case\"updateManyAndReturn\":case\"delete\":return!0;case\"executeRaw\":case\"aggregateRaw\":case\"runCommandRaw\":case\"findRaw\":case\"createMany\":case\"deleteMany\":case\"groupBy\":case\"updateMany\":case\"count\":case\"aggregate\":case\"queryRaw\":return!1;default:Me(this.params.action,\"Unknown action\")}}nestArgument(t){return new e({...this.params,argumentPath:this.params.argumentPath.concat(t)})}};function Ra(e){if(!e._hasPreviewFlag(\"metrics\"))throw new re(\"`metrics` preview feature must be enabled in order to access metrics API\",{clientVersion:e._clientVersion})}var Dt=class{constructor(t){d(this,\"_client\");this._client=t}prometheus(t){return Ra(this._client),this._client._engine.metrics({format:\"prometheus\",...t})}json(t){return Ra(this._client),this._client._engine.metrics({format:\"json\",...t})}};function Sa(e){return{models:Yi(e.models),enums:Yi(e.enums),types:Yi(e.types)}}function Yi(e){let t={};for(let{name:r,...n}of e)t[r]=n;return t}function Aa(e,t){let r=gr(()=>Dd(t));Object.defineProperty(e,\"dmmf\",{get:()=>r.get()})}function Dd(e){return{datamodel:{models:zi(e.models),enums:zi(e.enums),types:zi(e.types)}}}function zi(e){return Object.entries(e).map(([t,r])=>({name:t,...r}))}var Zi=new WeakMap,kn=\"$$PrismaTypedSql\",Er=class{constructor(t,r){Zi.set(this,{sql:t,values:r}),Object.defineProperty(this,kn,{value:kn})}get sql(){return Zi.get(this).sql}get values(){return Zi.get(this).values}};function Ia(e){return(...t)=>new Er(e,t)}function On(e){return e!=null&&e[kn]===kn}var su=D(bi());var au=require(\"async_hooks\"),lu=require(\"events\"),uu=D(require(\"fs\")),Mr=D(require(\"path\"));var le=class e{constructor(t,r){if(t.length-1!==r.length)throw t.length===0?new TypeError(\"Expected at least 1 string\"):new TypeError(`Expected ${t.length} strings to have ${t.length-1} values`);let n=r.reduce((s,a)=>s+(a instanceof e?a.values.length:1),0);this.values=new Array(n),this.strings=new Array(n+1),this.strings[0]=t[0];let i=0,o=0;for(;i<r.length;){let s=r[i++],a=t[i];if(s instanceof e){this.strings[o]+=s.strings[0];let l=0;for(;l<s.values.length;)this.values[o++]=s.values[l++],this.strings[o]=s.strings[l];this.strings[o]+=a}else this.values[o++]=s,this.strings[o]=a}}get sql(){let t=this.strings.length,r=1,n=this.strings[0];for(;r<t;)n+=`?${this.strings[r++]}`;return n}get statement(){let t=this.strings.length,r=1,n=this.strings[0];for(;r<t;)n+=`:${r}${this.strings[r++]}`;return n}get text(){let t=this.strings.length,r=1,n=this.strings[0];for(;r<t;)n+=`$${r}${this.strings[r++]}`;return n}inspect(){return{sql:this.sql,statement:this.statement,text:this.text,values:this.values}}};function ka(e,t=\",\",r=\"\",n=\"\"){if(e.length===0)throw new TypeError(\"Expected `join([])` to be called with an array of multiple elements, but got an empty array\");return new le([r,...Array(e.length-1).fill(t),n],e)}function Xi(e){return new le([e],[])}var Oa=Xi(\"\");function eo(e,...t){return new le(e,t)}function br(e){return{getKeys(){return Object.keys(e)},getPropertyValue(t){return e[t]}}}function oe(e,t){return{getKeys(){return[e]},getPropertyValue(){return t()}}}function at(e){let t=new Se;return{getKeys(){return e.getKeys()},getPropertyValue(r){return t.getOrCreate(r,()=>e.getPropertyValue(r))},getPropertyDescriptor(r){return e.getPropertyDescriptor?.(r)}}}var _n={enumerable:!0,configurable:!0,writable:!0};function Dn(e){let t=new Set(e);return{getPrototypeOf:()=>Object.prototype,getOwnPropertyDescriptor:()=>_n,has:(r,n)=>t.has(n),set:(r,n,i)=>t.add(n)&&Reflect.set(r,n,i),ownKeys:()=>[...t]}}var _a=Symbol.for(\"nodejs.util.inspect.custom\");function be(e,t){let r=Nd(t),n=new Set,i=new Proxy(e,{get(o,s){if(n.has(s))return o[s];let a=r.get(s);return a?a.getPropertyValue(s):o[s]},has(o,s){if(n.has(s))return!0;let a=r.get(s);return a?a.has?.(s)??!0:Reflect.has(o,s)},ownKeys(o){let s=Da(Reflect.ownKeys(o),r),a=Da(Array.from(r.keys()),r);return[...new Set([...s,...a,...n])]},set(o,s,a){return r.get(s)?.getPropertyDescriptor?.(s)?.writable===!1?!1:(n.add(s),Reflect.set(o,s,a))},getOwnPropertyDescriptor(o,s){let a=Reflect.getOwnPropertyDescriptor(o,s);if(a&&!a.configurable)return a;let l=r.get(s);return l?l.getPropertyDescriptor?{..._n,...l?.getPropertyDescriptor(s)}:_n:a},defineProperty(o,s,a){return n.add(s),Reflect.defineProperty(o,s,a)},getPrototypeOf:()=>Object.prototype});return i[_a]=function(){let o={...this};return delete o[_a],o},i}function Nd(e){let t=new Map;for(let r of e){let n=r.getKeys();for(let i of n)t.set(i,r)}return t}function Da(e,t){return e.filter(r=>t.get(r)?.has?.(r)??!0)}function Nt(e){return{getKeys(){return e},has(){return!1},getPropertyValue(){}}}function Lt(e,t){return{batch:e,transaction:t?.kind===\"batch\"?{isolationLevel:t.options.isolationLevel}:void 0}}function Na(e){if(e===void 0)return\"\";let t=Ot(e);return new Rt(0,{colors:bn}).write(t).toString()}var Ld=\"P2037\";function Ft({error:e,user_facing_error:t},r,n){return t.error_code?new te(Fd(t,n),{code:t.error_code,clientVersion:r,meta:t.meta,batchRequestIdx:t.batch_request_idx}):new U(e,{clientVersion:r,batchRequestIdx:t.batch_request_idx})}function Fd(e,t){let r=e.message;return(t===\"postgresql\"||t===\"postgres\"||t===\"mysql\")&&e.error_code===Ld&&(r+=`\nPrisma Accelerate has built-in connection pooling to prevent such errors: https://pris.ly/client/error-accelerate`),r}var wr=\"<unknown>\";function La(e){var t=e.split(`\n`);return t.reduce(function(r,n){var i=qd(n)||jd(n)||Qd(n)||Hd(n)||Jd(n);return i&&r.push(i),r},[])}var Md=/^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|rsc|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,$d=/\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;function qd(e){var t=Md.exec(e);if(!t)return null;var r=t[2]&&t[2].indexOf(\"native\")===0,n=t[2]&&t[2].indexOf(\"eval\")===0,i=$d.exec(t[2]);return n&&i!=null&&(t[2]=i[1],t[3]=i[2],t[4]=i[3]),{file:r?null:t[2],methodName:t[1]||wr,arguments:r?[t[2]]:[],lineNumber:t[3]?+t[3]:null,column:t[4]?+t[4]:null}}var Vd=/^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|rsc|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;function jd(e){var t=Vd.exec(e);return t?{file:t[2],methodName:t[1]||wr,arguments:[],lineNumber:+t[3],column:t[4]?+t[4]:null}:null}var Bd=/^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|rsc|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i,Ud=/(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;function Qd(e){var t=Bd.exec(e);if(!t)return null;var r=t[3]&&t[3].indexOf(\" > eval\")>-1,n=Ud.exec(t[3]);return r&&n!=null&&(t[3]=n[1],t[4]=n[2],t[5]=null),{file:t[3],methodName:t[1]||wr,arguments:t[2]?t[2].split(\",\"):[],lineNumber:t[4]?+t[4]:null,column:t[5]?+t[5]:null}}var Gd=/^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;function Jd(e){var t=Gd.exec(e);return t?{file:t[3],methodName:t[1]||wr,arguments:[],lineNumber:+t[4],column:t[5]?+t[5]:null}:null}var Wd=/^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;function Hd(e){var t=Wd.exec(e);return t?{file:t[2],methodName:t[1]||wr,arguments:[],lineNumber:+t[3],column:t[4]?+t[4]:null}:null}var to=class{getLocation(){return null}},ro=class{constructor(){d(this,\"_error\");this._error=new Error}getLocation(){let t=this._error.stack;if(!t)return null;let n=La(t).find(i=>{if(!i.file)return!1;let o=ki(i.file);return o!==\"<anonymous>\"&&!o.includes(\"@prisma\")&&!o.includes(\"/packages/client/src/runtime/\")&&!o.endsWith(\"/runtime/binary.js\")&&!o.endsWith(\"/runtime/library.js\")&&!o.endsWith(\"/runtime/edge.js\")&&!o.endsWith(\"/runtime/edge-esm.js\")&&!o.startsWith(\"internal/\")&&!i.methodName.includes(\"new \")&&!i.methodName.includes(\"getCallSite\")&&!i.methodName.includes(\"Proxy.\")&&i.methodName.split(\".\").length<4});return!n||!n.file?null:{fileName:n.file,lineNumber:n.lineNumber,columnNumber:n.column}}};function Xe(e){return e===\"minimal\"?typeof $EnabledCallSite==\"function\"&&e!==\"minimal\"?new $EnabledCallSite:new to:new ro}var Fa={_avg:!0,_count:!0,_sum:!0,_min:!0,_max:!0};function Mt(e={}){let t=Yd(e);return Object.entries(t).reduce((n,[i,o])=>(Fa[i]!==void 0?n.select[i]={select:o}:n[i]=o,n),{select:{}})}function Yd(e={}){return typeof e._count==\"boolean\"?{...e,_count:{_all:e._count}}:e}function Nn(e={}){return t=>(typeof e._count==\"boolean\"&&(t._count=t._count._all),t)}function Ma(e,t){let r=Nn(e);return t({action:\"aggregate\",unpacker:r,argsMapper:Mt})(e)}function zd(e={}){let{select:t,...r}=e;return typeof t==\"object\"?Mt({...r,_count:t}):Mt({...r,_count:{_all:!0}})}function Zd(e={}){return typeof e.select==\"object\"?t=>Nn(e)(t)._count:t=>Nn(e)(t)._count._all}function $a(e,t){return t({action:\"count\",unpacker:Zd(e),argsMapper:zd})(e)}function Xd(e={}){let t=Mt(e);if(Array.isArray(t.by))for(let r of t.by)typeof r==\"string\"&&(t.select[r]=!0);else typeof t.by==\"string\"&&(t.select[t.by]=!0);return t}function em(e={}){return t=>(typeof e?._count==\"boolean\"&&t.forEach(r=>{r._count=r._count._all}),t)}function qa(e,t){return t({action:\"groupBy\",unpacker:em(e),argsMapper:Xd})(e)}function Va(e,t,r){if(t===\"aggregate\")return n=>Ma(n,r);if(t===\"count\")return n=>$a(n,r);if(t===\"groupBy\")return n=>qa(n,r)}function ja(e,t){let r=t.fields.filter(i=>!i.relationName),n=Mi(r,i=>i.name);return new Proxy({},{get(i,o){if(o in i||typeof o==\"symbol\")return i[o];let s=n[o];if(s)return new cr(e,o,s.type,s.isList,s.kind===\"enum\")},...Dn(Object.keys(n))})}var Ba=e=>Array.isArray(e)?e:e.split(\".\"),no=(e,t)=>Ba(t).reduce((r,n)=>r&&r[n],e),Ua=(e,t,r)=>Ba(t).reduceRight((n,i,o,s)=>Object.assign({},no(e,s.slice(0,o)),{[i]:n}),r);function tm(e,t){return e===void 0||t===void 0?[]:[...t,\"select\",e]}function rm(e,t,r){return t===void 0?e??{}:Ua(t,r,e||!0)}function io(e,t,r,n,i,o){let a=e._runtimeDataModel.models[t].fields.reduce((l,u)=>({...l,[u.name]:u}),{});return l=>{let u=Xe(e._errorFormat),c=tm(n,i),p=rm(l,o,c),m=r({dataPath:c,callsite:u})(p),g=nm(e,t);return new Proxy(m,{get(h,y){if(!g.includes(y))return h[y];let T=[a[y].type,r,y],S=[c,p];return io(e,...T,...S)},...Dn([...g,...Object.getOwnPropertyNames(m)])})}}function nm(e,t){return e._runtimeDataModel.models[t].fields.filter(r=>r.kind===\"object\").map(r=>r.name)}var im=[\"findUnique\",\"findUniqueOrThrow\",\"findFirst\",\"findFirstOrThrow\",\"create\",\"update\",\"upsert\",\"delete\"],om=[\"aggregate\",\"count\",\"groupBy\"];function oo(e,t){let r=e._extensions.getAllModelExtensions(t)??{},n=[sm(e,t),lm(e,t),br(r),oe(\"name\",()=>t),oe(\"$name\",()=>t),oe(\"$parent\",()=>e._appliedParent)];return be({},n)}function sm(e,t){let r=Ae(t),n=Object.keys(tr.ModelAction).concat(\"count\");return{getKeys(){return n},getPropertyValue(i){let o=i,s=a=>l=>{let u=Xe(e._errorFormat);return e._createPrismaPromise(c=>{let p={args:l,dataPath:[],action:o,model:t,clientMethod:`${r}.${i}`,jsModelName:r,transaction:c,callsite:u};return e._request({...p,...a})},{action:o,args:l,model:t})};return im.includes(o)?io(e,t,s):am(i)?Va(e,i,s):s({})}}}function am(e){return om.includes(e)}function lm(e,t){return at(oe(\"fields\",()=>{let r=e._runtimeDataModel.models[t];return ja(t,r)}))}function Qa(e){return e.replace(/^./,t=>t.toUpperCase())}var so=Symbol();function xr(e){let t=[um(e),cm(e),oe(so,()=>e),oe(\"$parent\",()=>e._appliedParent)],r=e._extensions.getAllClientExtensions();return r&&t.push(br(r)),be(e,t)}function um(e){let t=Object.getPrototypeOf(e._originalClient),r=[...new Set(Object.getOwnPropertyNames(t))];return{getKeys(){return r},getPropertyValue(n){return e[n]}}}function cm(e){let t=Object.keys(e._runtimeDataModel.models),r=t.map(Ae),n=[...new Set(t.concat(r))];return at({getKeys(){return n},getPropertyValue(i){let o=Qa(i);if(e._runtimeDataModel.models[o]!==void 0)return oo(e,o);if(e._runtimeDataModel.models[i]!==void 0)return oo(e,i)},getPropertyDescriptor(i){if(!r.includes(i))return{enumerable:!1}}})}function Ga(e){return e[so]?e[so]:e}function Ja(e){if(typeof e==\"function\")return e(this);if(e.client?.__AccelerateEngine){let r=e.client.__AccelerateEngine;this._originalClient._engine=new r(this._originalClient._accelerateEngineConfig)}let t=Object.create(this._originalClient,{_extensions:{value:this._extensions.append(e)},_appliedParent:{value:this,configurable:!0},$use:{value:void 0},$on:{value:void 0}});return xr(t)}function Wa({result:e,modelName:t,select:r,omit:n,extensions:i}){let o=i.getAllComputedFields(t);if(!o)return e;let s=[],a=[];for(let l of Object.values(o)){if(n){if(n[l.name])continue;let u=l.needs.filter(c=>n[c]);u.length>0&&a.push(Nt(u))}else if(r){if(!r[l.name])continue;let u=l.needs.filter(c=>!r[c]);u.length>0&&a.push(Nt(u))}pm(e,l.needs)&&s.push(dm(l,be(e,s)))}return s.length>0||a.length>0?be(e,[...s,...a]):e}function pm(e,t){return t.every(r=>Fi(e,r))}function dm(e,t){return at(oe(e.name,()=>e.compute(t)))}function Ln({visitor:e,result:t,args:r,runtimeDataModel:n,modelName:i}){if(Array.isArray(t)){for(let s=0;s<t.length;s++)t[s]=Ln({result:t[s],args:r,modelName:i,runtimeDataModel:n,visitor:e});return t}let o=e(t,i,r)??t;return r.include&&Ha({includeOrSelect:r.include,result:o,parentModelName:i,runtimeDataModel:n,visitor:e}),r.select&&Ha({includeOrSelect:r.select,result:o,parentModelName:i,runtimeDataModel:n,visitor:e}),o}function Ha({includeOrSelect:e,result:t,parentModelName:r,runtimeDataModel:n,visitor:i}){for(let[o,s]of Object.entries(e)){if(!s||t[o]==null||Ie(s))continue;let l=n.models[r].fields.find(c=>c.name===o);if(!l||l.kind!==\"object\"||!l.relationName)continue;let u=typeof s==\"object\"?s:{};t[o]=Ln({visitor:i,result:t[o],args:u,modelName:l.type,runtimeDataModel:n})}}function Ka({result:e,modelName:t,args:r,extensions:n,runtimeDataModel:i,globalOmit:o}){return n.isEmpty()||e==null||typeof e!=\"object\"||!i.models[t]?e:Ln({result:e,args:r??{},modelName:t,runtimeDataModel:i,visitor:(a,l,u)=>{let c=Ae(l);return Wa({result:a,modelName:c,select:u.select,omit:u.select?void 0:{...o?.[c],...u.omit},extensions:n})}})}var mm=[\"$connect\",\"$disconnect\",\"$on\",\"$transaction\",\"$use\",\"$extends\"],Ya=mm;function za(e){if(e instanceof le)return fm(e);if(On(e))return gm(e);if(Array.isArray(e)){let r=[e[0]];for(let n=1;n<e.length;n++)r[n]=Pr(e[n]);return r}let t={};for(let r in e)t[r]=Pr(e[r]);return t}function fm(e){return new le(e.strings,e.values)}function gm(e){return new Er(e.sql,e.values)}function Pr(e){if(typeof e!=\"object\"||e==null||e instanceof qe||kt(e))return e;if(Ct(e))return new Ce(e.toFixed());if(Tt(e))return new Date(+e);if(ArrayBuffer.isView(e))return e.slice(0);if(Array.isArray(e)){let t=e.length,r;for(r=Array(t);t--;)r[t]=Pr(e[t]);return r}if(typeof e==\"object\"){let t={};for(let r in e)r===\"__proto__\"?Object.defineProperty(t,r,{value:Pr(e[r]),configurable:!0,enumerable:!0,writable:!0}):t[r]=Pr(e[r]);return t}Me(e,\"Unknown value\")}function Xa(e,t,r,n=0){return e._createPrismaPromise(i=>{let o=t.customDataProxyFetch;return\"transaction\"in t&&i!==void 0&&(t.transaction?.kind===\"batch\"&&t.transaction.lock.then(),t.transaction=i),n===r.length?e._executeRequest(t):r[n]({model:t.model,operation:t.model?t.action:t.clientMethod,args:za(t.args??{}),__internalParams:t,query:(s,a=t)=>{let l=a.customDataProxyFetch;return a.customDataProxyFetch=nl(o,l),a.args=s,Xa(e,a,r,n+1)}})})}function el(e,t){let{jsModelName:r,action:n,clientMethod:i}=t,o=r?n:i;if(e._extensions.isEmpty())return e._executeRequest(t);let s=e._extensions.getAllQueryCallbacks(r??\"$none\",o);return Xa(e,t,s)}function tl(e){return t=>{let r={requests:t},n=t[0].extensions.getAllBatchQueryCallbacks();return n.length?rl(r,n,0,e):e(r)}}function rl(e,t,r,n){if(r===t.length)return n(e);let i=e.customDataProxyFetch,o=e.requests[0].transaction;return t[r]({args:{queries:e.requests.map(s=>({model:s.modelName,operation:s.action,args:s.args})),transaction:o?{isolationLevel:o.kind===\"batch\"?o.isolationLevel:void 0}:void 0},__internalParams:e,query(s,a=e){let l=a.customDataProxyFetch;return a.customDataProxyFetch=nl(i,l),rl(a,t,r+1,n)}})}var Za=e=>e;function nl(e=Za,t=Za){return r=>e(t(r))}var il=M(\"prisma:client\"),ol={Vercel:\"vercel\",\"Netlify CI\":\"netlify\"};function sl({postinstall:e,ciName:t,clientVersion:r}){if(il(\"checkPlatformCaching:postinstall\",e),il(\"checkPlatformCaching:ciName\",t),e===!0&&t&&t in ol){let n=`Prisma has detected that this project was built on ${t}, which caches dependencies. This leads to an outdated Prisma Client because Prisma's auto-generation isn't triggered. To fix this, make sure to run the \\`prisma generate\\` command during the build process.\n\nLearn how: https://pris.ly/d/${ol[t]}-build`;throw console.error(n),new C(n,r)}}function al(e,t){return e?e.datasources?e.datasources:e.datasourceUrl?{[t[0]]:{url:e.datasourceUrl}}:{}:{}}var hm=()=>globalThis.process?.release?.name===\"node\",ym=()=>!!globalThis.Bun||!!globalThis.process?.versions?.bun,Em=()=>!!globalThis.Deno,bm=()=>typeof globalThis.Netlify==\"object\",wm=()=>typeof globalThis.EdgeRuntime==\"object\",xm=()=>globalThis.navigator?.userAgent===\"Cloudflare-Workers\";function Pm(){return[[bm,\"netlify\"],[wm,\"edge-light\"],[xm,\"workerd\"],[Em,\"deno\"],[ym,\"bun\"],[hm,\"node\"]].flatMap(r=>r[0]()?[r[1]]:[]).at(0)??\"\"}var vm={node:\"Node.js\",workerd:\"Cloudflare Workers\",deno:\"Deno and Deno Deploy\",netlify:\"Netlify Edge Functions\",\"edge-light\":\"Edge Runtime (Vercel Edge Functions, Vercel Edge Middleware, Next.js (Pages Router) Edge API Routes, Next.js (App Router) Edge Route Handlers or Next.js Middleware)\"};function Fn(){let e=Pm();return{id:e,prettyName:vm[e]||e,isEdge:[\"workerd\",\"deno\",\"netlify\",\"edge-light\"].includes(e)}}var dl=D(require(\"fs\")),vr=D(require(\"path\"));function Mn(e){let{runtimeBinaryTarget:t}=e;return`Add \"${t}\" to \\`binaryTargets\\` in the \"schema.prisma\" file and run \\`prisma generate\\` after saving it:\n\n${Tm(e)}`}function Tm(e){let{generator:t,generatorBinaryTargets:r,runtimeBinaryTarget:n}=e,i={fromEnvVar:null,value:n},o=[...r,i];return Di({...t,binaryTargets:o})}function et(e){let{runtimeBinaryTarget:t}=e;return`Prisma Client could not locate the Query Engine for runtime \"${t}\".`}function tt(e){let{searchedLocations:t}=e;return`The following locations have been searched:\n${[...new Set(t)].map(i=>`  ${i}`).join(`\n`)}`}function ll(e){let{runtimeBinaryTarget:t}=e;return`${et(e)}\n\nThis happened because \\`binaryTargets\\` have been pinned, but the actual deployment also required \"${t}\".\n${Mn(e)}\n\n${tt(e)}`}function $n(e){return`We would appreciate if you could take the time to share some information with us.\nPlease help us by answering a few questions: https://pris.ly/${e}`}function qn(e){let{errorStack:t}=e;return t?.match(/\\/\\.next|\\/next@|\\/next\\//)?`\n\nWe detected that you are using Next.js, learn how to fix this: https://pris.ly/d/engine-not-found-nextjs.`:\"\"}function ul(e){let{queryEngineName:t}=e;return`${et(e)}${qn(e)}\n\nThis is likely caused by a bundler that has not copied \"${t}\" next to the resulting bundle.\nEnsure that \"${t}\" has been copied next to the bundle or in \"${e.expectedLocation}\".\n\n${$n(\"engine-not-found-bundler-investigation\")}\n\n${tt(e)}`}function cl(e){let{runtimeBinaryTarget:t,generatorBinaryTargets:r}=e,n=r.find(i=>i.native);return`${et(e)}\n\nThis happened because Prisma Client was generated for \"${n?.value??\"unknown\"}\", but the actual deployment required \"${t}\".\n${Mn(e)}\n\n${tt(e)}`}function pl(e){let{queryEngineName:t}=e;return`${et(e)}${qn(e)}\n\nThis is likely caused by tooling that has not copied \"${t}\" to the deployment folder.\nEnsure that you ran \\`prisma generate\\` and that \"${t}\" has been copied to \"${e.expectedLocation}\".\n\n${$n(\"engine-not-found-tooling-investigation\")}\n\n${tt(e)}`}var Cm=M(\"prisma:client:engines:resolveEnginePath\"),Rm=()=>new RegExp(\"runtime[\\\\\\\\/]library\\\\.m?js$\");async function ml(e,t){let r={binary:process.env.PRISMA_QUERY_ENGINE_BINARY,library:process.env.PRISMA_QUERY_ENGINE_LIBRARY}[e]??t.prismaPath;if(r!==void 0)return r;let{enginePath:n,searchedLocations:i}=await Sm(e,t);if(Cm(\"enginePath\",n),n!==void 0&&e===\"binary\"&&Pi(n),n!==void 0)return t.prismaPath=n;let o=await ot(),s=t.generator?.binaryTargets??[],a=s.some(m=>m.native),l=!s.some(m=>m.value===o),u=__filename.match(Rm())===null,c={searchedLocations:i,generatorBinaryTargets:s,generator:t.generator,runtimeBinaryTarget:o,queryEngineName:fl(e,o),expectedLocation:vr.default.relative(process.cwd(),t.dirname),errorStack:new Error().stack},p;throw a&&l?p=cl(c):l?p=ll(c):u?p=ul(c):p=pl(c),new C(p,t.clientVersion)}async function Sm(engineType,config){let binaryTarget=await ot(),searchedLocations=[],dirname=eval(\"__dirname\"),searchLocations=[config.dirname,vr.default.resolve(dirname,\"..\"),config.generator?.output?.value??dirname,vr.default.resolve(dirname,\"../../../.prisma/client\"),\"/tmp/prisma-engines\",config.cwd];__filename.includes(\"resolveEnginePath\")&&searchLocations.push(cs());for(let e of searchLocations){let t=fl(engineType,binaryTarget),r=vr.default.join(e,t);if(searchedLocations.push(e),dl.default.existsSync(r))return{enginePath:r,searchedLocations}}return{enginePath:void 0,searchedLocations}}function fl(e,t){return e===\"library\"?Br(t,\"fs\"):`query-engine-${t}${t===\"windows\"?\".exe\":\"\"}`}var ao=D(Li());function gl(e){return e?e.replace(/\".*\"/g,'\"X\"').replace(/[\\s:\\[]([+-]?([0-9]*[.])?[0-9]+)/g,t=>`${t[0]}5`):\"\"}function hl(e){return e.split(`\n`).map(t=>t.replace(/^\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)\\s*/,\"\").replace(/\\+\\d+\\s*ms$/,\"\")).join(`\n`)}var yl=D(_s());function El({title:e,user:t=\"prisma\",repo:r=\"prisma\",template:n=\"bug_report.yml\",body:i}){return(0,yl.default)({user:t,repo:r,template:n,title:e,body:i})}function bl({version:e,binaryTarget:t,title:r,description:n,engineVersion:i,database:o,query:s}){let a=qo(6e3-(s?.length??0)),l=hl((0,ao.default)(a)),u=n?`# Description\n\\`\\`\\`\n${n}\n\\`\\`\\``:\"\",c=(0,ao.default)(`Hi Prisma Team! My Prisma Client just crashed. This is the report:\n## Versions\n\n| Name            | Version            |\n|-----------------|--------------------|\n| Node            | ${process.version?.padEnd(19)}| \n| OS              | ${t?.padEnd(19)}|\n| Prisma Client   | ${e?.padEnd(19)}|\n| Query Engine    | ${i?.padEnd(19)}|\n| Database        | ${o?.padEnd(19)}|\n\n${u}\n\n## Logs\n\\`\\`\\`\n${l}\n\\`\\`\\`\n\n## Client Snippet\n\\`\\`\\`ts\n// PLEASE FILL YOUR CODE SNIPPET HERE\n\\`\\`\\`\n\n## Schema\n\\`\\`\\`prisma\n// PLEASE ADD YOUR SCHEMA HERE IF POSSIBLE\n\\`\\`\\`\n\n## Prisma Engine Query\n\\`\\`\\`\n${s?gl(s):\"\"}\n\\`\\`\\`\n`),p=El({title:r,body:c});return`${r}\n\nThis is a non-recoverable error which probably happens when the Prisma Query Engine has a panic.\n\n${ee(p)}\n\nIf you want the Prisma team to look into it, please open the link above \\u{1F64F}\nTo increase the chance of success, please post your schema and a snippet of\nhow you used Prisma Client in the issue. \n`}function $t({inlineDatasources:e,overrideDatasources:t,env:r,clientVersion:n}){let i,o=Object.keys(e)[0],s=e[o]?.url,a=t[o]?.url;if(o===void 0?i=void 0:a?i=a:s?.value?i=s.value:s?.fromEnvVar&&(i=r[s.fromEnvVar]),s?.fromEnvVar!==void 0&&i===void 0)throw new C(`error: Environment variable not found: ${s.fromEnvVar}.`,n);if(i===void 0)throw new C(\"error: Missing URL environment variable, value, or override.\",n);return i}var Vn=class extends Error{constructor(r,n){super(r);d(this,\"clientVersion\");d(this,\"cause\");this.clientVersion=n.clientVersion,this.cause=n.cause}get[Symbol.toStringTag](){return this.name}};var ue=class extends Vn{constructor(r,n){super(r,n);d(this,\"isRetryable\");this.isRetryable=n.isRetryable??!0}};function A(e,t){return{...e,isRetryable:t}}var qt=class extends ue{constructor(r){super(\"This request must be retried\",A(r,!0));d(this,\"name\",\"ForcedRetryError\");d(this,\"code\",\"P5001\")}};x(qt,\"ForcedRetryError\");var lt=class extends ue{constructor(r,n){super(r,A(n,!1));d(this,\"name\",\"InvalidDatasourceError\");d(this,\"code\",\"P6001\")}};x(lt,\"InvalidDatasourceError\");var ut=class extends ue{constructor(r,n){super(r,A(n,!1));d(this,\"name\",\"NotImplementedYetError\");d(this,\"code\",\"P5004\")}};x(ut,\"NotImplementedYetError\");var j=class extends ue{constructor(r,n){super(r,n);d(this,\"response\");this.response=n.response;let i=this.response.headers.get(\"prisma-request-id\");if(i){let o=`(The request id was: ${i})`;this.message=this.message+\" \"+o}}};var ct=class extends j{constructor(r){super(\"Schema needs to be uploaded\",A(r,!0));d(this,\"name\",\"SchemaMissingError\");d(this,\"code\",\"P5005\")}};x(ct,\"SchemaMissingError\");var lo=\"This request could not be understood by the server\",Tr=class extends j{constructor(r,n,i){super(n||lo,A(r,!1));d(this,\"name\",\"BadRequestError\");d(this,\"code\",\"P5000\");i&&(this.code=i)}};x(Tr,\"BadRequestError\");var Cr=class extends j{constructor(r,n){super(\"Engine not started: healthcheck timeout\",A(r,!0));d(this,\"name\",\"HealthcheckTimeoutError\");d(this,\"code\",\"P5013\");d(this,\"logs\");this.logs=n}};x(Cr,\"HealthcheckTimeoutError\");var Rr=class extends j{constructor(r,n,i){super(n,A(r,!0));d(this,\"name\",\"EngineStartupError\");d(this,\"code\",\"P5014\");d(this,\"logs\");this.logs=i}};x(Rr,\"EngineStartupError\");var Sr=class extends j{constructor(r){super(\"Engine version is not supported\",A(r,!1));d(this,\"name\",\"EngineVersionNotSupportedError\");d(this,\"code\",\"P5012\")}};x(Sr,\"EngineVersionNotSupportedError\");var uo=\"Request timed out\",Ar=class extends j{constructor(r,n=uo){super(n,A(r,!1));d(this,\"name\",\"GatewayTimeoutError\");d(this,\"code\",\"P5009\")}};x(Ar,\"GatewayTimeoutError\");var Am=\"Interactive transaction error\",Ir=class extends j{constructor(r,n=Am){super(n,A(r,!1));d(this,\"name\",\"InteractiveTransactionError\");d(this,\"code\",\"P5015\")}};x(Ir,\"InteractiveTransactionError\");var Im=\"Request parameters are invalid\",kr=class extends j{constructor(r,n=Im){super(n,A(r,!1));d(this,\"name\",\"InvalidRequestError\");d(this,\"code\",\"P5011\")}};x(kr,\"InvalidRequestError\");var co=\"Requested resource does not exist\",Or=class extends j{constructor(r,n=co){super(n,A(r,!1));d(this,\"name\",\"NotFoundError\");d(this,\"code\",\"P5003\")}};x(Or,\"NotFoundError\");var po=\"Unknown server error\",Vt=class extends j{constructor(r,n,i){super(n||po,A(r,!0));d(this,\"name\",\"ServerError\");d(this,\"code\",\"P5006\");d(this,\"logs\");this.logs=i}};x(Vt,\"ServerError\");var mo=\"Unauthorized, check your connection string\",_r=class extends j{constructor(r,n=mo){super(n,A(r,!1));d(this,\"name\",\"UnauthorizedError\");d(this,\"code\",\"P5007\")}};x(_r,\"UnauthorizedError\");var fo=\"Usage exceeded, retry again later\",Dr=class extends j{constructor(r,n=fo){super(n,A(r,!0));d(this,\"name\",\"UsageExceededError\");d(this,\"code\",\"P5008\")}};x(Dr,\"UsageExceededError\");async function km(e){let t;try{t=await e.text()}catch{return{type:\"EmptyError\"}}try{let r=JSON.parse(t);if(typeof r==\"string\")switch(r){case\"InternalDataProxyError\":return{type:\"DataProxyError\",body:r};default:return{type:\"UnknownTextError\",body:r}}if(typeof r==\"object\"&&r!==null){if(\"is_panic\"in r&&\"message\"in r&&\"error_code\"in r)return{type:\"QueryEngineError\",body:r};if(\"EngineNotStarted\"in r||\"InteractiveTransactionMisrouted\"in r||\"InvalidRequestError\"in r){let n=Object.values(r)[0].reason;return typeof n==\"string\"&&![\"SchemaMissing\",\"EngineVersionNotSupported\"].includes(n)?{type:\"UnknownJsonError\",body:r}:{type:\"DataProxyError\",body:r}}}return{type:\"UnknownJsonError\",body:r}}catch{return t===\"\"?{type:\"EmptyError\"}:{type:\"UnknownTextError\",body:t}}}async function Nr(e,t){if(e.ok)return;let r={clientVersion:t,response:e},n=await km(e);if(n.type===\"QueryEngineError\")throw new te(n.body.message,{code:n.body.error_code,clientVersion:t});if(n.type===\"DataProxyError\"){if(n.body===\"InternalDataProxyError\")throw new Vt(r,\"Internal Data Proxy error\");if(\"EngineNotStarted\"in n.body){if(n.body.EngineNotStarted.reason===\"SchemaMissing\")return new ct(r);if(n.body.EngineNotStarted.reason===\"EngineVersionNotSupported\")throw new Sr(r);if(\"EngineStartupError\"in n.body.EngineNotStarted.reason){let{msg:i,logs:o}=n.body.EngineNotStarted.reason.EngineStartupError;throw new Rr(r,i,o)}if(\"KnownEngineStartupError\"in n.body.EngineNotStarted.reason){let{msg:i,error_code:o}=n.body.EngineNotStarted.reason.KnownEngineStartupError;throw new C(i,t,o)}if(\"HealthcheckTimeout\"in n.body.EngineNotStarted.reason){let{logs:i}=n.body.EngineNotStarted.reason.HealthcheckTimeout;throw new Cr(r,i)}}if(\"InteractiveTransactionMisrouted\"in n.body){let i={IDParseError:\"Could not parse interactive transaction ID\",NoQueryEngineFoundError:\"Could not find Query Engine for the specified host and transaction ID\",TransactionStartError:\"Could not start interactive transaction\"};throw new Ir(r,i[n.body.InteractiveTransactionMisrouted.reason])}if(\"InvalidRequestError\"in n.body)throw new kr(r,n.body.InvalidRequestError.reason)}if(e.status===401||e.status===403)throw new _r(r,jt(mo,n));if(e.status===404)return new Or(r,jt(co,n));if(e.status===429)throw new Dr(r,jt(fo,n));if(e.status===504)throw new Ar(r,jt(uo,n));if(e.status>=500)throw new Vt(r,jt(po,n));if(e.status>=400)throw new Tr(r,jt(lo,n))}function jt(e,t){return t.type===\"EmptyError\"?e:`${e}: ${JSON.stringify(t)}`}function wl(e){let t=Math.pow(2,e)*50,r=Math.ceil(Math.random()*t)-Math.ceil(t/2),n=t+r;return new Promise(i=>setTimeout(()=>i(n),n))}var Ve=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";function xl(e){let t=new TextEncoder().encode(e),r=\"\",n=t.byteLength,i=n%3,o=n-i,s,a,l,u,c;for(let p=0;p<o;p=p+3)c=t[p]<<16|t[p+1]<<8|t[p+2],s=(c&16515072)>>18,a=(c&258048)>>12,l=(c&4032)>>6,u=c&63,r+=Ve[s]+Ve[a]+Ve[l]+Ve[u];return i==1?(c=t[o],s=(c&252)>>2,a=(c&3)<<4,r+=Ve[s]+Ve[a]+\"==\"):i==2&&(c=t[o]<<8|t[o+1],s=(c&64512)>>10,a=(c&1008)>>4,l=(c&15)<<2,r+=Ve[s]+Ve[a]+Ve[l]+\"=\"),r}function Pl(e){if(!!e.generator?.previewFeatures.some(r=>r.toLowerCase().includes(\"metrics\")))throw new C(\"The `metrics` preview feature is not yet available with Accelerate.\\nPlease remove `metrics` from the `previewFeatures` in your schema.\\n\\nMore information about Accelerate: https://pris.ly/d/accelerate\",e.clientVersion)}function Om(e){return e[0]*1e3+e[1]/1e6}function go(e){return new Date(Om(e))}var vl={\"@prisma/debug\":\"workspace:*\",\"@prisma/engines-version\":\"6.5.0-73.173f8d54f8d52e692c7e27e72a88314ec7aeff60\",\"@prisma/fetch-engine\":\"workspace:*\",\"@prisma/get-platform\":\"workspace:*\"};var Lr=class extends ue{constructor(r,n){super(`Cannot fetch data from service:\n${r}`,A(n,!0));d(this,\"name\",\"RequestError\");d(this,\"code\",\"P5010\")}};x(Lr,\"RequestError\");async function pt(e,t,r=n=>n){let{clientVersion:n,...i}=t,o=r(fetch);try{return await o(e,i)}catch(s){let a=s.message??\"Unknown error\";throw new Lr(a,{clientVersion:n,cause:s})}}var Dm=/^[1-9][0-9]*\\.[0-9]+\\.[0-9]+$/,Tl=M(\"prisma:client:dataproxyEngine\");async function Nm(e,t){let r=vl[\"@prisma/engines-version\"],n=t.clientVersion??\"unknown\";if(process.env.PRISMA_CLIENT_DATA_PROXY_CLIENT_VERSION)return process.env.PRISMA_CLIENT_DATA_PROXY_CLIENT_VERSION;if(e.includes(\"accelerate\")&&n!==\"0.0.0\"&&n!==\"in-memory\")return n;let[i,o]=n?.split(\"-\")??[];if(o===void 0&&Dm.test(i))return i;if(o!==void 0||n===\"0.0.0\"||n===\"in-memory\"){if(e.startsWith(\"localhost\")||e.startsWith(\"127.0.0.1\"))return\"0.0.0\";let[s]=r.split(\"-\")??[],[a,l,u]=s.split(\".\"),c=Lm(`<=${a}.${l}.${u}`),p=await pt(c,{clientVersion:n});if(!p.ok)throw new Error(`Failed to fetch stable Prisma version, unpkg.com status ${p.status} ${p.statusText}, response body: ${await p.text()||\"<empty body>\"}`);let m=await p.text();Tl(\"length of body fetched from unpkg.com\",m.length);let g;try{g=JSON.parse(m)}catch(h){throw console.error(\"JSON.parse error: body fetched from unpkg.com: \",m),h}return g.version}throw new ut(\"Only `major.minor.patch` versions are supported by Accelerate.\",{clientVersion:n})}async function Cl(e,t){let r=await Nm(e,t);return Tl(\"version\",r),r}function Lm(e){return encodeURI(`https://unpkg.com/prisma@${e}/package.json`)}var Rl=3,jn=M(\"prisma:client:dataproxyEngine\"),ho=class{constructor({apiKey:t,tracingHelper:r,logLevel:n,logQueries:i,engineHash:o}){d(this,\"apiKey\");d(this,\"tracingHelper\");d(this,\"logLevel\");d(this,\"logQueries\");d(this,\"engineHash\");this.apiKey=t,this.tracingHelper=r,this.logLevel=n,this.logQueries=i,this.engineHash=o}build({traceparent:t,interactiveTransaction:r}={}){let n={Authorization:`Bearer ${this.apiKey}`,\"Prisma-Engine-Hash\":this.engineHash};this.tracingHelper.isEnabled()&&(n.traceparent=t??this.tracingHelper.getTraceParent()),r&&(n[\"X-transaction-id\"]=r.id);let i=this.buildCaptureSettings();return i.length>0&&(n[\"X-capture-telemetry\"]=i.join(\", \")),n}buildCaptureSettings(){let t=[];return this.tracingHelper.isEnabled()&&t.push(\"tracing\"),this.logLevel&&t.push(this.logLevel),this.logQueries&&t.push(\"query\"),t}},Fr=class{constructor(t){d(this,\"name\",\"DataProxyEngine\");d(this,\"inlineSchema\");d(this,\"inlineSchemaHash\");d(this,\"inlineDatasources\");d(this,\"config\");d(this,\"logEmitter\");d(this,\"env\");d(this,\"clientVersion\");d(this,\"engineHash\");d(this,\"tracingHelper\");d(this,\"remoteClientVersion\");d(this,\"host\");d(this,\"headerBuilder\");d(this,\"startPromise\");Pl(t),this.config=t,this.env={...t.env,...typeof process<\"u\"?process.env:{}},this.inlineSchema=xl(t.inlineSchema),this.inlineDatasources=t.inlineDatasources,this.inlineSchemaHash=t.inlineSchemaHash,this.clientVersion=t.clientVersion,this.engineHash=t.engineVersion,this.logEmitter=t.logEmitter,this.tracingHelper=t.tracingHelper}apiKey(){return this.headerBuilder.apiKey}version(){return this.engineHash}async start(){this.startPromise!==void 0&&await this.startPromise,this.startPromise=(async()=>{let[t,r]=this.extractHostAndApiKey();this.host=t,this.headerBuilder=new ho({apiKey:r,tracingHelper:this.tracingHelper,logLevel:this.config.logLevel,logQueries:this.config.logQueries,engineHash:this.engineHash}),this.remoteClientVersion=await Cl(t,this.config),jn(\"host\",this.host)})(),await this.startPromise}async stop(){}propagateResponseExtensions(t){t?.logs?.length&&t.logs.forEach(r=>{switch(r.level){case\"debug\":case\"trace\":jn(r);break;case\"error\":case\"warn\":case\"info\":{this.logEmitter.emit(r.level,{timestamp:go(r.timestamp),message:r.attributes.message??\"\",target:r.target});break}case\"query\":{this.logEmitter.emit(\"query\",{query:r.attributes.query??\"\",timestamp:go(r.timestamp),duration:r.attributes.duration_ms??0,params:r.attributes.params??\"\",target:r.target});break}default:r.level}}),t?.traces?.length&&this.tracingHelper.dispatchEngineSpans(t.traces)}onBeforeExit(){throw new Error('\"beforeExit\" hook is not applicable to the remote query engine')}async url(t){return await this.start(),`https://${this.host}/${this.remoteClientVersion}/${this.inlineSchemaHash}/${t}`}async uploadSchema(){let t={name:\"schemaUpload\",internal:!0};return this.tracingHelper.runInChildSpan(t,async()=>{let r=await pt(await this.url(\"schema\"),{method:\"PUT\",headers:this.headerBuilder.build(),body:this.inlineSchema,clientVersion:this.clientVersion});r.ok||jn(\"schema response status\",r.status);let n=await Nr(r,this.clientVersion);if(n)throw this.logEmitter.emit(\"warn\",{message:`Error while uploading schema: ${n.message}`,timestamp:new Date,target:\"\"}),n;this.logEmitter.emit(\"info\",{message:`Schema (re)uploaded (hash: ${this.inlineSchemaHash})`,timestamp:new Date,target:\"\"})})}request(t,{traceparent:r,interactiveTransaction:n,customDataProxyFetch:i}){return this.requestInternal({body:t,traceparent:r,interactiveTransaction:n,customDataProxyFetch:i})}async requestBatch(t,{traceparent:r,transaction:n,customDataProxyFetch:i}){let o=n?.kind===\"itx\"?n.options:void 0,s=Lt(t,n);return(await this.requestInternal({body:s,customDataProxyFetch:i,interactiveTransaction:o,traceparent:r})).map(l=>(l.extensions&&this.propagateResponseExtensions(l.extensions),\"errors\"in l?this.convertProtocolErrorsToClientError(l.errors):l))}requestInternal({body:t,traceparent:r,customDataProxyFetch:n,interactiveTransaction:i}){return this.withRetry({actionGerund:\"querying\",callback:async({logHttpCall:o})=>{let s=i?`${i.payload.endpoint}/graphql`:await this.url(\"graphql\");o(s);let a=await pt(s,{method:\"POST\",headers:this.headerBuilder.build({traceparent:r,interactiveTransaction:i}),body:JSON.stringify(t),clientVersion:this.clientVersion},n);a.ok||jn(\"graphql response status\",a.status),await this.handleError(await Nr(a,this.clientVersion));let l=await a.json();if(l.extensions&&this.propagateResponseExtensions(l.extensions),\"errors\"in l)throw this.convertProtocolErrorsToClientError(l.errors);return\"batchResult\"in l?l.batchResult:l}})}async transaction(t,r,n){let i={start:\"starting\",commit:\"committing\",rollback:\"rolling back\"};return this.withRetry({actionGerund:`${i[t]} transaction`,callback:async({logHttpCall:o})=>{if(t===\"start\"){let s=JSON.stringify({max_wait:n.maxWait,timeout:n.timeout,isolation_level:n.isolationLevel}),a=await this.url(\"transaction/start\");o(a);let l=await pt(a,{method:\"POST\",headers:this.headerBuilder.build({traceparent:r.traceparent}),body:s,clientVersion:this.clientVersion});await this.handleError(await Nr(l,this.clientVersion));let u=await l.json(),{extensions:c}=u;c&&this.propagateResponseExtensions(c);let p=u.id,m=u[\"data-proxy\"].endpoint;return{id:p,payload:{endpoint:m}}}else{let s=`${n.payload.endpoint}/${t}`;o(s);let a=await pt(s,{method:\"POST\",headers:this.headerBuilder.build({traceparent:r.traceparent}),clientVersion:this.clientVersion});await this.handleError(await Nr(a,this.clientVersion));let l=await a.json(),{extensions:u}=l;u&&this.propagateResponseExtensions(u);return}}})}extractHostAndApiKey(){let t={clientVersion:this.clientVersion},r=Object.keys(this.inlineDatasources)[0],n=$t({inlineDatasources:this.inlineDatasources,overrideDatasources:this.config.overrideDatasources,clientVersion:this.clientVersion,env:this.env}),i;try{i=new URL(n)}catch{throw new lt(`Error validating datasource \\`${r}\\`: the URL must start with the protocol \\`prisma://\\``,t)}let{protocol:o,host:s,searchParams:a}=i;if(o!==\"prisma:\"&&o!==Xr)throw new lt(`Error validating datasource \\`${r}\\`: the URL must start with the protocol \\`prisma://\\``,t);let l=a.get(\"api_key\");if(l===null||l.length<1)throw new lt(`Error validating datasource \\`${r}\\`: the URL must contain a valid API key`,t);return[s,l]}metrics(){throw new ut(\"Metrics are not yet supported for Accelerate\",{clientVersion:this.clientVersion})}async withRetry(t){for(let r=0;;r++){let n=i=>{this.logEmitter.emit(\"info\",{message:`Calling ${i} (n=${r})`,timestamp:new Date,target:\"\"})};try{return await t.callback({logHttpCall:n})}catch(i){if(!(i instanceof ue)||!i.isRetryable)throw i;if(r>=Rl)throw i instanceof qt?i.cause:i;this.logEmitter.emit(\"warn\",{message:`Attempt ${r+1}/${Rl} failed for ${t.actionGerund}: ${i.message??\"(unknown)\"}`,timestamp:new Date,target:\"\"});let o=await wl(r);this.logEmitter.emit(\"warn\",{message:`Retrying after ${o}ms`,timestamp:new Date,target:\"\"})}}}async handleError(t){if(t instanceof ct)throw await this.uploadSchema(),new qt({clientVersion:this.clientVersion,cause:t});if(t)throw t}convertProtocolErrorsToClientError(t){return t.length===1?Ft(t[0],this.config.clientVersion,this.config.activeProvider):new U(JSON.stringify(t),{clientVersion:this.config.clientVersion})}applyPendingMigrations(){throw new Error(\"Method not implemented.\")}};function Sl(e){if(e?.kind===\"itx\")return e.options.id}var Eo=D(require(\"os\")),Al=D(require(\"path\"));var yo=Symbol(\"PrismaLibraryEngineCache\");function Fm(){let e=globalThis;return e[yo]===void 0&&(e[yo]={}),e[yo]}function Mm(e){let t=Fm();if(t[e]!==void 0)return t[e];let r=Al.default.toNamespacedPath(e),n={exports:{}},i=0;return process.platform!==\"win32\"&&(i=Eo.default.constants.dlopen.RTLD_LAZY|Eo.default.constants.dlopen.RTLD_DEEPBIND),process.dlopen(n,r,i),t[e]=n.exports,n.exports}var Il={async loadLibrary(e){let t=await ci(),r=await ml(\"library\",e);try{return e.tracingHelper.runInChildSpan({name:\"loadLibrary\",internal:!0},()=>Mm(r))}catch(n){let i=vi({e:n,platformInfo:t,id:r});throw new C(i,e.clientVersion)}}};var bo,kl={async loadLibrary(e){let{clientVersion:t,adapter:r,engineWasm:n}=e;if(r===void 0)throw new C(`The \\`adapter\\` option for \\`PrismaClient\\` is required in this context (${Fn().prettyName})`,t);if(n===void 0)throw new C(\"WASM engine was unexpectedly `undefined`\",t);bo===void 0&&(bo=(async()=>{let o=n.getRuntime(),s=await n.getQueryEngineWasmModule();if(s==null)throw new C(\"The loaded wasm module was unexpectedly `undefined` or `null` once loaded\",t);let a={\"./query_engine_bg.js\":o},l=new WebAssembly.Instance(s,a),u=l.exports.__wbindgen_start;return o.__wbg_set_wasm(l.exports),u(),o.QueryEngine})());let i=await bo;return{debugPanic(){return Promise.reject(\"{}\")},dmmf(){return Promise.resolve(\"{}\")},version(){return{commit:\"unknown\",version:\"unknown\"}},QueryEngine:i}}};var $m=\"P2036\",ke=M(\"prisma:client:libraryEngine\");function qm(e){return e.item_type===\"query\"&&\"query\"in e}function Vm(e){return\"level\"in e?e.level===\"error\"&&e.message===\"PANIC\":!1}var Ol=[...ii,\"native\"],jm=0xffffffffffffffffn,wo=1n;function Bm(){let e=wo++;return wo>jm&&(wo=1n),e}var Bt=class{constructor(t,r){d(this,\"name\",\"LibraryEngine\");d(this,\"engine\");d(this,\"libraryInstantiationPromise\");d(this,\"libraryStartingPromise\");d(this,\"libraryStoppingPromise\");d(this,\"libraryStarted\");d(this,\"executingQueryPromise\");d(this,\"config\");d(this,\"QueryEngineConstructor\");d(this,\"libraryLoader\");d(this,\"library\");d(this,\"logEmitter\");d(this,\"libQueryEnginePath\");d(this,\"binaryTarget\");d(this,\"datasourceOverrides\");d(this,\"datamodel\");d(this,\"logQueries\");d(this,\"logLevel\");d(this,\"lastQuery\");d(this,\"loggerRustPanic\");d(this,\"tracingHelper\");d(this,\"versionInfo\");this.libraryLoader=r??Il,t.engineWasm!==void 0&&(this.libraryLoader=r??kl),this.config=t,this.libraryStarted=!1,this.logQueries=t.logQueries??!1,this.logLevel=t.logLevel??\"error\",this.logEmitter=t.logEmitter,this.datamodel=t.inlineSchema,this.tracingHelper=t.tracingHelper,t.enableDebugLogs&&(this.logLevel=\"debug\");let n=Object.keys(t.overrideDatasources)[0],i=t.overrideDatasources[n]?.url;n!==void 0&&i!==void 0&&(this.datasourceOverrides={[n]:i}),this.libraryInstantiationPromise=this.instantiateLibrary()}wrapEngine(t){return{applyPendingMigrations:t.applyPendingMigrations?.bind(t),commitTransaction:this.withRequestId(t.commitTransaction.bind(t)),connect:this.withRequestId(t.connect.bind(t)),disconnect:this.withRequestId(t.disconnect.bind(t)),metrics:t.metrics?.bind(t),query:this.withRequestId(t.query.bind(t)),rollbackTransaction:this.withRequestId(t.rollbackTransaction.bind(t)),sdlSchema:t.sdlSchema?.bind(t),startTransaction:this.withRequestId(t.startTransaction.bind(t)),trace:t.trace.bind(t)}}withRequestId(t){return async(...r)=>{let n=Bm().toString();try{return await t(...r,n)}finally{if(this.tracingHelper.isEnabled()){let i=await this.engine?.trace(n);if(i){let o=JSON.parse(i);this.tracingHelper.dispatchEngineSpans(o.spans)}}}}}async applyPendingMigrations(){throw new Error(\"Cannot call this method from this type of engine instance\")}async transaction(t,r,n){await this.start();let i=JSON.stringify(r),o;if(t===\"start\"){let a=JSON.stringify({max_wait:n.maxWait,timeout:n.timeout,isolation_level:n.isolationLevel});o=await this.engine?.startTransaction(a,i)}else t===\"commit\"?o=await this.engine?.commitTransaction(n.id,i):t===\"rollback\"&&(o=await this.engine?.rollbackTransaction(n.id,i));let s=this.parseEngineResponse(o);if(Um(s)){let a=this.getExternalAdapterError(s);throw a?a.error:new te(s.message,{code:s.error_code,clientVersion:this.config.clientVersion,meta:s.meta})}else if(typeof s.message==\"string\")throw new U(s.message,{clientVersion:this.config.clientVersion});return s}async instantiateLibrary(){if(ke(\"internalSetup\"),this.libraryInstantiationPromise)return this.libraryInstantiationPromise;ni(),this.binaryTarget=await this.getCurrentBinaryTarget(),await this.tracingHelper.runInChildSpan(\"load_engine\",()=>this.loadEngine()),this.version()}async getCurrentBinaryTarget(){{if(this.binaryTarget)return this.binaryTarget;let t=await this.tracingHelper.runInChildSpan(\"detect_platform\",()=>ot());if(!Ol.includes(t))throw new C(`Unknown ${fe(\"PRISMA_QUERY_ENGINE_LIBRARY\")} ${fe(Y(t))}. Possible binaryTargets: ${je(Ol.join(\", \"))} or a path to the query engine library.\nYou may have to run ${je(\"prisma generate\")} for your changes to take effect.`,this.config.clientVersion);return t}}parseEngineResponse(t){if(!t)throw new U(\"Response from the Engine was empty\",{clientVersion:this.config.clientVersion});try{return JSON.parse(t)}catch{throw new U(\"Unable to JSON.parse response from engine\",{clientVersion:this.config.clientVersion})}}async loadEngine(){if(!this.engine){this.QueryEngineConstructor||(this.library=await this.libraryLoader.loadLibrary(this.config),this.QueryEngineConstructor=this.library.QueryEngine);try{let t=new WeakRef(this),{adapter:r}=this.config;r&&ke(\"Using driver adapter: %O\",r),this.engine=this.wrapEngine(new this.QueryEngineConstructor({datamodel:this.datamodel,env:process.env,logQueries:this.config.logQueries??!1,ignoreEnvVarErrors:!0,datasourceOverrides:this.datasourceOverrides??{},logLevel:this.logLevel,configDir:this.config.cwd,engineProtocol:\"json\",enableTracing:this.tracingHelper.isEnabled()},n=>{t.deref()?.logger(n)},r))}catch(t){let r=t,n=this.parseInitError(r.message);throw typeof n==\"string\"?r:new C(n.message,this.config.clientVersion,n.error_code)}}}logger(t){let r=this.parseEngineResponse(t);r&&(r.level=r?.level.toLowerCase()??\"unknown\",qm(r)?this.logEmitter.emit(\"query\",{timestamp:new Date,query:r.query,params:r.params,duration:Number(r.duration_ms),target:r.module_path}):Vm(r)?this.loggerRustPanic=new pe(xo(this,`${r.message}: ${r.reason} in ${r.file}:${r.line}:${r.column}`),this.config.clientVersion):this.logEmitter.emit(r.level,{timestamp:new Date,message:r.message,target:r.module_path}))}parseInitError(t){try{return JSON.parse(t)}catch{}return t}parseRequestError(t){try{return JSON.parse(t)}catch{}return t}onBeforeExit(){throw new Error('\"beforeExit\" hook is not applicable to the library engine since Prisma 5.0.0, it is only relevant and implemented for the binary engine. Please add your event listener to the `process` object directly instead.')}async start(){if(await this.libraryInstantiationPromise,await this.libraryStoppingPromise,this.libraryStartingPromise)return ke(`library already starting, this.libraryStarted: ${this.libraryStarted}`),this.libraryStartingPromise;if(this.libraryStarted)return;let t=async()=>{ke(\"library starting\");try{let r={traceparent:this.tracingHelper.getTraceParent()};await this.engine?.connect(JSON.stringify(r)),this.libraryStarted=!0,ke(\"library started\")}catch(r){let n=this.parseInitError(r.message);throw typeof n==\"string\"?r:new C(n.message,this.config.clientVersion,n.error_code)}finally{this.libraryStartingPromise=void 0}};return this.libraryStartingPromise=this.tracingHelper.runInChildSpan(\"connect\",t),this.libraryStartingPromise}async stop(){if(await this.libraryStartingPromise,await this.executingQueryPromise,this.libraryStoppingPromise)return ke(\"library is already stopping\"),this.libraryStoppingPromise;if(!this.libraryStarted)return;let t=async()=>{await new Promise(n=>setTimeout(n,5)),ke(\"library stopping\");let r={traceparent:this.tracingHelper.getTraceParent()};await this.engine?.disconnect(JSON.stringify(r)),this.libraryStarted=!1,this.libraryStoppingPromise=void 0,ke(\"library stopped\")};return this.libraryStoppingPromise=this.tracingHelper.runInChildSpan(\"disconnect\",t),this.libraryStoppingPromise}version(){return this.versionInfo=this.library?.version(),this.versionInfo?.version??\"unknown\"}debugPanic(t){return this.library?.debugPanic(t)}async request(t,{traceparent:r,interactiveTransaction:n}){ke(`sending request, this.libraryStarted: ${this.libraryStarted}`);let i=JSON.stringify({traceparent:r}),o=JSON.stringify(t);try{await this.start(),this.executingQueryPromise=this.engine?.query(o,i,n?.id),this.lastQuery=o;let s=this.parseEngineResponse(await this.executingQueryPromise);if(s.errors)throw s.errors.length===1?this.buildQueryError(s.errors[0]):new U(JSON.stringify(s.errors),{clientVersion:this.config.clientVersion});if(this.loggerRustPanic)throw this.loggerRustPanic;return{data:s}}catch(s){if(s instanceof C)throw s;if(s.code===\"GenericFailure\"&&s.message?.startsWith(\"PANIC:\"))throw new pe(xo(this,s.message),this.config.clientVersion);let a=this.parseRequestError(s.message);throw typeof a==\"string\"?s:new U(`${a.message}\n${a.backtrace}`,{clientVersion:this.config.clientVersion})}}async requestBatch(t,{transaction:r,traceparent:n}){ke(\"requestBatch\");let i=Lt(t,r);await this.start(),this.lastQuery=JSON.stringify(i),this.executingQueryPromise=this.engine.query(this.lastQuery,JSON.stringify({traceparent:n}),Sl(r));let o=await this.executingQueryPromise,s=this.parseEngineResponse(o);if(s.errors)throw s.errors.length===1?this.buildQueryError(s.errors[0]):new U(JSON.stringify(s.errors),{clientVersion:this.config.clientVersion});let{batchResult:a,errors:l}=s;if(Array.isArray(a))return a.map(u=>u.errors&&u.errors.length>0?this.loggerRustPanic??this.buildQueryError(u.errors[0]):{data:u});throw l&&l.length===1?new Error(l[0].error):new Error(JSON.stringify(s))}buildQueryError(t){if(t.user_facing_error.is_panic)return new pe(xo(this,t.user_facing_error.message),this.config.clientVersion);let r=this.getExternalAdapterError(t.user_facing_error);return r?r.error:Ft(t,this.config.clientVersion,this.config.activeProvider)}getExternalAdapterError(t){if(t.error_code===$m&&this.config.adapter){let r=t.meta?.id;en(typeof r==\"number\",\"Malformed external JS error received from the engine\");let n=this.config.adapter.errorRegistry.consumeError(r);return en(n,\"External error with reported id was not registered\"),n}}async metrics(t){await this.start();let r=await this.engine.metrics(JSON.stringify(t));return t.format===\"prometheus\"?r:this.parseEngineResponse(r)}};function Um(e){return typeof e==\"object\"&&e!==null&&e.error_code!==void 0}function xo(e,t){return bl({binaryTarget:e.binaryTarget,title:t,version:e.config.clientVersion,engineVersion:e.versionInfo?.commit,database:e.config.activeProvider,query:e.lastQuery})}function _l({copyEngine:e=!0},t){let r;try{r=$t({inlineDatasources:t.inlineDatasources,overrideDatasources:t.overrideDatasources,env:{...t.env,...process.env},clientVersion:t.clientVersion})}catch{}let n=!!(r?.startsWith(\"prisma://\")||Ii(r));e&&n&&or(\"recommend--no-engine\",\"In production, we recommend using `prisma generate --no-engine` (See: `prisma generate --help`)\");let i=Et(t.generator),o=n||!e,s=!!t.adapter,a=i===\"library\",l=i===\"binary\",u=i===\"client\";if(o&&s||s&&!1){let c;throw e?r?.startsWith(\"prisma://\")?c=[\"Prisma Client was configured to use the `adapter` option but the URL was a `prisma://` URL.\",\"Please either use the `prisma://` URL or remove the `adapter` from the Prisma Client constructor.\"]:c=[\"Prisma Client was configured to use both the `adapter` and Accelerate, please chose one.\"]:c=[\"Prisma Client was configured to use the `adapter` option but `prisma generate` was run with `--no-engine`.\",\"Please run `prisma generate` without `--no-engine` to be able to use Prisma Client with the adapter.\"],new re(c.join(`\n`),{clientVersion:t.clientVersion})}return o?new Fr(t):a?new Bt(t):new Bt(t)}function Bn({generator:e}){return e?.previewFeatures??[]}var Dl=e=>({command:e});var Nl=e=>e.strings.reduce((t,r,n)=>`${t}@P${n}${r}`);function Ut(e){try{return Ll(e,\"fast\")}catch{return Ll(e,\"slow\")}}function Ll(e,t){return JSON.stringify(e.map(r=>Ml(r,t)))}function Ml(e,t){if(Array.isArray(e))return e.map(r=>Ml(r,t));if(typeof e==\"bigint\")return{prisma__type:\"bigint\",prisma__value:e.toString()};if(Tt(e))return{prisma__type:\"date\",prisma__value:e.toJSON()};if(Ce.isDecimal(e))return{prisma__type:\"decimal\",prisma__value:e.toJSON()};if(Buffer.isBuffer(e))return{prisma__type:\"bytes\",prisma__value:e.toString(\"base64\")};if(Qm(e))return{prisma__type:\"bytes\",prisma__value:Buffer.from(e).toString(\"base64\")};if(ArrayBuffer.isView(e)){let{buffer:r,byteOffset:n,byteLength:i}=e;return{prisma__type:\"bytes\",prisma__value:Buffer.from(r,n,i).toString(\"base64\")}}return typeof e==\"object\"&&t===\"slow\"?$l(e):e}function Qm(e){return e instanceof ArrayBuffer||e instanceof SharedArrayBuffer?!0:typeof e==\"object\"&&e!==null?e[Symbol.toStringTag]===\"ArrayBuffer\"||e[Symbol.toStringTag]===\"SharedArrayBuffer\":!1}function $l(e){if(typeof e!=\"object\"||e===null)return e;if(typeof e.toJSON==\"function\")return e.toJSON();if(Array.isArray(e))return e.map(Fl);let t={};for(let r of Object.keys(e))t[r]=Fl(e[r]);return t}function Fl(e){return typeof e==\"bigint\"?e.toString():$l(e)}var Gm=/^(\\s*alter\\s)/i,ql=M(\"prisma:client\");function Po(e,t,r,n){if(!(e!==\"postgresql\"&&e!==\"cockroachdb\")&&r.length>0&&Gm.exec(t))throw new Error(`Running ALTER using ${n} is not supported\nUsing the example below you can still execute your query with Prisma, but please note that it is vulnerable to SQL injection attacks and requires you to take care of input sanitization.\n\nExample:\n  await prisma.$executeRawUnsafe(\\`ALTER USER prisma WITH PASSWORD '\\${password}'\\`)\n\nMore Information: https://pris.ly/d/execute-raw\n`)}var vo=({clientMethod:e,activeProvider:t})=>r=>{let n=\"\",i;if(On(r))n=r.sql,i={values:Ut(r.values),__prismaRawParameters__:!0};else if(Array.isArray(r)){let[o,...s]=r;n=o,i={values:Ut(s||[]),__prismaRawParameters__:!0}}else switch(t){case\"sqlite\":case\"mysql\":{n=r.sql,i={values:Ut(r.values),__prismaRawParameters__:!0};break}case\"cockroachdb\":case\"postgresql\":case\"postgres\":{n=r.text,i={values:Ut(r.values),__prismaRawParameters__:!0};break}case\"sqlserver\":{n=Nl(r),i={values:Ut(r.values),__prismaRawParameters__:!0};break}default:throw new Error(`The ${t} provider does not support ${e}`)}return i?.values?ql(`prisma.${e}(${n}, ${i.values})`):ql(`prisma.${e}(${n})`),{query:n,parameters:i}},Vl={requestArgsToMiddlewareArgs(e){return[e.strings,...e.values]},middlewareArgsToRequestArgs(e){let[t,...r]=e;return new le(t,r)}},jl={requestArgsToMiddlewareArgs(e){return[e]},middlewareArgsToRequestArgs(e){return e[0]}};function To(e){return function(r,n){let i,o=(s=e)=>{try{return s===void 0||s?.kind===\"itx\"?i??=Bl(r(s)):Bl(r(s))}catch(a){return Promise.reject(a)}};return{get spec(){return n},then(s,a){return o().then(s,a)},catch(s){return o().catch(s)},finally(s){return o().finally(s)},requestTransaction(s){let a=o(s);return a.requestTransaction?a.requestTransaction(s):a},[Symbol.toStringTag]:\"PrismaPromise\"}}}function Bl(e){return typeof e.then==\"function\"?e:Promise.resolve(e)}var Jm=Ei.split(\".\")[0],Wm={isEnabled(){return!1},getTraceParent(){return\"00-10-10-00\"},dispatchEngineSpans(){},getActiveContext(){},runInChildSpan(e,t){return t()}},Co=class{isEnabled(){return this.getGlobalTracingHelper().isEnabled()}getTraceParent(t){return this.getGlobalTracingHelper().getTraceParent(t)}dispatchEngineSpans(t){return this.getGlobalTracingHelper().dispatchEngineSpans(t)}getActiveContext(){return this.getGlobalTracingHelper().getActiveContext()}runInChildSpan(t,r){return this.getGlobalTracingHelper().runInChildSpan(t,r)}getGlobalTracingHelper(){let t=globalThis[`V${Jm}_PRISMA_INSTRUMENTATION`],r=globalThis.PRISMA_INSTRUMENTATION;return t?.helper??r?.helper??Wm}};function Ul(){return new Co}function Ql(e,t=()=>{}){let r,n=new Promise(i=>r=i);return{then(i){return--e===0&&r(t()),i?.(n)}}}function Gl(e){return typeof e==\"string\"?e:e.reduce((t,r)=>{let n=typeof r==\"string\"?r:r.level;return n===\"query\"?t:t&&(r===\"info\"||t===\"info\")?\"info\":n},void 0)}var Un=class{constructor(){d(this,\"_middlewares\",[])}use(t){this._middlewares.push(t)}get(t){return this._middlewares[t]}has(t){return!!this._middlewares[t]}length(){return this._middlewares.length}};var Wl=D(Li());function Qn(e){return typeof e.batchRequestIdx==\"number\"}function Jl(e){if(e.action!==\"findUnique\"&&e.action!==\"findUniqueOrThrow\")return;let t=[];return e.modelName&&t.push(e.modelName),e.query.arguments&&t.push(Ro(e.query.arguments)),t.push(Ro(e.query.selection)),t.join(\"\")}function Ro(e){return`(${Object.keys(e).sort().map(r=>{let n=e[r];return typeof n==\"object\"&&n!==null?`(${r} ${Ro(n)})`:r}).join(\" \")})`}var Hm={aggregate:!1,aggregateRaw:!1,createMany:!0,createManyAndReturn:!0,createOne:!0,deleteMany:!0,deleteOne:!0,executeRaw:!0,findFirst:!1,findFirstOrThrow:!1,findMany:!1,findRaw:!1,findUnique:!1,findUniqueOrThrow:!1,groupBy:!1,queryRaw:!1,runCommandRaw:!0,updateMany:!0,updateManyAndReturn:!0,updateOne:!0,upsertOne:!0};function So(e){return Hm[e]}var Gn=class{constructor(t){this.options=t;d(this,\"batches\");d(this,\"tickActive\",!1);this.batches={}}request(t){let r=this.options.batchBy(t);return r?(this.batches[r]||(this.batches[r]=[],this.tickActive||(this.tickActive=!0,process.nextTick(()=>{this.dispatchBatches(),this.tickActive=!1}))),new Promise((n,i)=>{this.batches[r].push({request:t,resolve:n,reject:i})})):this.options.singleLoader(t)}dispatchBatches(){for(let t in this.batches){let r=this.batches[t];delete this.batches[t],r.length===1?this.options.singleLoader(r[0].request).then(n=>{n instanceof Error?r[0].reject(n):r[0].resolve(n)}).catch(n=>{r[0].reject(n)}):(r.sort((n,i)=>this.options.batchOrder(n.request,i.request)),this.options.batchLoader(r.map(n=>n.request)).then(n=>{if(n instanceof Error)for(let i=0;i<r.length;i++)r[i].reject(n);else for(let i=0;i<r.length;i++){let o=n[i];o instanceof Error?r[i].reject(o):r[i].resolve(o)}}).catch(n=>{for(let i=0;i<r.length;i++)r[i].reject(n)}))}}get[Symbol.toStringTag](){return\"DataLoader\"}};function dt(e,t){if(t===null)return t;switch(e){case\"bigint\":return BigInt(t);case\"bytes\":{let{buffer:r,byteOffset:n,byteLength:i}=Buffer.from(t,\"base64\");return new Uint8Array(r,n,i)}case\"decimal\":return new Ce(t);case\"datetime\":case\"date\":return new Date(t);case\"time\":return new Date(`1970-01-01T${t}Z`);case\"bigint-array\":return t.map(r=>dt(\"bigint\",r));case\"bytes-array\":return t.map(r=>dt(\"bytes\",r));case\"decimal-array\":return t.map(r=>dt(\"decimal\",r));case\"datetime-array\":return t.map(r=>dt(\"datetime\",r));case\"date-array\":return t.map(r=>dt(\"date\",r));case\"time-array\":return t.map(r=>dt(\"time\",r));default:return t}}function Jn(e){let t=[],r=Km(e);for(let n=0;n<e.rows.length;n++){let i=e.rows[n],o={...r};for(let s=0;s<i.length;s++)o[e.columns[s]]=dt(e.types[s],i[s]);t.push(o)}return t}function Km(e){let t={};for(let r=0;r<e.columns.length;r++)t[e.columns[r]]=null;return t}var Ym=M(\"prisma:client:request_handler\"),Wn=class{constructor(t,r){d(this,\"client\");d(this,\"dataloader\");d(this,\"logEmitter\");this.logEmitter=r,this.client=t,this.dataloader=new Gn({batchLoader:tl(async({requests:n,customDataProxyFetch:i})=>{let{transaction:o,otelParentCtx:s}=n[0],a=n.map(p=>p.protocolQuery),l=this.client._tracingHelper.getTraceParent(s),u=n.some(p=>So(p.protocolQuery.action));return(await this.client._engine.requestBatch(a,{traceparent:l,transaction:zm(o),containsWrite:u,customDataProxyFetch:i})).map((p,m)=>{if(p instanceof Error)return p;try{return this.mapQueryEngineResult(n[m],p)}catch(g){return g}})}),singleLoader:async n=>{let i=n.transaction?.kind===\"itx\"?Hl(n.transaction):void 0,o=await this.client._engine.request(n.protocolQuery,{traceparent:this.client._tracingHelper.getTraceParent(),interactiveTransaction:i,isWrite:So(n.protocolQuery.action),customDataProxyFetch:n.customDataProxyFetch});return this.mapQueryEngineResult(n,o)},batchBy:n=>n.transaction?.id?`transaction-${n.transaction.id}`:Jl(n.protocolQuery),batchOrder(n,i){return n.transaction?.kind===\"batch\"&&i.transaction?.kind===\"batch\"?n.transaction.index-i.transaction.index:0}})}async request(t){try{return await this.dataloader.request(t)}catch(r){let{clientMethod:n,callsite:i,transaction:o,args:s,modelName:a}=t;this.handleAndLogRequestError({error:r,clientMethod:n,callsite:i,transaction:o,args:s,modelName:a,globalOmit:t.globalOmit})}}mapQueryEngineResult({dataPath:t,unpacker:r},n){let i=n?.data,o=this.unpack(i,t,r);return process.env.PRISMA_CLIENT_GET_TIME?{data:o}:o}handleAndLogRequestError(t){try{this.handleRequestError(t)}catch(r){throw this.logEmitter&&this.logEmitter.emit(\"error\",{message:r.message,target:t.clientMethod,timestamp:new Date}),r}}handleRequestError({error:t,clientMethod:r,callsite:n,transaction:i,args:o,modelName:s,globalOmit:a}){if(Ym(t),Zm(t,i))throw t;if(t instanceof te&&Xm(t)){let u=Kl(t.meta);Cn({args:o,errors:[u],callsite:n,errorFormat:this.client._errorFormat,originalMethod:r,clientVersion:this.client._clientVersion,globalOmit:a})}let l=t.message;if(n&&(l=gn({callsite:n,originalMethod:r,isPanic:t.isPanic,showColors:this.client._errorFormat===\"pretty\",message:l})),l=this.sanitizeMessage(l),t.code){let u=s?{modelName:s,...t.meta}:t.meta;throw new te(l,{code:t.code,clientVersion:this.client._clientVersion,meta:u,batchRequestIdx:t.batchRequestIdx})}else{if(t.isPanic)throw new pe(l,this.client._clientVersion);if(t instanceof U)throw new U(l,{clientVersion:this.client._clientVersion,batchRequestIdx:t.batchRequestIdx});if(t instanceof C)throw new C(l,this.client._clientVersion);if(t instanceof pe)throw new pe(l,this.client._clientVersion)}throw t.clientVersion=this.client._clientVersion,t}sanitizeMessage(t){return this.client._errorFormat&&this.client._errorFormat!==\"pretty\"?(0,Wl.default)(t):t}unpack(t,r,n){if(!t||(t.data&&(t=t.data),!t))return t;let i=Object.keys(t)[0],o=Object.values(t)[0],s=r.filter(u=>u!==\"select\"&&u!==\"include\"),a=no(o,s),l=i===\"queryRaw\"?Jn(a):Pt(a);return n?n(l):l}get[Symbol.toStringTag](){return\"RequestHandler\"}};function zm(e){if(e){if(e.kind===\"batch\")return{kind:\"batch\",options:{isolationLevel:e.isolationLevel}};if(e.kind===\"itx\")return{kind:\"itx\",options:Hl(e)};Me(e,\"Unknown transaction kind\")}}function Hl(e){return{id:e.id,payload:e.payload}}function Zm(e,t){return Qn(e)&&t?.kind===\"batch\"&&e.batchRequestIdx!==t.index}function Xm(e){return e.code===\"P2009\"||e.code===\"P2012\"}function Kl(e){if(e.kind===\"Union\")return{kind:\"Union\",errors:e.errors.map(Kl)};if(Array.isArray(e.selectionPath)){let[,...t]=e.selectionPath;return{...e,selectionPath:t}}return e}var Yl=\"6.5.0\";var zl=Yl;var ru=D(Qi());var L=class extends Error{constructor(t){super(t+`\nRead more at https://pris.ly/d/client-constructor`),this.name=\"PrismaClientConstructorValidationError\"}get[Symbol.toStringTag](){return\"PrismaClientConstructorValidationError\"}};x(L,\"PrismaClientConstructorValidationError\");var Zl=[\"datasources\",\"datasourceUrl\",\"errorFormat\",\"adapter\",\"log\",\"transactionOptions\",\"omit\",\"__internal\"],Xl=[\"pretty\",\"colorless\",\"minimal\"],eu=[\"info\",\"query\",\"warn\",\"error\"],tf={datasources:(e,{datasourceNames:t})=>{if(e){if(typeof e!=\"object\"||Array.isArray(e))throw new L(`Invalid value ${JSON.stringify(e)} for \"datasources\" provided to PrismaClient constructor`);for(let[r,n]of Object.entries(e)){if(!t.includes(r)){let i=Qt(r,t)||` Available datasources: ${t.join(\", \")}`;throw new L(`Unknown datasource ${r} provided to PrismaClient constructor.${i}`)}if(typeof n!=\"object\"||Array.isArray(n))throw new L(`Invalid value ${JSON.stringify(e)} for datasource \"${r}\" provided to PrismaClient constructor.\nIt should have this form: { url: \"CONNECTION_STRING\" }`);if(n&&typeof n==\"object\")for(let[i,o]of Object.entries(n)){if(i!==\"url\")throw new L(`Invalid value ${JSON.stringify(e)} for datasource \"${r}\" provided to PrismaClient constructor.\nIt should have this form: { url: \"CONNECTION_STRING\" }`);if(typeof o!=\"string\")throw new L(`Invalid value ${JSON.stringify(o)} for datasource \"${r}\" provided to PrismaClient constructor.\nIt should have this form: { url: \"CONNECTION_STRING\" }`)}}}},adapter:(e,t)=>{if(!e&&Et(t.generator)===\"client\")throw new L('Using engine type \"client\" requires a driver adapter to be provided to PrismaClient constructor.');if(e===null)return;if(e===void 0)throw new L('\"adapter\" property must not be undefined, use null to conditionally disable driver adapters.');if(!Bn(t).includes(\"driverAdapters\"))throw new L('\"adapter\" property can only be provided to PrismaClient constructor when \"driverAdapters\" preview feature is enabled.');if(Et(t.generator)===\"binary\")throw new L('Cannot use a driver adapter with the \"binary\" Query Engine. Please use the \"library\" Query Engine.')},datasourceUrl:e=>{if(typeof e<\"u\"&&typeof e!=\"string\")throw new L(`Invalid value ${JSON.stringify(e)} for \"datasourceUrl\" provided to PrismaClient constructor.\nExpected string or undefined.`)},errorFormat:e=>{if(e){if(typeof e!=\"string\")throw new L(`Invalid value ${JSON.stringify(e)} for \"errorFormat\" provided to PrismaClient constructor.`);if(!Xl.includes(e)){let t=Qt(e,Xl);throw new L(`Invalid errorFormat ${e} provided to PrismaClient constructor.${t}`)}}},log:e=>{if(!e)return;if(!Array.isArray(e))throw new L(`Invalid value ${JSON.stringify(e)} for \"log\" provided to PrismaClient constructor.`);function t(r){if(typeof r==\"string\"&&!eu.includes(r)){let n=Qt(r,eu);throw new L(`Invalid log level \"${r}\" provided to PrismaClient constructor.${n}`)}}for(let r of e){t(r);let n={level:t,emit:i=>{let o=[\"stdout\",\"event\"];if(!o.includes(i)){let s=Qt(i,o);throw new L(`Invalid value ${JSON.stringify(i)} for \"emit\" in logLevel provided to PrismaClient constructor.${s}`)}}};if(r&&typeof r==\"object\")for(let[i,o]of Object.entries(r))if(n[i])n[i](o);else throw new L(`Invalid property ${i} for \"log\" provided to PrismaClient constructor`)}},transactionOptions:e=>{if(!e)return;let t=e.maxWait;if(t!=null&&t<=0)throw new L(`Invalid value ${t} for maxWait in \"transactionOptions\" provided to PrismaClient constructor. maxWait needs to be greater than 0`);let r=e.timeout;if(r!=null&&r<=0)throw new L(`Invalid value ${r} for timeout in \"transactionOptions\" provided to PrismaClient constructor. timeout needs to be greater than 0`)},omit:(e,t)=>{if(typeof e!=\"object\")throw new L('\"omit\" option is expected to be an object.');if(e===null)throw new L('\"omit\" option can not be `null`');let r=[];for(let[n,i]of Object.entries(e)){let o=nf(n,t.runtimeDataModel);if(!o){r.push({kind:\"UnknownModel\",modelKey:n});continue}for(let[s,a]of Object.entries(i)){let l=o.fields.find(u=>u.name===s);if(!l){r.push({kind:\"UnknownField\",modelKey:n,fieldName:s});continue}if(l.relationName){r.push({kind:\"RelationInOmit\",modelKey:n,fieldName:s});continue}typeof a!=\"boolean\"&&r.push({kind:\"InvalidFieldValue\",modelKey:n,fieldName:s})}}if(r.length>0)throw new L(of(e,r))},__internal:e=>{if(!e)return;let t=[\"debug\",\"engine\",\"configOverride\"];if(typeof e!=\"object\")throw new L(`Invalid value ${JSON.stringify(e)} for \"__internal\" to PrismaClient constructor`);for(let[r]of Object.entries(e))if(!t.includes(r)){let n=Qt(r,t);throw new L(`Invalid property ${JSON.stringify(r)} for \"__internal\" provided to PrismaClient constructor.${n}`)}}};function nu(e,t){for(let[r,n]of Object.entries(e)){if(!Zl.includes(r)){let i=Qt(r,Zl);throw new L(`Unknown property ${r} provided to PrismaClient constructor.${i}`)}tf[r](n,t)}if(e.datasourceUrl&&e.datasources)throw new L('Can not use \"datasourceUrl\" and \"datasources\" options at the same time. Pick one of them')}function Qt(e,t){if(t.length===0||typeof e!=\"string\")return\"\";let r=rf(e,t);return r?` Did you mean \"${r}\"?`:\"\"}function rf(e,t){if(t.length===0)return null;let r=t.map(i=>({value:i,distance:(0,ru.default)(e,i)}));r.sort((i,o)=>i.distance<o.distance?-1:1);let n=r[0];return n.distance<3?n.value:null}function nf(e,t){return tu(t.models,e)??tu(t.types,e)}function tu(e,t){let r=Object.keys(e).find(n=>vt(n)===t);if(r)return e[r]}function of(e,t){let r=Ot(e);for(let o of t)switch(o.kind){case\"UnknownModel\":r.arguments.getField(o.modelKey)?.markAsError(),r.addErrorMessage(()=>`Unknown model name: ${o.modelKey}.`);break;case\"UnknownField\":r.arguments.getDeepField([o.modelKey,o.fieldName])?.markAsError(),r.addErrorMessage(()=>`Model \"${o.modelKey}\" does not have a field named \"${o.fieldName}\".`);break;case\"RelationInOmit\":r.arguments.getDeepField([o.modelKey,o.fieldName])?.markAsError(),r.addErrorMessage(()=>'Relations are already excluded by default and can not be specified in \"omit\".');break;case\"InvalidFieldValue\":r.arguments.getDeepFieldValue([o.modelKey,o.fieldName])?.markAsError(),r.addErrorMessage(()=>\"Omit field option value must be a boolean.\");break}let{message:n,args:i}=Tn(r,\"colorless\");return`Error validating \"omit\" option:\n\n${i}\n\n${n}`}function iu(e){return e.length===0?Promise.resolve([]):new Promise((t,r)=>{let n=new Array(e.length),i=null,o=!1,s=0,a=()=>{o||(s++,s===e.length&&(o=!0,i?r(i):t(n)))},l=u=>{o||(o=!0,r(u))};for(let u=0;u<e.length;u++)e[u].then(c=>{n[u]=c,a()},c=>{if(!Qn(c)){l(c);return}c.batchRequestIdx===u?l(c):(i||(i=c),a())})})}var rt=M(\"prisma:client\");typeof globalThis==\"object\"&&(globalThis.NODE_CLIENT=!0);var sf={requestArgsToMiddlewareArgs:e=>e,middlewareArgsToRequestArgs:e=>e},af=Symbol.for(\"prisma.client.transaction.id\"),lf={id:0,nextId(){return++this.id}};function cu(e){class t{constructor(n){d(this,\"_originalClient\",this);d(this,\"_runtimeDataModel\");d(this,\"_requestHandler\");d(this,\"_connectionPromise\");d(this,\"_disconnectionPromise\");d(this,\"_engineConfig\");d(this,\"_accelerateEngineConfig\");d(this,\"_clientVersion\");d(this,\"_errorFormat\");d(this,\"_tracingHelper\");d(this,\"_middlewares\",new Un);d(this,\"_previewFeatures\");d(this,\"_activeProvider\");d(this,\"_globalOmit\");d(this,\"_extensions\");d(this,\"_engine\");d(this,\"_appliedParent\");d(this,\"_createPrismaPromise\",To());d(this,\"$metrics\",new Dt(this));d(this,\"$extends\",Ja);e=n?.__internal?.configOverride?.(e)??e,sl(e),n&&nu(n,e);let i=new lu.EventEmitter().on(\"error\",()=>{});this._extensions=_t.empty(),this._previewFeatures=Bn(e),this._clientVersion=e.clientVersion??zl,this._activeProvider=e.activeProvider,this._globalOmit=n?.omit,this._tracingHelper=Ul();let o={rootEnvPath:e.relativeEnvPaths.rootEnvPath&&Mr.default.resolve(e.dirname,e.relativeEnvPaths.rootEnvPath),schemaEnvPath:e.relativeEnvPaths.schemaEnvPath&&Mr.default.resolve(e.dirname,e.relativeEnvPaths.schemaEnvPath)},s;if(n?.adapter){s=Xn(n.adapter);let l=e.activeProvider===\"postgresql\"?\"postgres\":e.activeProvider;if(s.provider!==l)throw new C(`The Driver Adapter \\`${s.adapterName}\\`, based on \\`${s.provider}\\`, is not compatible with the provider \\`${l}\\` specified in the Prisma schema.`,this._clientVersion);if(n.datasources||n.datasourceUrl!==void 0)throw new C(\"Custom datasource configuration is not compatible with Prisma Driver Adapters. Please define the database connection string directly in the Driver Adapter configuration.\",this._clientVersion)}let a=!s&&er(o,{conflictCheck:\"none\"})||e.injectableEdgeEnv?.();try{let l=n??{},u=l.__internal??{},c=u.debug===!0;c&&M.enable(\"prisma:client\");let p=Mr.default.resolve(e.dirname,e.relativePath);uu.default.existsSync(p)||(p=e.dirname),rt(\"dirname\",e.dirname),rt(\"relativePath\",e.relativePath),rt(\"cwd\",p);let m=u.engine||{};if(l.errorFormat?this._errorFormat=l.errorFormat:process.env.NODE_ENV===\"production\"?this._errorFormat=\"minimal\":process.env.NO_COLOR?this._errorFormat=\"colorless\":this._errorFormat=\"colorless\",this._runtimeDataModel=e.runtimeDataModel,this._engineConfig={cwd:p,dirname:e.dirname,enableDebugLogs:c,allowTriggerPanic:m.allowTriggerPanic,datamodelPath:Mr.default.join(e.dirname,e.filename??\"schema.prisma\"),prismaPath:m.binaryPath??void 0,engineEndpoint:m.endpoint,generator:e.generator,showColors:this._errorFormat===\"pretty\",logLevel:l.log&&Gl(l.log),logQueries:l.log&&!!(typeof l.log==\"string\"?l.log===\"query\":l.log.find(g=>typeof g==\"string\"?g===\"query\":g.level===\"query\")),env:a?.parsed??{},flags:[],engineWasm:e.engineWasm,compilerWasm:e.compilerWasm,clientVersion:e.clientVersion,engineVersion:e.engineVersion,previewFeatures:this._previewFeatures,activeProvider:e.activeProvider,inlineSchema:e.inlineSchema,overrideDatasources:al(l,e.datasourceNames),inlineDatasources:e.inlineDatasources,inlineSchemaHash:e.inlineSchemaHash,tracingHelper:this._tracingHelper,transactionOptions:{maxWait:l.transactionOptions?.maxWait??2e3,timeout:l.transactionOptions?.timeout??5e3,isolationLevel:l.transactionOptions?.isolationLevel},logEmitter:i,isBundled:e.isBundled,adapter:s},this._accelerateEngineConfig={...this._engineConfig,accelerateUtils:{resolveDatasourceUrl:$t,getBatchRequestPayload:Lt,prismaGraphQLToJSError:Ft,PrismaClientUnknownRequestError:U,PrismaClientInitializationError:C,PrismaClientKnownRequestError:te,debug:M(\"prisma:client:accelerateEngine\"),engineVersion:su.version,clientVersion:e.clientVersion}},rt(\"clientVersion\",e.clientVersion),this._engine=_l(e,this._engineConfig),this._requestHandler=new Wn(this,i),l.log)for(let g of l.log){let h=typeof g==\"string\"?g:g.emit===\"stdout\"?g.level:null;h&&this.$on(h,y=>{ir.log(`${ir.tags[h]??\"\"}`,y.message||y.query)})}}catch(l){throw l.clientVersion=this._clientVersion,l}return this._appliedParent=xr(this)}get[Symbol.toStringTag](){return\"PrismaClient\"}$use(n){this._middlewares.use(n)}$on(n,i){return n===\"beforeExit\"?this._engine.onBeforeExit(i):n&&this._engineConfig.logEmitter.on(n,i),this}$connect(){try{return this._engine.start()}catch(n){throw n.clientVersion=this._clientVersion,n}}async $disconnect(){try{await this._engine.stop()}catch(n){throw n.clientVersion=this._clientVersion,n}finally{Vo()}}$executeRawInternal(n,i,o,s){let a=this._activeProvider;return this._request({action:\"executeRaw\",args:o,transaction:n,clientMethod:i,argsMapper:vo({clientMethod:i,activeProvider:a}),callsite:Xe(this._errorFormat),dataPath:[],middlewareArgsMapper:s})}$executeRaw(n,...i){return this._createPrismaPromise(o=>{if(n.raw!==void 0||n.sql!==void 0){let[s,a]=ou(n,i);return Po(this._activeProvider,s.text,s.values,Array.isArray(n)?\"prisma.$executeRaw`<SQL>`\":\"prisma.$executeRaw(sql`<SQL>`)\"),this.$executeRawInternal(o,\"$executeRaw\",s,a)}throw new re(\"`$executeRaw` is a tag function, please use it like the following:\\n```\\nconst result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`\\n```\\n\\nOr read our docs at https://www.prisma.io/docs/concepts/components/prisma-client/raw-database-access#executeraw\\n\",{clientVersion:this._clientVersion})})}$executeRawUnsafe(n,...i){return this._createPrismaPromise(o=>(Po(this._activeProvider,n,i,\"prisma.$executeRawUnsafe(<SQL>, [...values])\"),this.$executeRawInternal(o,\"$executeRawUnsafe\",[n,...i])))}$runCommandRaw(n){if(e.activeProvider!==\"mongodb\")throw new re(`The ${e.activeProvider} provider does not support $runCommandRaw. Use the mongodb provider.`,{clientVersion:this._clientVersion});return this._createPrismaPromise(i=>this._request({args:n,clientMethod:\"$runCommandRaw\",dataPath:[],action:\"runCommandRaw\",argsMapper:Dl,callsite:Xe(this._errorFormat),transaction:i}))}async $queryRawInternal(n,i,o,s){let a=this._activeProvider;return this._request({action:\"queryRaw\",args:o,transaction:n,clientMethod:i,argsMapper:vo({clientMethod:i,activeProvider:a}),callsite:Xe(this._errorFormat),dataPath:[],middlewareArgsMapper:s})}$queryRaw(n,...i){return this._createPrismaPromise(o=>{if(n.raw!==void 0||n.sql!==void 0)return this.$queryRawInternal(o,\"$queryRaw\",...ou(n,i));throw new re(\"`$queryRaw` is a tag function, please use it like the following:\\n```\\nconst result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`\\n```\\n\\nOr read our docs at https://www.prisma.io/docs/concepts/components/prisma-client/raw-database-access#queryraw\\n\",{clientVersion:this._clientVersion})})}$queryRawTyped(n){return this._createPrismaPromise(i=>{if(!this._hasPreviewFlag(\"typedSql\"))throw new re(\"`typedSql` preview feature must be enabled in order to access $queryRawTyped API\",{clientVersion:this._clientVersion});return this.$queryRawInternal(i,\"$queryRawTyped\",n)})}$queryRawUnsafe(n,...i){return this._createPrismaPromise(o=>this.$queryRawInternal(o,\"$queryRawUnsafe\",[n,...i]))}_transactionWithArray({promises:n,options:i}){let o=lf.nextId(),s=Ql(n.length),a=n.map((l,u)=>{if(l?.[Symbol.toStringTag]!==\"PrismaPromise\")throw new Error(\"All elements of the array need to be Prisma Client promises. Hint: Please make sure you are not awaiting the Prisma client calls you intended to pass in the $transaction function.\");let c=i?.isolationLevel??this._engineConfig.transactionOptions.isolationLevel,p={kind:\"batch\",id:o,index:u,isolationLevel:c,lock:s};return l.requestTransaction?.(p)??l});return iu(a)}async _transactionWithCallback({callback:n,options:i}){let o={traceparent:this._tracingHelper.getTraceParent()},s={maxWait:i?.maxWait??this._engineConfig.transactionOptions.maxWait,timeout:i?.timeout??this._engineConfig.transactionOptions.timeout,isolationLevel:i?.isolationLevel??this._engineConfig.transactionOptions.isolationLevel},a=await this._engine.transaction(\"start\",o,s),l;try{let u={kind:\"itx\",...a};l=await n(this._createItxClient(u)),await this._engine.transaction(\"commit\",o,a)}catch(u){throw await this._engine.transaction(\"rollback\",o,a).catch(()=>{}),u}return l}_createItxClient(n){return be(xr(be(Ga(this),[oe(\"_appliedParent\",()=>this._appliedParent._createItxClient(n)),oe(\"_createPrismaPromise\",()=>To(n)),oe(af,()=>n.id)])),[Nt(Ya)])}$transaction(n,i){let o;typeof n==\"function\"?this._engineConfig.adapter?.adapterName===\"@prisma/adapter-d1\"?o=()=>{throw new Error(\"Cloudflare D1 does not support interactive transactions. We recommend you to refactor your queries with that limitation in mind, and use batch transactions with `prisma.$transactions([])` where applicable.\")}:o=()=>this._transactionWithCallback({callback:n,options:i}):o=()=>this._transactionWithArray({promises:n,options:i});let s={name:\"transaction\",attributes:{method:\"$transaction\"}};return this._tracingHelper.runInChildSpan(s,o)}_request(n){n.otelParentCtx=this._tracingHelper.getActiveContext();let i=n.middlewareArgsMapper??sf,o={args:i.requestArgsToMiddlewareArgs(n.args),dataPath:n.dataPath,runInTransaction:!!n.transaction,action:n.action,model:n.model},s={middleware:{name:\"middleware\",middleware:!0,attributes:{method:\"$use\"},active:!1},operation:{name:\"operation\",attributes:{method:o.action,model:o.model,name:o.model?`${o.model}.${o.action}`:o.action}}},a=-1,l=async u=>{let c=this._middlewares.get(++a);if(c)return this._tracingHelper.runInChildSpan(s.middleware,O=>c(u,T=>(O?.end(),l(T))));let{runInTransaction:p,args:m,...g}=u,h={...n,...g};m&&(h.args=i.middlewareArgsToRequestArgs(m)),n.transaction!==void 0&&p===!1&&delete h.transaction;let y=await el(this,h);return h.model?Ka({result:y,modelName:h.model,args:h.args,extensions:this._extensions,runtimeDataModel:this._runtimeDataModel,globalOmit:this._globalOmit}):y};return this._tracingHelper.runInChildSpan(s.operation,()=>new au.AsyncResource(\"prisma-client-request\").runInAsyncScope(()=>l(o)))}async _executeRequest({args:n,clientMethod:i,dataPath:o,callsite:s,action:a,model:l,argsMapper:u,transaction:c,unpacker:p,otelParentCtx:m,customDataProxyFetch:g}){try{n=u?u(n):n;let h={name:\"serialize\"},y=this._tracingHelper.runInChildSpan(h,()=>In({modelName:l,runtimeDataModel:this._runtimeDataModel,action:a,args:n,clientMethod:i,callsite:s,extensions:this._extensions,errorFormat:this._errorFormat,clientVersion:this._clientVersion,previewFeatures:this._previewFeatures,globalOmit:this._globalOmit}));return M.enabled(\"prisma:client\")&&(rt(\"Prisma Client call:\"),rt(`prisma.${i}(${Na(n)})`),rt(\"Generated request:\"),rt(JSON.stringify(y,null,2)+`\n`)),c?.kind===\"batch\"&&await c.lock,this._requestHandler.request({protocolQuery:y,modelName:l,action:a,clientMethod:i,dataPath:o,callsite:s,args:n,extensions:this._extensions,transaction:c,unpacker:p,otelParentCtx:m,otelChildCtx:this._tracingHelper.getActiveContext(),globalOmit:this._globalOmit,customDataProxyFetch:g})}catch(h){throw h.clientVersion=this._clientVersion,h}}_hasPreviewFlag(n){return!!this._engineConfig.previewFeatures?.includes(n)}$applyPendingMigrations(){return this._engine.applyPendingMigrations()}}return t}function ou(e,t){return uf(e)?[new le(e,t),Vl]:[e,jl]}function uf(e){return Array.isArray(e)&&Array.isArray(e.raw)}var cf=new Set([\"toJSON\",\"$$typeof\",\"asymmetricMatch\",Symbol.iterator,Symbol.toStringTag,Symbol.isConcatSpreadable,Symbol.toPrimitive]);function pu(e){return new Proxy(e,{get(t,r){if(r in t)return t[r];if(!cf.has(r))throw new TypeError(`Invalid enum value: ${String(r)}`)}})}function du(e){er(e,{conflictCheck:\"warn\"})}0&&(module.exports={Debug,Decimal,Extensions,MetricsClient,PrismaClientInitializationError,PrismaClientKnownRequestError,PrismaClientRustPanicError,PrismaClientUnknownRequestError,PrismaClientValidationError,Public,Sql,createParam,defineDmmfProperty,deserializeJsonResponse,deserializeRawResult,dmmfToRuntimeDataModel,empty,getPrismaClient,getRuntime,join,makeStrictEnum,makeTypedQueryFactory,objectEnumValues,raw,serializeJsonQuery,skip,sqltag,warnEnvConflicts,warnOnce});\n/*! Bundled license information:\n\ndecimal.js/decimal.mjs:\n  (*!\n   *  decimal.js v10.5.0\n   *  An arbitrary-precision Decimal type for JavaScript.\n   *  https://github.com/MikeMcl/decimal.js\n   *  Copyright (c) 2025 Michael Mclaughlin <M8ch88l@gmail.com>\n   *  MIT Licence\n   *)\n*/\n//# sourceMappingURL=library.js.map\n","\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nconst {\n  PrismaClientKnownRequestError,\n  PrismaClientUnknownRequestError,\n  PrismaClientRustPanicError,\n  PrismaClientInitializationError,\n  PrismaClientValidationError,\n  getPrismaClient,\n  sqltag,\n  empty,\n  join,\n  raw,\n  skip,\n  Decimal,\n  Debug,\n  objectEnumValues,\n  makeStrictEnum,\n  Extensions,\n  warnOnce,\n  defineDmmfProperty,\n  Public,\n  getRuntime,\n  createParam,\n} = require('@prisma/client/runtime/library.js')\n\n\nconst Prisma = {}\n\nexports.Prisma = Prisma\nexports.$Enums = {}\n\n/**\n * Prisma Client JS version: 6.5.0\n * Query Engine version: 173f8d54f8d52e692c7e27e72a88314ec7aeff60\n */\nPrisma.prismaVersion = {\n  client: \"6.5.0\",\n  engine: \"173f8d54f8d52e692c7e27e72a88314ec7aeff60\"\n}\n\nPrisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;\nPrisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError\nPrisma.PrismaClientRustPanicError = PrismaClientRustPanicError\nPrisma.PrismaClientInitializationError = PrismaClientInitializationError\nPrisma.PrismaClientValidationError = PrismaClientValidationError\nPrisma.Decimal = Decimal\n\n/**\n * Re-export of sql-template-tag\n */\nPrisma.sql = sqltag\nPrisma.empty = empty\nPrisma.join = join\nPrisma.raw = raw\nPrisma.validator = Public.validator\n\n/**\n* Extensions\n*/\nPrisma.getExtensionContext = Extensions.getExtensionContext\nPrisma.defineExtension = Extensions.defineExtension\n\n/**\n * Shorthand utilities for JSON filtering\n */\nPrisma.DbNull = objectEnumValues.instances.DbNull\nPrisma.JsonNull = objectEnumValues.instances.JsonNull\nPrisma.AnyNull = objectEnumValues.instances.AnyNull\n\nPrisma.NullTypes = {\n  DbNull: objectEnumValues.classes.DbNull,\n  JsonNull: objectEnumValues.classes.JsonNull,\n  AnyNull: objectEnumValues.classes.AnyNull\n}\n\n\n\n\n  const path = require('path')\n\n/**\n * Enums\n */\nexports.Prisma.TransactionIsolationLevel = makeStrictEnum({\n  ReadUncommitted: 'ReadUncommitted',\n  ReadCommitted: 'ReadCommitted',\n  RepeatableRead: 'RepeatableRead',\n  Serializable: 'Serializable'\n});\n\nexports.Prisma.AccountScalarFieldEnum = {\n  id: 'id',\n  userId: 'userId',\n  type: 'type',\n  provider: 'provider',\n  providerAccountId: 'providerAccountId',\n  refresh_token: 'refresh_token',\n  access_token: 'access_token',\n  expires_at: 'expires_at',\n  token_type: 'token_type',\n  scope: 'scope',\n  id_token: 'id_token',\n  session_state: 'session_state'\n};\n\nexports.Prisma.SessionScalarFieldEnum = {\n  id: 'id',\n  sessionToken: 'sessionToken',\n  userId: 'userId',\n  expires: 'expires'\n};\n\nexports.Prisma.UserScalarFieldEnum = {\n  id: 'id',\n  name: 'name',\n  email: 'email',\n  emailVerified: 'emailVerified',\n  image: 'image',\n  password: 'password',\n  role: 'role',\n  organization: 'organization',\n  department: 'department',\n  phone: 'phone',\n  createdAt: 'createdAt',\n  updatedAt: 'updatedAt'\n};\n\nexports.Prisma.MetadataScalarFieldEnum = {\n  id: 'id',\n  title: 'title',\n  author: 'author',\n  organization: 'organization',\n  dateFrom: 'dateFrom',\n  dateTo: 'dateTo',\n  frameworkType: 'frameworkType',\n  categories: 'categories',\n  numFeatures: 'numFeatures',\n  softwareReqs: 'softwareReqs',\n  updateCycle: 'updateCycle',\n  lastUpdate: 'lastUpdate',\n  nextUpdate: 'nextUpdate',\n  dataType: 'dataType',\n  dataName: 'dataName',\n  cloudCoverPercentage: 'cloudCoverPercentage',\n  productionDate: 'productionDate',\n  fundamentalDatasets: 'fundamentalDatasets',\n  abstract: 'abstract',\n  purpose: 'purpose',\n  thumbnailUrl: 'thumbnailUrl',\n  imageName: 'imageName',\n  coordinateUnit: 'coordinateUnit',\n  minLatitude: 'minLatitude',\n  minLongitude: 'minLongitude',\n  maxLatitude: 'maxLatitude',\n  maxLongitude: 'maxLongitude',\n  coordinateSystem: 'coordinateSystem',\n  projection: 'projection',\n  scale: 'scale',\n  resolution: 'resolution',\n  accuracyLevel: 'accuracyLevel',\n  completeness: 'completeness',\n  consistencyCheck: 'consistencyCheck',\n  validationStatus: 'validationStatus',\n  fileFormat: 'fileFormat',\n  fileSize: 'fileSize',\n  country: 'country',\n  geopoliticalZone: 'geopoliticalZone',\n  state: 'state',\n  lga: 'lga',\n  townCity: 'townCity',\n  assessment: 'assessment',\n  updateFrequency: 'updateFrequency',\n  accessConstraints: 'accessConstraints',\n  useConstraints: 'useConstraints',\n  otherConstraints: 'otherConstraints',\n  accessRestrictions: 'accessRestrictions',\n  licenseType: 'licenseType',\n  usageTerms: 'usageTerms',\n  attributionRequirements: 'attributionRequirements',\n  distributionFormat: 'distributionFormat',\n  accessMethod: 'accessMethod',\n  downloadUrl: 'downloadUrl',\n  apiEndpoint: 'apiEndpoint',\n  metadataCreationDate: 'metadataCreationDate',\n  metadataReviewDate: 'metadataReviewDate',\n  metadataContactName: 'metadataContactName',\n  metadataContactAddress: 'metadataContactAddress',\n  metadataContactEmail: 'metadataContactEmail',\n  metadataContactPhone: 'metadataContactPhone',\n  logicalConsistencyReport: 'logicalConsistencyReport',\n  completenessReport: 'completenessReport',\n  attributeAccuracyReport: 'attributeAccuracyReport',\n  positionalAccuracy: 'positionalAccuracy',\n  sourceInformation: 'sourceInformation',\n  processingDescription: 'processingDescription',\n  softwareVersion: 'softwareVersion',\n  processedDate: 'processedDate',\n  processorName: 'processorName',\n  processorEmail: 'processorEmail',\n  processorAddress: 'processorAddress',\n  distributorName: 'distributorName',\n  distributorAddress: 'distributorAddress',\n  distributorEmail: 'distributorEmail',\n  distributorPhone: 'distributorPhone',\n  distributorWebLink: 'distributorWebLink',\n  distributorSocialMedia: 'distributorSocialMedia',\n  isCustodian: 'isCustodian',\n  custodianName: 'custodianName',\n  custodianContact: 'custodianContact',\n  distributionLiability: 'distributionLiability',\n  customOrderProcess: 'customOrderProcess',\n  technicalPrerequisites: 'technicalPrerequisites',\n  fees: 'fees',\n  turnaroundTime: 'turnaroundTime',\n  orderingInstructions: 'orderingInstructions',\n  maximumResponseTime: 'maximumResponseTime',\n  contactPerson: 'contactPerson',\n  email: 'email',\n  department: 'department',\n  userId: 'userId',\n  createdAt: 'createdAt',\n  updatedAt: 'updatedAt'\n};\n\nexports.Prisma.VerificationTokenScalarFieldEnum = {\n  identifier: 'identifier',\n  token: 'token',\n  expires: 'expires'\n};\n\nexports.Prisma.SettingsScalarFieldEnum = {\n  id: 'id',\n  siteName: 'siteName',\n  siteDescription: 'siteDescription',\n  supportEmail: 'supportEmail',\n  maxUploadSize: 'maxUploadSize',\n  defaultLanguage: 'defaultLanguage',\n  maintenanceMode: 'maintenanceMode',\n  enableRegistration: 'enableRegistration',\n  requireEmailVerification: 'requireEmailVerification',\n  metadataValidation: 'metadataValidation',\n  autoBackup: 'autoBackup',\n  backupFrequency: 'backupFrequency',\n  storageProvider: 'storageProvider',\n  apiRateLimit: 'apiRateLimit',\n  updatedAt: 'updatedAt'\n};\n\nexports.Prisma.DraftScalarFieldEnum = {\n  id: 'id',\n  userId: 'userId',\n  title: 'title',\n  data: 'data',\n  lastUpdated: 'lastUpdated',\n  createdAt: 'createdAt'\n};\n\nexports.Prisma.SortOrder = {\n  asc: 'asc',\n  desc: 'desc'\n};\n\nexports.Prisma.NullableJsonNullValueInput = {\n  DbNull: Prisma.DbNull,\n  JsonNull: Prisma.JsonNull\n};\n\nexports.Prisma.JsonNullValueInput = {\n  JsonNull: Prisma.JsonNull\n};\n\nexports.Prisma.QueryMode = {\n  default: 'default',\n  insensitive: 'insensitive'\n};\n\nexports.Prisma.NullsOrder = {\n  first: 'first',\n  last: 'last'\n};\n\nexports.Prisma.JsonNullValueFilter = {\n  DbNull: Prisma.DbNull,\n  JsonNull: Prisma.JsonNull,\n  AnyNull: Prisma.AnyNull\n};\nexports.UserRole = exports.$Enums.UserRole = {\n  USER: 'USER',\n  ADMIN: 'ADMIN',\n  NODE_OFFICER: 'NODE_OFFICER'\n};\n\nexports.Prisma.ModelName = {\n  Account: 'Account',\n  Session: 'Session',\n  User: 'User',\n  Metadata: 'Metadata',\n  VerificationToken: 'VerificationToken',\n  Settings: 'Settings',\n  Draft: 'Draft'\n};\n/**\n * Create the Client\n */\nconst config = {\n  \"generator\": {\n    \"name\": \"client\",\n    \"provider\": {\n      \"fromEnvVar\": null,\n      \"value\": \"prisma-client-js\"\n    },\n    \"output\": {\n      \"value\": \"/Users/yakky/Dev/ngdi-v1/node_modules/@prisma/client\",\n      \"fromEnvVar\": null\n    },\n    \"config\": {\n      \"engineType\": \"library\"\n    },\n    \"binaryTargets\": [\n      {\n        \"fromEnvVar\": null,\n        \"value\": \"darwin\",\n        \"native\": true\n      }\n    ],\n    \"previewFeatures\": [],\n    \"sourceFilePath\": \"/Users/yakky/Dev/ngdi-v1/prisma/schema.prisma\"\n  },\n  \"relativeEnvPaths\": {\n    \"rootEnvPath\": null,\n    \"schemaEnvPath\": \"../../../.env\"\n  },\n  \"relativePath\": \"../../../prisma\",\n  \"clientVersion\": \"6.5.0\",\n  \"engineVersion\": \"173f8d54f8d52e692c7e27e72a88314ec7aeff60\",\n  \"datasourceNames\": [\n    \"db\"\n  ],\n  \"activeProvider\": \"postgresql\",\n  \"postinstall\": false,\n  \"inlineDatasources\": {\n    \"db\": {\n      \"url\": {\n        \"fromEnvVar\": \"DATABASE_URL\",\n        \"value\": null\n      }\n    }\n  },\n  \"inlineSchema\": \"// This is your Prisma schema file,\\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\\n\\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\\n\\ngenerator client {\\n  provider = \\\"prisma-client-js\\\"\\n}\\n\\ndatasource db {\\n  provider  = \\\"postgresql\\\"\\n  url       = env(\\\"DATABASE_URL\\\")\\n  directUrl = env(\\\"DIRECT_URL\\\")\\n}\\n\\n/// Authentication account information for OAuth providers\\nmodel Account {\\n  /// Unique identifier for the account\\n  id                String  @id @default(cuid())\\n  /// Reference to the user who owns this account\\n  userId            String\\n  /// Type of the account (oauth, email, etc.)\\n  type              String\\n  /// OAuth provider name\\n  provider          String\\n  /// Account ID from the provider\\n  providerAccountId String\\n  /// OAuth refresh token\\n  refresh_token     String?\\n  /// OAuth access token\\n  access_token      String?\\n  /// Token expiration timestamp\\n  expires_at        Int?\\n  /// OAuth token type\\n  token_type        String?\\n  /// OAuth scope\\n  scope             String?\\n  /// OAuth ID token\\n  id_token          String?\\n  /// OAuth session state\\n  session_state     String?\\n\\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\\n\\n  @@unique([provider, providerAccountId])\\n}\\n\\n/// User session information\\nmodel Session {\\n  /// Unique identifier for the session\\n  id           String   @id @default(cuid())\\n  /// Session token used for authentication\\n  sessionToken String   @unique\\n  /// Reference to the user who owns this session\\n  userId       String\\n  /// Session expiration timestamp\\n  expires      DateTime\\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\\n}\\n\\n/// User account information\\nmodel User {\\n  /// Unique identifier for the user\\n  id            String    @id @default(uuid())\\n  /// User's full name\\n  name          String?\\n  /// User's email address\\n  email         String    @unique\\n  /// Timestamp of email verification\\n  emailVerified DateTime?\\n  /// User's profile image URL\\n  image         String?\\n  /// Hashed password for local authentication\\n  password      String\\n  /// User's role in the system\\n  role          UserRole  @default(USER)\\n  /// User's organization name\\n  organization  String?\\n  /// User's department within the organization\\n  department    String?\\n  /// User's contact phone number\\n  phone         String?\\n\\n  accounts  Account[]\\n  sessions  Session[]\\n  metadata  Metadata[]\\n  drafts    Draft[]\\n  createdAt DateTime   @default(now())\\n  updatedAt DateTime   @updatedAt\\n}\\n\\n/// User roles for access control\\nenum UserRole {\\n  /// Regular user with basic access\\n  USER\\n  /// System administrator with full access\\n  ADMIN\\n  /// Node officer with specific privileges\\n  NODE_OFFICER\\n}\\n\\n/// Geospatial metadata information following NGDI standards\\nmodel Metadata {\\n  /// Unique identifier for the metadata entry\\n  id String @id @default(uuid())\\n\\n  // Legacy fields from original Metadata model\\n  /// Title of the dataset (legacy field - use dataName instead)\\n  title         String\\n  /// Author of the dataset (legacy field)\\n  author        String?\\n  /// Organization name (legacy field)\\n  organization  String?\\n  /// Start date of the dataset (legacy field)\\n  dateFrom      String?\\n  /// End date of the dataset (legacy field)\\n  dateTo        String?\\n  /// Framework type (legacy field - use dataType instead)\\n  frameworkType String?\\n  /// Categories of the dataset (legacy field)\\n  categories    String[]  @default([])\\n  /// Number of features (legacy field)\\n  numFeatures   Int?\\n  /// Software requirements (legacy field - use technicalPrerequisites instead)\\n  softwareReqs  String?\\n  /// Update cycle (legacy field - use updateFrequency instead)\\n  updateCycle   String?\\n  /// Last update date (legacy field)\\n  lastUpdate    DateTime?\\n  /// Next update date (legacy field)\\n  nextUpdate    DateTime?\\n\\n  // Form 1: General Information\\n  // Data Information\\n  /// Type of data (Raster, Vector, Table)\\n  dataType             String?\\n  /// Name of the dataset\\n  dataName             String\\n  /// Percentage of cloud cover for imagery\\n  cloudCoverPercentage String?\\n  /// Date when the dataset was produced\\n  productionDate       String\\n\\n  // Fundamental Datasets (stored as JSON)\\n  /// Information about fundamental dataset types\\n  fundamentalDatasets Json?\\n\\n  // Description\\n  /// Abstract/description of the dataset\\n  abstract     String? @db.Text\\n  /// Purpose of the dataset\\n  purpose      String? @db.Text\\n  /// URL to the thumbnail image\\n  thumbnailUrl String?\\n  /// Name of the image file\\n  imageName    String?\\n\\n  // Spatial Domain\\n  /// Unit system for coordinates (DD or DMS)\\n  coordinateUnit   String?\\n  /// Southernmost latitude value\\n  minLatitude      Float?\\n  /// Westernmost longitude value\\n  minLongitude     Float?\\n  /// Northernmost latitude value\\n  maxLatitude      Float?\\n  /// Easternmost longitude value\\n  maxLongitude     Float?\\n  /// Coordinate system used\\n  coordinateSystem String?\\n  /// Projection used\\n  projection       String?\\n  /// Scale of the dataset\\n  scale            Int?\\n  /// Resolution of the dataset\\n  resolution       String?\\n  /// Accuracy level\\n  accuracyLevel    String?\\n  /// Completeness percentage\\n  completeness     Int?\\n  /// Consistency check status\\n  consistencyCheck Boolean?\\n  /// Validation status\\n  validationStatus String?\\n  /// File format\\n  fileFormat       String?\\n  /// File size in bytes\\n  fileSize         BigInt?\\n\\n  // Location\\n  /// Country covered by the dataset\\n  country          String?\\n  /// Geopolitical zone within Nigeria\\n  geopoliticalZone String?\\n  /// State or province\\n  state            String?\\n  /// Local Government Area\\n  lga              String?\\n  /// Town or city\\n  townCity         String?\\n\\n  // Data Status\\n  /// Completion status (Complete or Incomplete)\\n  assessment      String?\\n  /// Frequency of updates (Monthly, Quarterly, etc.)\\n  updateFrequency String?\\n\\n  // Resource Constraint\\n  /// Limitations on access to the dataset\\n  accessConstraints       String?  @db.Text\\n  /// Limitations on use of the dataset\\n  useConstraints          String?  @db.Text\\n  /// Other constraints or legal prerequisites\\n  otherConstraints        String?  @db.Text\\n  /// Access restrictions\\n  accessRestrictions      String[] @default([])\\n  /// License type\\n  licenseType             String?\\n  /// Usage terms\\n  usageTerms              String?\\n  /// Attribution requirements\\n  attributionRequirements String?\\n  /// Distribution format\\n  distributionFormat      String?\\n  /// Access method\\n  accessMethod            String?\\n  /// Download URL\\n  downloadUrl             String?\\n  /// API endpoint\\n  apiEndpoint             String?\\n\\n  // Metadata Reference\\n  /// Date when the metadata was created\\n  metadataCreationDate   String?\\n  /// Date when the metadata was last reviewed\\n  metadataReviewDate     String?\\n  /// Name of the contact person for metadata\\n  metadataContactName    String?\\n  /// Address of the contact person\\n  metadataContactAddress String? @db.Text\\n  /// Email of the contact person\\n  metadataContactEmail   String?\\n  /// Phone number of the contact person\\n  metadataContactPhone   String?\\n\\n  // Form 2: Data Quality Information\\n  // General Section\\n  /// Report on logical consistency\\n  logicalConsistencyReport String? @db.Text\\n  /// Report on completeness\\n  completenessReport       String? @db.Text\\n\\n  // Attribute Accuracy\\n  /// Report on attribute accuracy\\n  attributeAccuracyReport String? @db.Text\\n\\n  // Positional Accuracy (stored as JSON)\\n  /// Information about horizontal and vertical accuracy\\n  positionalAccuracy Json?\\n\\n  // Source Information (stored as JSON)\\n  /// Information about the source of the dataset\\n  sourceInformation Json?\\n\\n  // Data Processing Information\\n  /// Description of processing steps\\n  processingDescription String? @db.Text\\n  /// Version of software used for processing\\n  softwareVersion       String?\\n  /// Date when the data was processed\\n  processedDate         String?\\n\\n  // Processor Contact Information\\n  /// Name of the processor\\n  processorName    String?\\n  /// Email of the processor\\n  processorEmail   String?\\n  /// Address of the processor\\n  processorAddress String? @db.Text\\n\\n  // Form 3: Data Distribution Information\\n  // Distributor Information\\n  /// Name of the distributor\\n  distributorName        String?\\n  /// Address of the distributor\\n  distributorAddress     String?  @db.Text\\n  /// Email of the distributor\\n  distributorEmail       String?\\n  /// Phone number of the distributor\\n  distributorPhone       String?\\n  /// Website of the distributor\\n  distributorWebLink     String?\\n  /// Social media handle of the distributor\\n  distributorSocialMedia String?\\n  /// Indicates if distributor is also the custodian\\n  isCustodian            Boolean? @default(true)\\n  /// Name of the custodian if different from distributor\\n  custodianName          String?\\n  /// Contact information for the custodian if different from distributor\\n  custodianContact       String?\\n\\n  // Distribution Details\\n  /// Statement of liability\\n  distributionLiability  String? @db.Text\\n  /// Process for custom orders\\n  customOrderProcess     String? @db.Text\\n  /// Technical prerequisites for using the dataset\\n  technicalPrerequisites String? @db.Text\\n\\n  // Standard Order Process\\n  /// Fees for obtaining the dataset\\n  fees                 String?\\n  /// Typical time between order and delivery\\n  turnaroundTime       String?\\n  /// Instructions for ordering the dataset\\n  orderingInstructions String? @db.Text\\n  /// Maximum time for response about dataset availability\\n  maximumResponseTime  String?\\n\\n  // Contact details from original Metadata model\\n  /// Contact person\\n  contactPerson String?\\n  /// Contact email\\n  email         String?\\n  /// Department\\n  department    String?\\n\\n  /// Reference to the user who created this entry\\n  userId String\\n  user   User   @relation(fields: [userId], references: [id])\\n\\n  /// Creation timestamp\\n  createdAt DateTime @default(now())\\n  /// Last update timestamp\\n  updatedAt DateTime @updatedAt\\n\\n  @@index([userId])\\n}\\n\\n/// Token for email verification and password reset\\nmodel VerificationToken {\\n  /// Email or identifier to verify\\n  identifier String\\n  /// Verification token\\n  token      String   @unique\\n  /// Token expiration timestamp\\n  expires    DateTime\\n\\n  @@unique([identifier, token])\\n}\\n\\n/// System settings for the application\\nmodel Settings {\\n  /// Unique identifier for the settings record\\n  id                       String   @id\\n  /// Site name\\n  siteName                 String\\n  /// Site description\\n  siteDescription          String\\n  /// Support email address\\n  supportEmail             String\\n  /// Maximum upload size in MB\\n  maxUploadSize            Int\\n  /// Default language\\n  defaultLanguage          String\\n  /// Maintenance mode flag\\n  maintenanceMode          Boolean  @default(false)\\n  /// Registration enabled flag\\n  enableRegistration       Boolean  @default(true)\\n  /// Email verification required flag\\n  requireEmailVerification Boolean  @default(true)\\n  /// Metadata validation required flag\\n  metadataValidation       Boolean  @default(true)\\n  /// Auto backup enabled flag\\n  autoBackup               Boolean  @default(true)\\n  /// Backup frequency (daily, weekly, monthly)\\n  backupFrequency          String\\n  /// Storage provider (local, s3, etc.)\\n  storageProvider          String\\n  /// API rate limit per minute\\n  apiRateLimit             Int\\n  /// Last update timestamp\\n  updatedAt                DateTime @updatedAt\\n}\\n\\n/// Model for storing form drafts\\nmodel Draft {\\n  /// Unique identifier for the draft\\n  id          String   @id @default(cuid())\\n  /// Reference to the user who owns this draft\\n  userId      String\\n  /// Title of the draft\\n  title       String   @default(\\\"Untitled Draft\\\")\\n  /// Draft data as JSON\\n  data        Json\\n  /// Last updated timestamp\\n  lastUpdated String\\n  /// Creation timestamp\\n  createdAt   DateTime @default(now())\\n  /// User who owns this draft\\n  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)\\n\\n  @@index([userId])\\n}\\n\",\n  \"inlineSchemaHash\": \"313261d2e5771c4202d0df2329c551dd998a1b6ef7539a0cd5590ebd2eb66bc9\",\n  \"copyEngine\": true\n}\n\nconst fs = require('fs')\n\nconfig.dirname = __dirname\nif (!fs.existsSync(path.join(__dirname, 'schema.prisma'))) {\n  const alternativePaths = [\n    \"node_modules/.prisma/client\",\n    \".prisma/client\",\n  ]\n  \n  const alternativePath = alternativePaths.find((altPath) => {\n    return fs.existsSync(path.join(process.cwd(), altPath, 'schema.prisma'))\n  }) ?? alternativePaths[0]\n\n  config.dirname = path.join(process.cwd(), alternativePath)\n  config.isBundled = true\n}\n\nconfig.runtimeDataModel = JSON.parse(\"{\\\"models\\\":{\\\"Account\\\":{\\\"dbName\\\":null,\\\"schema\\\":null,\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":true,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"default\\\":{\\\"name\\\":\\\"cuid\\\",\\\"args\\\":[1]},\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Unique identifier for the account\\\"},{\\\"name\\\":\\\"userId\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":true,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Reference to the user who owns this account\\\"},{\\\"name\\\":\\\"type\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Type of the account (oauth, email, etc.)\\\"},{\\\"name\\\":\\\"provider\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"OAuth provider name\\\"},{\\\"name\\\":\\\"providerAccountId\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Account ID from the provider\\\"},{\\\"name\\\":\\\"refresh_token\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"OAuth refresh token\\\"},{\\\"name\\\":\\\"access_token\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"OAuth access token\\\"},{\\\"name\\\":\\\"expires_at\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Int\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Token expiration timestamp\\\"},{\\\"name\\\":\\\"token_type\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"OAuth token type\\\"},{\\\"name\\\":\\\"scope\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"OAuth scope\\\"},{\\\"name\\\":\\\"id_token\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"OAuth ID token\\\"},{\\\"name\\\":\\\"session_state\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"OAuth session state\\\"},{\\\"name\\\":\\\"user\\\",\\\"kind\\\":\\\"object\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"User\\\",\\\"nativeType\\\":null,\\\"relationName\\\":\\\"AccountToUser\\\",\\\"relationFromFields\\\":[\\\"userId\\\"],\\\"relationToFields\\\":[\\\"id\\\"],\\\"relationOnDelete\\\":\\\"Cascade\\\",\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false}],\\\"primaryKey\\\":null,\\\"uniqueFields\\\":[[\\\"provider\\\",\\\"providerAccountId\\\"]],\\\"uniqueIndexes\\\":[{\\\"name\\\":null,\\\"fields\\\":[\\\"provider\\\",\\\"providerAccountId\\\"]}],\\\"isGenerated\\\":false,\\\"documentation\\\":\\\"Authentication account information for OAuth providers\\\"},\\\"Session\\\":{\\\"dbName\\\":null,\\\"schema\\\":null,\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":true,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"default\\\":{\\\"name\\\":\\\"cuid\\\",\\\"args\\\":[1]},\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Unique identifier for the session\\\"},{\\\"name\\\":\\\"sessionToken\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":true,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Session token used for authentication\\\"},{\\\"name\\\":\\\"userId\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":true,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Reference to the user who owns this session\\\"},{\\\"name\\\":\\\"expires\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"DateTime\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Session expiration timestamp\\\"},{\\\"name\\\":\\\"user\\\",\\\"kind\\\":\\\"object\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"User\\\",\\\"nativeType\\\":null,\\\"relationName\\\":\\\"SessionToUser\\\",\\\"relationFromFields\\\":[\\\"userId\\\"],\\\"relationToFields\\\":[\\\"id\\\"],\\\"relationOnDelete\\\":\\\"Cascade\\\",\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false}],\\\"primaryKey\\\":null,\\\"uniqueFields\\\":[],\\\"uniqueIndexes\\\":[],\\\"isGenerated\\\":false,\\\"documentation\\\":\\\"User session information\\\"},\\\"User\\\":{\\\"dbName\\\":null,\\\"schema\\\":null,\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":true,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"default\\\":{\\\"name\\\":\\\"uuid\\\",\\\"args\\\":[4]},\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Unique identifier for the user\\\"},{\\\"name\\\":\\\"name\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"User's full name\\\"},{\\\"name\\\":\\\"email\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":true,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"User's email address\\\"},{\\\"name\\\":\\\"emailVerified\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"DateTime\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Timestamp of email verification\\\"},{\\\"name\\\":\\\"image\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"User's profile image URL\\\"},{\\\"name\\\":\\\"password\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Hashed password for local authentication\\\"},{\\\"name\\\":\\\"role\\\",\\\"kind\\\":\\\"enum\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"UserRole\\\",\\\"nativeType\\\":null,\\\"default\\\":\\\"USER\\\",\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"User's role in the system\\\"},{\\\"name\\\":\\\"organization\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"User's organization name\\\"},{\\\"name\\\":\\\"department\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"User's department within the organization\\\"},{\\\"name\\\":\\\"phone\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"User's contact phone number\\\"},{\\\"name\\\":\\\"accounts\\\",\\\"kind\\\":\\\"object\\\",\\\"isList\\\":true,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Account\\\",\\\"nativeType\\\":null,\\\"relationName\\\":\\\"AccountToUser\\\",\\\"relationFromFields\\\":[],\\\"relationToFields\\\":[],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false},{\\\"name\\\":\\\"sessions\\\",\\\"kind\\\":\\\"object\\\",\\\"isList\\\":true,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Session\\\",\\\"nativeType\\\":null,\\\"relationName\\\":\\\"SessionToUser\\\",\\\"relationFromFields\\\":[],\\\"relationToFields\\\":[],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false},{\\\"name\\\":\\\"metadata\\\",\\\"kind\\\":\\\"object\\\",\\\"isList\\\":true,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Metadata\\\",\\\"nativeType\\\":null,\\\"relationName\\\":\\\"MetadataToUser\\\",\\\"relationFromFields\\\":[],\\\"relationToFields\\\":[],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false},{\\\"name\\\":\\\"drafts\\\",\\\"kind\\\":\\\"object\\\",\\\"isList\\\":true,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Draft\\\",\\\"nativeType\\\":null,\\\"relationName\\\":\\\"DraftToUser\\\",\\\"relationFromFields\\\":[],\\\"relationToFields\\\":[],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false},{\\\"name\\\":\\\"createdAt\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"DateTime\\\",\\\"nativeType\\\":null,\\\"default\\\":{\\\"name\\\":\\\"now\\\",\\\"args\\\":[]},\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false},{\\\"name\\\":\\\"updatedAt\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"DateTime\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":true}],\\\"primaryKey\\\":null,\\\"uniqueFields\\\":[],\\\"uniqueIndexes\\\":[],\\\"isGenerated\\\":false,\\\"documentation\\\":\\\"User account information\\\"},\\\"Metadata\\\":{\\\"dbName\\\":null,\\\"schema\\\":null,\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":true,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"default\\\":{\\\"name\\\":\\\"uuid\\\",\\\"args\\\":[4]},\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Unique identifier for the metadata entry\\\"},{\\\"name\\\":\\\"title\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Title of the dataset (legacy field - use dataName instead)\\\"},{\\\"name\\\":\\\"author\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Author of the dataset (legacy field)\\\"},{\\\"name\\\":\\\"organization\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Organization name (legacy field)\\\"},{\\\"name\\\":\\\"dateFrom\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Start date of the dataset (legacy field)\\\"},{\\\"name\\\":\\\"dateTo\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"End date of the dataset (legacy field)\\\"},{\\\"name\\\":\\\"frameworkType\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Framework type (legacy field - use dataType instead)\\\"},{\\\"name\\\":\\\"categories\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":true,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"default\\\":[],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Categories of the dataset (legacy field)\\\"},{\\\"name\\\":\\\"numFeatures\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Int\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Number of features (legacy field)\\\"},{\\\"name\\\":\\\"softwareReqs\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Software requirements (legacy field - use technicalPrerequisites instead)\\\"},{\\\"name\\\":\\\"updateCycle\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Update cycle (legacy field - use updateFrequency instead)\\\"},{\\\"name\\\":\\\"lastUpdate\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"DateTime\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Last update date (legacy field)\\\"},{\\\"name\\\":\\\"nextUpdate\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"DateTime\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Next update date (legacy field)\\\"},{\\\"name\\\":\\\"dataType\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Type of data (Raster, Vector, Table)\\\"},{\\\"name\\\":\\\"dataName\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Name of the dataset\\\"},{\\\"name\\\":\\\"cloudCoverPercentage\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Percentage of cloud cover for imagery\\\"},{\\\"name\\\":\\\"productionDate\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Date when the dataset was produced\\\"},{\\\"name\\\":\\\"fundamentalDatasets\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Json\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Information about fundamental dataset types\\\"},{\\\"name\\\":\\\"abstract\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":[\\\"Text\\\",[]],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Abstract/description of the dataset\\\"},{\\\"name\\\":\\\"purpose\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":[\\\"Text\\\",[]],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Purpose of the dataset\\\"},{\\\"name\\\":\\\"thumbnailUrl\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"URL to the thumbnail image\\\"},{\\\"name\\\":\\\"imageName\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Name of the image file\\\"},{\\\"name\\\":\\\"coordinateUnit\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Unit system for coordinates (DD or DMS)\\\"},{\\\"name\\\":\\\"minLatitude\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Float\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Southernmost latitude value\\\"},{\\\"name\\\":\\\"minLongitude\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Float\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Westernmost longitude value\\\"},{\\\"name\\\":\\\"maxLatitude\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Float\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Northernmost latitude value\\\"},{\\\"name\\\":\\\"maxLongitude\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Float\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Easternmost longitude value\\\"},{\\\"name\\\":\\\"coordinateSystem\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Coordinate system used\\\"},{\\\"name\\\":\\\"projection\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Projection used\\\"},{\\\"name\\\":\\\"scale\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Int\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Scale of the dataset\\\"},{\\\"name\\\":\\\"resolution\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Resolution of the dataset\\\"},{\\\"name\\\":\\\"accuracyLevel\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Accuracy level\\\"},{\\\"name\\\":\\\"completeness\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Int\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Completeness percentage\\\"},{\\\"name\\\":\\\"consistencyCheck\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Boolean\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Consistency check status\\\"},{\\\"name\\\":\\\"validationStatus\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Validation status\\\"},{\\\"name\\\":\\\"fileFormat\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"File format\\\"},{\\\"name\\\":\\\"fileSize\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"BigInt\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"File size in bytes\\\"},{\\\"name\\\":\\\"country\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Country covered by the dataset\\\"},{\\\"name\\\":\\\"geopoliticalZone\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Geopolitical zone within Nigeria\\\"},{\\\"name\\\":\\\"state\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"State or province\\\"},{\\\"name\\\":\\\"lga\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Local Government Area\\\"},{\\\"name\\\":\\\"townCity\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Town or city\\\"},{\\\"name\\\":\\\"assessment\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Completion status (Complete or Incomplete)\\\"},{\\\"name\\\":\\\"updateFrequency\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Frequency of updates (Monthly, Quarterly, etc.)\\\"},{\\\"name\\\":\\\"accessConstraints\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":[\\\"Text\\\",[]],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Limitations on access to the dataset\\\"},{\\\"name\\\":\\\"useConstraints\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":[\\\"Text\\\",[]],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Limitations on use of the dataset\\\"},{\\\"name\\\":\\\"otherConstraints\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":[\\\"Text\\\",[]],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Other constraints or legal prerequisites\\\"},{\\\"name\\\":\\\"accessRestrictions\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":true,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"default\\\":[],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Access restrictions\\\"},{\\\"name\\\":\\\"licenseType\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"License type\\\"},{\\\"name\\\":\\\"usageTerms\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Usage terms\\\"},{\\\"name\\\":\\\"attributionRequirements\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Attribution requirements\\\"},{\\\"name\\\":\\\"distributionFormat\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Distribution format\\\"},{\\\"name\\\":\\\"accessMethod\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Access method\\\"},{\\\"name\\\":\\\"downloadUrl\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Download URL\\\"},{\\\"name\\\":\\\"apiEndpoint\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"API endpoint\\\"},{\\\"name\\\":\\\"metadataCreationDate\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Date when the metadata was created\\\"},{\\\"name\\\":\\\"metadataReviewDate\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Date when the metadata was last reviewed\\\"},{\\\"name\\\":\\\"metadataContactName\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Name of the contact person for metadata\\\"},{\\\"name\\\":\\\"metadataContactAddress\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":[\\\"Text\\\",[]],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Address of the contact person\\\"},{\\\"name\\\":\\\"metadataContactEmail\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Email of the contact person\\\"},{\\\"name\\\":\\\"metadataContactPhone\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Phone number of the contact person\\\"},{\\\"name\\\":\\\"logicalConsistencyReport\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":[\\\"Text\\\",[]],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Report on logical consistency\\\"},{\\\"name\\\":\\\"completenessReport\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":[\\\"Text\\\",[]],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Report on completeness\\\"},{\\\"name\\\":\\\"attributeAccuracyReport\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":[\\\"Text\\\",[]],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Report on attribute accuracy\\\"},{\\\"name\\\":\\\"positionalAccuracy\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Json\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Information about horizontal and vertical accuracy\\\"},{\\\"name\\\":\\\"sourceInformation\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Json\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Information about the source of the dataset\\\"},{\\\"name\\\":\\\"processingDescription\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":[\\\"Text\\\",[]],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Description of processing steps\\\"},{\\\"name\\\":\\\"softwareVersion\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Version of software used for processing\\\"},{\\\"name\\\":\\\"processedDate\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Date when the data was processed\\\"},{\\\"name\\\":\\\"processorName\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Name of the processor\\\"},{\\\"name\\\":\\\"processorEmail\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Email of the processor\\\"},{\\\"name\\\":\\\"processorAddress\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":[\\\"Text\\\",[]],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Address of the processor\\\"},{\\\"name\\\":\\\"distributorName\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Name of the distributor\\\"},{\\\"name\\\":\\\"distributorAddress\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":[\\\"Text\\\",[]],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Address of the distributor\\\"},{\\\"name\\\":\\\"distributorEmail\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Email of the distributor\\\"},{\\\"name\\\":\\\"distributorPhone\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Phone number of the distributor\\\"},{\\\"name\\\":\\\"distributorWebLink\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Website of the distributor\\\"},{\\\"name\\\":\\\"distributorSocialMedia\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Social media handle of the distributor\\\"},{\\\"name\\\":\\\"isCustodian\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"Boolean\\\",\\\"nativeType\\\":null,\\\"default\\\":true,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Indicates if distributor is also the custodian\\\"},{\\\"name\\\":\\\"custodianName\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Name of the custodian if different from distributor\\\"},{\\\"name\\\":\\\"custodianContact\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Contact information for the custodian if different from distributor\\\"},{\\\"name\\\":\\\"distributionLiability\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":[\\\"Text\\\",[]],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Statement of liability\\\"},{\\\"name\\\":\\\"customOrderProcess\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":[\\\"Text\\\",[]],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Process for custom orders\\\"},{\\\"name\\\":\\\"technicalPrerequisites\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":[\\\"Text\\\",[]],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Technical prerequisites for using the dataset\\\"},{\\\"name\\\":\\\"fees\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Fees for obtaining the dataset\\\"},{\\\"name\\\":\\\"turnaroundTime\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Typical time between order and delivery\\\"},{\\\"name\\\":\\\"orderingInstructions\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":[\\\"Text\\\",[]],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Instructions for ordering the dataset\\\"},{\\\"name\\\":\\\"maximumResponseTime\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Maximum time for response about dataset availability\\\"},{\\\"name\\\":\\\"contactPerson\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Contact person\\\"},{\\\"name\\\":\\\"email\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Contact email\\\"},{\\\"name\\\":\\\"department\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":false,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Department\\\"},{\\\"name\\\":\\\"userId\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":true,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Reference to the user who created this entry\\\"},{\\\"name\\\":\\\"user\\\",\\\"kind\\\":\\\"object\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"User\\\",\\\"nativeType\\\":null,\\\"relationName\\\":\\\"MetadataToUser\\\",\\\"relationFromFields\\\":[\\\"userId\\\"],\\\"relationToFields\\\":[\\\"id\\\"],\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false},{\\\"name\\\":\\\"createdAt\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"DateTime\\\",\\\"nativeType\\\":null,\\\"default\\\":{\\\"name\\\":\\\"now\\\",\\\"args\\\":[]},\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Creation timestamp\\\"},{\\\"name\\\":\\\"updatedAt\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"DateTime\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":true,\\\"documentation\\\":\\\"Last update timestamp\\\"}],\\\"primaryKey\\\":null,\\\"uniqueFields\\\":[],\\\"uniqueIndexes\\\":[],\\\"isGenerated\\\":false,\\\"documentation\\\":\\\"Geospatial metadata information following NGDI standards\\\"},\\\"VerificationToken\\\":{\\\"dbName\\\":null,\\\"schema\\\":null,\\\"fields\\\":[{\\\"name\\\":\\\"identifier\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Email or identifier to verify\\\"},{\\\"name\\\":\\\"token\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":true,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Verification token\\\"},{\\\"name\\\":\\\"expires\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"DateTime\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Token expiration timestamp\\\"}],\\\"primaryKey\\\":null,\\\"uniqueFields\\\":[[\\\"identifier\\\",\\\"token\\\"]],\\\"uniqueIndexes\\\":[{\\\"name\\\":null,\\\"fields\\\":[\\\"identifier\\\",\\\"token\\\"]}],\\\"isGenerated\\\":false,\\\"documentation\\\":\\\"Token for email verification and password reset\\\"},\\\"Settings\\\":{\\\"dbName\\\":null,\\\"schema\\\":null,\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":true,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Unique identifier for the settings record\\\"},{\\\"name\\\":\\\"siteName\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Site name\\\"},{\\\"name\\\":\\\"siteDescription\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Site description\\\"},{\\\"name\\\":\\\"supportEmail\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Support email address\\\"},{\\\"name\\\":\\\"maxUploadSize\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Int\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Maximum upload size in MB\\\"},{\\\"name\\\":\\\"defaultLanguage\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Default language\\\"},{\\\"name\\\":\\\"maintenanceMode\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"Boolean\\\",\\\"nativeType\\\":null,\\\"default\\\":false,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Maintenance mode flag\\\"},{\\\"name\\\":\\\"enableRegistration\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"Boolean\\\",\\\"nativeType\\\":null,\\\"default\\\":true,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Registration enabled flag\\\"},{\\\"name\\\":\\\"requireEmailVerification\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"Boolean\\\",\\\"nativeType\\\":null,\\\"default\\\":true,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Email verification required flag\\\"},{\\\"name\\\":\\\"metadataValidation\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"Boolean\\\",\\\"nativeType\\\":null,\\\"default\\\":true,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Metadata validation required flag\\\"},{\\\"name\\\":\\\"autoBackup\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"Boolean\\\",\\\"nativeType\\\":null,\\\"default\\\":true,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Auto backup enabled flag\\\"},{\\\"name\\\":\\\"backupFrequency\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Backup frequency (daily, weekly, monthly)\\\"},{\\\"name\\\":\\\"storageProvider\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Storage provider (local, s3, etc.)\\\"},{\\\"name\\\":\\\"apiRateLimit\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Int\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"API rate limit per minute\\\"},{\\\"name\\\":\\\"updatedAt\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"DateTime\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":true,\\\"documentation\\\":\\\"Last update timestamp\\\"}],\\\"primaryKey\\\":null,\\\"uniqueFields\\\":[],\\\"uniqueIndexes\\\":[],\\\"isGenerated\\\":false,\\\"documentation\\\":\\\"System settings for the application\\\"},\\\"Draft\\\":{\\\"dbName\\\":null,\\\"schema\\\":null,\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":true,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"default\\\":{\\\"name\\\":\\\"cuid\\\",\\\"args\\\":[1]},\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Unique identifier for the draft\\\"},{\\\"name\\\":\\\"userId\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":true,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Reference to the user who owns this draft\\\"},{\\\"name\\\":\\\"title\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"default\\\":\\\"Untitled Draft\\\",\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Title of the draft\\\"},{\\\"name\\\":\\\"data\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"Json\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Draft data as JSON\\\"},{\\\"name\\\":\\\"lastUpdated\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"String\\\",\\\"nativeType\\\":null,\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Last updated timestamp\\\"},{\\\"name\\\":\\\"createdAt\\\",\\\"kind\\\":\\\"scalar\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":true,\\\"type\\\":\\\"DateTime\\\",\\\"nativeType\\\":null,\\\"default\\\":{\\\"name\\\":\\\"now\\\",\\\"args\\\":[]},\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"Creation timestamp\\\"},{\\\"name\\\":\\\"user\\\",\\\"kind\\\":\\\"object\\\",\\\"isList\\\":false,\\\"isRequired\\\":true,\\\"isUnique\\\":false,\\\"isId\\\":false,\\\"isReadOnly\\\":false,\\\"hasDefaultValue\\\":false,\\\"type\\\":\\\"User\\\",\\\"nativeType\\\":null,\\\"relationName\\\":\\\"DraftToUser\\\",\\\"relationFromFields\\\":[\\\"userId\\\"],\\\"relationToFields\\\":[\\\"id\\\"],\\\"relationOnDelete\\\":\\\"Cascade\\\",\\\"isGenerated\\\":false,\\\"isUpdatedAt\\\":false,\\\"documentation\\\":\\\"User who owns this draft\\\"}],\\\"primaryKey\\\":null,\\\"uniqueFields\\\":[],\\\"uniqueIndexes\\\":[],\\\"isGenerated\\\":false,\\\"documentation\\\":\\\"Model for storing form drafts\\\"}},\\\"enums\\\":{\\\"UserRole\\\":{\\\"values\\\":[{\\\"name\\\":\\\"USER\\\",\\\"dbName\\\":null,\\\"documentation\\\":\\\"Regular user with basic access\\\"},{\\\"name\\\":\\\"ADMIN\\\",\\\"dbName\\\":null,\\\"documentation\\\":\\\"System administrator with full access\\\"},{\\\"name\\\":\\\"NODE_OFFICER\\\",\\\"dbName\\\":null,\\\"documentation\\\":\\\"Node officer with specific privileges\\\"}],\\\"dbName\\\":null,\\\"documentation\\\":\\\"User roles for access control\\\"}},\\\"types\\\":{}}\")\ndefineDmmfProperty(exports.Prisma, config.runtimeDataModel)\nconfig.engineWasm = undefined\nconfig.compilerWasm = undefined\n\n\nconst { warnEnvConflicts } = require('@prisma/client/runtime/library.js')\n\nwarnEnvConflicts({\n    rootEnvPath: config.relativeEnvPaths.rootEnvPath && path.resolve(config.dirname, config.relativeEnvPaths.rootEnvPath),\n    schemaEnvPath: config.relativeEnvPaths.schemaEnvPath && path.resolve(config.dirname, config.relativeEnvPaths.schemaEnvPath)\n})\n\nconst PrismaClient = getPrismaClient(config)\nexports.PrismaClient = PrismaClient\nObject.assign(exports, Prisma)\n\n// file annotations for bundling tools to include these files\npath.join(__dirname, \"libquery_engine-darwin.dylib.node\");\npath.join(process.cwd(), \"node_modules/.prisma/client/libquery_engine-darwin.dylib.node\")\n// file annotations for bundling tools to include these files\npath.join(__dirname, \"schema.prisma\");\npath.join(process.cwd(), \"node_modules/.prisma/client/schema.prisma\")\n","module.exports = { ...require('.') }","module.exports = {\n  ...require('.prisma/client/default'),\n}\n","import { Permission, Role, User, UserPermission } from \"@prisma/client\"\nimport { prisma } from \"../lib/prisma\"\n\n/**\n * Extended permission type with conditions\n */\nexport interface PermissionWithConditions extends Permission {\n  conditions?: {\n    organizationId?: string\n    userId?: string\n    dynamic?: {\n      evaluate: (user: User, resource?: any) => boolean\n    }\n  }\n}\n\n/**\n * Resource type for permission checks\n */\nexport interface Resource {\n  id?: string\n  userId?: string\n  organizationId?: string\n  [key: string]: any\n}\n\n/**\n * Permission check result\n */\nexport interface PermissionCheckResult {\n  granted: boolean\n  reason?: string\n}\n\n/**\n * Get all permissions for a role, including inherited permissions\n */\nexport async function getAllPermissionsForRole(roleId: string): Promise<Permission[]> {\n  // Get the role with its permissions\n  const role = await prisma.role.findUnique({\n    where: { id: roleId },\n    include: {\n      rolePermissions: {\n        include: {\n          permission: true\n        }\n      }\n    }\n  })\n\n  if (!role) {\n    return []\n  }\n\n  // Return the permissions\n  return role.rolePermissions.map(rp => rp.permission)\n}\n\n/**\n * Get all permissions for a user, including role permissions and direct permissions\n */\nexport async function getAllPermissionsForUser(userId: string): Promise<PermissionWithConditions[]> {\n  // Get the user with their role and direct permissions\n  const user = await prisma.user.findUnique({\n    where: { id: userId },\n    include: {\n      customRole: {\n        include: {\n          rolePermissions: {\n            include: {\n              permission: true\n            }\n          }\n        }\n      },\n      userPermissions: {\n        where: {\n          granted: true,\n          OR: [\n            { expiresAt: null },\n            { expiresAt: { gt: new Date() } }\n          ]\n        },\n        include: {\n          permission: true\n        }\n      }\n    }\n  })\n\n  if (!user) {\n    return []\n  }\n\n  // Collect role permissions\n  const rolePermissions: PermissionWithConditions[] = user.customRole\n    ? user.customRole.rolePermissions.map(rp => ({\n        ...rp.permission\n      }))\n    : []\n\n  // Collect direct user permissions with their conditions\n  const userPermissions: PermissionWithConditions[] = user.userPermissions.map(up => ({\n    ...up.permission,\n    conditions: up.conditions as any\n  }))\n\n  // Combine and deduplicate permissions\n  const allPermissions = [...rolePermissions]\n\n  // Add user permissions, overriding role permissions if they exist\n  for (const userPerm of userPermissions) {\n    const existingIndex = allPermissions.findIndex(\n      p => p.action === userPerm.action && p.subject === userPerm.subject\n    )\n\n    if (existingIndex >= 0) {\n      allPermissions[existingIndex] = userPerm\n    } else {\n      allPermissions.push(userPerm)\n    }\n  }\n\n  return allPermissions\n}\n\n/**\n * Check if a user has a specific permission\n */\nexport async function hasPermission(\n  user: User,\n  action: string,\n  subject: string,\n  resource?: Resource\n): Promise<PermissionCheckResult> {\n  // Admin users have all permissions\n  if (user.role === 'ADMIN') {\n    return { granted: true }\n  }\n\n  // Get all permissions for the user\n  const userPermissions = await getAllPermissionsForUser(user.id)\n\n  // Check if the user has the permission\n  const permission = userPermissions.find(\n    p => p.action === action && p.subject === subject\n  )\n\n  if (!permission) {\n    return { \n      granted: false,\n      reason: `User does not have the ${action}:${subject} permission`\n    }\n  }\n\n  // Check conditions if they exist\n  if (permission.conditions || resource) {\n    // Check dynamic conditions first\n    if (permission.conditions?.dynamic) {\n      try {\n        const dynamicResult = permission.conditions.dynamic.evaluate(user, resource)\n        if (!dynamicResult) {\n          return { \n            granted: false,\n            reason: 'Dynamic condition evaluation failed'\n          }\n        }\n      } catch (error) {\n        console.error('Error evaluating dynamic condition:', error)\n        return { \n          granted: false,\n          reason: 'Error evaluating dynamic condition'\n        }\n      }\n    }\n\n    // Check organization condition\n    if (permission.conditions?.organizationId && resource?.organizationId) {\n      if (permission.conditions.organizationId !== resource.organizationId) {\n        return { \n          granted: false,\n          reason: 'Organization condition not met'\n        }\n      }\n    }\n\n    // Check user condition (ownership)\n    if (permission.conditions?.userId && resource?.userId) {\n      if (permission.conditions.userId !== resource.userId && user.id !== resource.userId) {\n        return { \n          granted: false,\n          reason: 'User ownership condition not met'\n        }\n      }\n    }\n  }\n\n  // All conditions passed\n  return { granted: true }\n}\n\n/**\n * Check if a user has all of the specified permissions\n */\nexport async function hasAllPermissions(\n  user: User,\n  permissions: { action: string; subject: string }[],\n  resource?: Resource\n): Promise<PermissionCheckResult> {\n  // Admin users have all permissions\n  if (user.role === 'ADMIN') {\n    return { granted: true }\n  }\n\n  // Check each permission\n  for (const { action, subject } of permissions) {\n    const result = await hasPermission(user, action, subject, resource)\n    if (!result.granted) {\n      return result\n    }\n  }\n\n  // All permissions granted\n  return { granted: true }\n}\n\n/**\n * Check if a user has any of the specified permissions\n */\nexport async function hasAnyPermission(\n  user: User,\n  permissions: { action: string; subject: string }[],\n  resource?: Resource\n): Promise<PermissionCheckResult> {\n  // Admin users have all permissions\n  if (user.role === 'ADMIN') {\n    return { granted: true }\n  }\n\n  // Check each permission\n  for (const { action, subject } of permissions) {\n    const result = await hasPermission(user, action, subject, resource)\n    if (result.granted) {\n      return result\n    }\n  }\n\n  // No permissions granted\n  return { \n    granted: false,\n    reason: 'User does not have any of the required permissions'\n  }\n}\n\n/**\n * Check if a user can access their own resource or has admin rights\n */\nexport async function canAccessOwnResource(\n  user: User,\n  action: string,\n  subject: string,\n  resourceUserId: string\n): Promise<PermissionCheckResult> {\n  // Admin users have all permissions\n  if (user.role === 'ADMIN') {\n    return { granted: true }\n  }\n\n  // Check if the user is the owner of the resource\n  if (user.id === resourceUserId) {\n    return { granted: true }\n  }\n\n  // Check if the user has the permission\n  return await hasPermission(user, action, subject, { userId: resourceUserId })\n}\n\n/**\n * Log permission check for auditing\n */\nexport async function logPermissionCheck(\n  user: User,\n  action: string,\n  subject: string,\n  resource: any,\n  result: boolean,\n  ipAddress?: string,\n  userAgent?: string\n): Promise<void> {\n  try {\n    await prisma.activityLog.create({\n      data: {\n        userId: user.id,\n        action,\n        subject,\n        subjectId: resource?.id,\n        metadata: {\n          result,\n          resource: resource ? JSON.stringify(resource) : null,\n          timestamp: new Date().toISOString()\n        },\n        ipAddress,\n        userAgent\n      }\n    })\n  } catch (error) {\n    console.error('Error logging permission check:', error)\n  }\n}\n\n/**\n * Get recent activity for a user\n */\nexport async function getUserActivity(\n  userId: string,\n  limit: number = 10\n): Promise<any[]> {\n  return prisma.activityLog.findMany({\n    where: { userId },\n    orderBy: { createdAt: 'desc' },\n    take: limit\n  })\n}\n\n/**\n * Get activity for a specific resource\n */\nexport async function getResourceActivity(\n  subject: string,\n  subjectId: string,\n  limit: number = 10\n): Promise<any[]> {\n  return prisma.activityLog.findMany({\n    where: { subject, subjectId },\n    orderBy: { createdAt: 'desc' },\n    take: limit,\n    include: {\n      user: {\n        select: {\n          id: true,\n          name: true,\n          email: true\n        }\n      }\n    }\n  })\n}\n\n/**\n * Create a dynamic condition function\n */\nexport function createDynamicCondition(\n  conditionFn: (user: User, resource?: any) => boolean\n): { evaluate: (user: User, resource?: any) => boolean } {\n  return {\n    evaluate: conditionFn\n  }\n}\n\n/**\n * Grant a permission to a user directly\n */\nexport async function grantPermissionToUser(\n  userId: string,\n  permissionId: string,\n  conditions?: any,\n  expiresAt?: Date\n): Promise<UserPermission> {\n  return prisma.userPermission.upsert({\n    where: {\n      userId_permissionId: {\n        userId,\n        permissionId\n      }\n    },\n    update: {\n      granted: true,\n      conditions,\n      expiresAt\n    },\n    create: {\n      userId,\n      permissionId,\n      granted: true,\n      conditions,\n      expiresAt\n    }\n  })\n}\n\n/**\n * Revoke a permission from a user\n */\nexport async function revokePermissionFromUser(\n  userId: string,\n  permissionId: string\n): Promise<void> {\n  await prisma.userPermission.delete({\n    where: {\n      userId_permissionId: {\n        userId,\n        permissionId\n      }\n    }\n  })\n}\n\n/**\n * Get all permissions by subject\n */\nexport async function getPermissionsBySubject(subject: string): Promise<Permission[]> {\n  return prisma.permission.findMany({\n    where: { subject }\n  })\n}\n\n/**\n * Get all permissions by action\n */\nexport async function getPermissionsByAction(action: string): Promise<Permission[]> {\n  return prisma.permission.findMany({\n    where: { action }\n  })\n}\n\n/**\n * Get permission by action and subject\n */\nexport async function getPermissionByActionAndSubject(\n  action: string,\n  subject: string\n): Promise<Permission | null> {\n  return prisma.permission.findUnique({\n    where: {\n      action_subject: {\n        action,\n        subject\n      }\n    }\n  })\n}\n","import { Hono } from \"hono\"\nimport { cors } from \"hono/cors\"\nimport { logger } from \"hono/logger\"\nimport { secureHeaders } from \"hono/secure-headers\"\nimport { prettyJSON } from \"hono/pretty-json\"\nimport { OpenAPIHono } from \"@hono/zod-openapi\"\nimport { swaggerUI } from \"@hono/swagger-ui\"\nimport authRouter from \"./routes/auth.routes\"\nimport userRouter from \"./routes/user.routes\"\nimport metadataRouter from \"./routes/metadata.routes\"\nimport searchRouter from \"./routes/search.routes\"\nimport adminRouter from \"./routes/admin.routes\"\nimport permissionsRouter from \"./routes/permissions\"\nimport rolesRouter from \"./routes/roles\"\nimport userPermissionsRouter from \"./routes/user-permissions\"\nimport permissionGroupsRouter from \"./routes/permission-groups\"\nimport activityLogsRouter from \"./routes/activity-logs\"\nimport { Context, Variables } from \"./types/hono.types\"\nimport { Env } from \"hono\"\nimport { errorMiddleware } from \"./middleware/error-handler\"\nimport { rateLimit } from \"./middleware/rate-limit\"\nimport csrf from \"./middleware/csrf\"\nimport { serve } from \"@hono/node-server\"\nimport { config } from \"./config\"\n\n// Create app instance\nconst app = new Hono<{\n  Variables: Variables\n  Bindings: Env\n}>()\n\n// Add health check endpoint BEFORE all other middleware and routes\n// This ensures it's available even if other middleware has issues\napp.get(\"/health\", (c) => {\n  console.log(\"Health check endpoint called\")\n  return c.json({\n    status: \"ok\",\n    timestamp: new Date().toISOString(),\n    version: process.env.npm_package_version || \"unknown\",\n    environment: process.env.NODE_ENV || \"development\",\n  })\n})\n\napp.get(\"/api/health\", (c) => {\n  console.log(\"Health check endpoint called via /api/health\")\n  return c.json({\n    status: \"ok\",\n    timestamp: new Date().toISOString(),\n    version: process.env.npm_package_version || \"unknown\",\n    environment: process.env.NODE_ENV || \"development\",\n  })\n})\n\n// Now proceed with normal middleware\n// Apply global middleware\napp.use(\"*\", logger())\napp.use(\n  \"*\",\n  cors({\n    origin: config.cors.origin,\n    allowMethods: config.cors.methods,\n    allowHeaders: config.cors.allowedHeaders,\n    exposeHeaders: [\"Content-Length\", \"X-Request-ID\"],\n    credentials: true, // Allow cookies to be sent with requests\n    maxAge: 86400, // 24 hours\n  })\n)\napp.use(\"*\", prettyJSON())\napp.use(\"*\", rateLimit)\napp.use(\"*\", errorMiddleware)\n\n// Apply CSRF protection to all non-GET routes\napp.use(\"*\", csrf())\n\n// Create API router\nconst apiRouter = new OpenAPIHono()\n\n// Mount routes\napiRouter.route(\"/auth\", authRouter)\napiRouter.route(\"/users\", userRouter)\napiRouter.route(\"/metadata\", metadataRouter)\napiRouter.route(\"/search\", searchRouter)\napiRouter.route(\"/admin\", adminRouter)\n\n// Mount permission system routes\napiRouter.route(\"/permissions\", permissionsRouter)\napiRouter.route(\"/roles\", rolesRouter)\napiRouter.route(\"/user-permissions\", userPermissionsRouter)\napiRouter.route(\"/permission-groups\", permissionGroupsRouter)\napiRouter.route(\"/activity-logs\", activityLogsRouter)\n\n// Mount API router\napp.route(\"/\", apiRouter)\napp.route(\"/api\", apiRouter)\n\n// Swagger UI\napp.get(\n  \"/docs/*\",\n  swaggerUI({\n    url: \"/api/docs\",\n  })\n)\n\n// Start the server in non-production environments\nif (process.env.NODE_ENV !== \"production\" && process.env.NODE_ENV !== \"test\") {\n  const port = config.port || 3001\n\n  // Start the server even if there are database connection issues\n  try {\n    console.log(`API server is running on port ${port}`)\n\n    serve({\n      fetch: app.fetch,\n      port,\n    })\n\n    console.log(\"API: Server startup complete - ready to accept connections\")\n  } catch (error) {\n    console.error(\"Failed to start server:\", error)\n  }\n}\n\n// Export app for use in Vercel serverless functions and other environments\nexport default app\n","import { Hono } from \"hono\"\nimport { zValidator } from \"@hono/zod-validator\"\nimport { prisma } from \"../lib/prisma\"\nimport { errorHandler, ApiError, ErrorCode } from \"../middleware/error-handler\"\nimport * as crypto from \"crypto\"\nimport {\n  generateToken,\n  generateRefreshToken,\n  generateJwtId,\n  revokeToken,\n  storeTokenFamily,\n  revokeAllUserTokens,\n} from \"../utils/jwt\"\nimport { tokenValidationService } from \"../services/token-validation.service\"\nimport { z } from \"zod\"\nimport { UserRole } from \"../types/auth.types\"\nimport { emailService } from \"../services/email.service\"\nimport { AuthService } from \"../services/auth.service\"\nimport { HTTPException } from \"hono/http-exception\"\nimport { authMiddleware } from \"../middleware/auth.middleware\"\nimport { AuthError, AuthErrorCode } from \"../types/error.types\"\nimport { setCookieWithOptions, clearCookie } from \"../utils/cookie.utils\"\nimport { rateLimit } from \"../middleware/rate-limit.middleware\"\nimport { redisService } from \"../services/redis.service\"\nimport csrf from \"../middleware/csrf\"\nimport {\n  securityLogService,\n  SecurityEventType,\n} from \"../services/security-log.service\"\n\nimport {\n  loginSchema,\n  registerSchema,\n  verifyEmailSchema,\n  requestPasswordResetSchema,\n  resetPasswordSchema,\n  forgotPasswordSchema,\n} from \"../types/auth.types\"\n\nimport * as jose from \"jose\"\nimport { Variables } from \"../types/hono.types\"\nimport { ErrorHandler } from \"hono\"\nimport { config } from \"../config\"\n\n// Create CSRF protection middleware\nconst csrfProtection = csrf()\n\n// Create auth router\nconst auth = new Hono<{ Variables: Variables }>()\n\n// Create an error handler that conforms to Hono's expected type\nconst honoErrorHandler: ErrorHandler<{ Variables: Variables }> = (err, c) => {\n  const result = errorHandler(err, c)\n\n  // If the result contains a status and body, convert it to a Response\n  if (\"status\" in result && \"body\" in result) {\n    return c.json(result.body, result.status as any)\n  }\n\n  // Otherwise, return the result directly (should already be a Response)\n  return result\n}\n\n// Apply error handler\nauth.onError(honoErrorHandler)\n\n// Apply rate limiting to auth routes\nauth.use(\n  \"/login\",\n  rateLimit({\n    windowSeconds: 300, // 5 minutes\n    maxRequests: 5, // 5 attempts\n    keyPrefix: \"rate:login:\",\n    message: \"Too many login attempts. Please try again later.\",\n    skipSuccessfulRequests: true, // Don't count successful logins against the limit\n  })\n)\n\nauth.use(\n  \"/register\",\n  rateLimit({\n    windowSeconds: 3600, // 1 hour\n    maxRequests: 3, // 3 attempts\n    keyPrefix: \"rate:register:\",\n    message: \"Too many registration attempts. Please try again later.\",\n  })\n)\n\nauth.use(\n  \"/forgot-password\",\n  rateLimit({\n    windowSeconds: 3600, // 1 hour\n    maxRequests: 3, // 3 attempts\n    keyPrefix: \"rate:forgot:\",\n    message: \"Too many password reset requests. Please try again later.\",\n  })\n)\n\nauth.use(\n  \"/reset-password\",\n  rateLimit({\n    windowSeconds: 3600, // 1 hour\n    maxRequests: 5, // 5 attempts\n    keyPrefix: \"rate:reset:\",\n    message: \"Too many password reset attempts. Please try again later.\",\n  })\n)\n\n// Login route with real authentication\nauth.post(\n  \"/login\",\n  csrfProtection,\n  zValidator(\"json\", loginSchema),\n  async (c) => {\n    try {\n      const data = await c.req.json()\n      console.log(`Login attempt for email: ${data.email}`)\n\n      // Add client information for security tracking\n      data.ipAddress =\n        c.req.header(\"x-forwarded-for\") ||\n        c.req.header(\"x-real-ip\") ||\n        c.req.header(\"cf-connecting-ip\") ||\n        \"unknown\"\n      data.userAgent = c.req.header(\"user-agent\") || \"unknown\"\n      data.deviceId = c.req.header(\"x-device-id\") || \"unknown\"\n\n      console.log(\n        `Login attempt from IP: ${data.ipAddress}, Device: ${data.deviceId}`\n      )\n\n      const result = await AuthService.login(data)\n\n      // Set auth cookies with improved settings\n      // Set the primary auth_token cookie\n      setCookieWithOptions(c, \"auth_token\", result.accessToken, {\n        sameSite: \"lax\",\n        secure: false, // Set to false for local development\n        httpOnly: true,\n        path: \"/\",\n      })\n\n      // Set additional cookies for compatibility\n      setCookieWithOptions(c, \"accessToken\", result.accessToken, {\n        sameSite: \"lax\",\n        secure: false, // Set to false for local development\n        httpOnly: true,\n        path: \"/\",\n      })\n\n      setCookieWithOptions(c, \"token\", result.accessToken, {\n        sameSite: \"lax\",\n        secure: false, // Set to false for local development\n        httpOnly: true,\n        path: \"/\",\n      })\n\n      // Set refresh token\n      setCookieWithOptions(c, \"refresh_token\", result.refreshToken, {\n        sameSite: \"lax\",\n        secure: false, // Set to false for local development\n        httpOnly: true,\n        path: \"/\",\n      })\n\n      // Set authenticated flag for client-side checks\n      setCookieWithOptions(c, \"authenticated\", \"true\", {\n        httpOnly: false,\n        sameSite: \"lax\",\n        secure: false, // Set to false for local development\n        path: \"/\",\n        maxAge: 7 * 24 * 60 * 60,\n      })\n\n      // Log cookie setting\n      console.log(\"Set auth cookies for user:\", result.user.email)\n\n      return c.json(result)\n    } catch (error) {\n      console.error(\"Login error:\", error)\n      if (error instanceof AuthError) {\n        throw error\n      }\n      throw new AuthError(\n        AuthErrorCode.INVALID_CREDENTIALS,\n        \"Authentication failed\",\n        401\n      )\n    }\n  }\n)\n\n// Register route with real implementation\nauth.post(\n  \"/register\",\n  csrfProtection,\n  zValidator(\"json\", registerSchema),\n  async (c) => {\n    try {\n      const data = await c.req.json()\n      console.log(`Registration attempt for email: ${data.email}`)\n\n      // Add client information for security tracking\n      data.ipAddress =\n        c.req.header(\"x-forwarded-for\") ||\n        c.req.header(\"x-real-ip\") ||\n        c.req.header(\"cf-connecting-ip\") ||\n        \"unknown\"\n      data.userAgent = c.req.header(\"user-agent\") || \"unknown\"\n      data.deviceId = c.req.header(\"x-device-id\") || \"unknown\"\n\n      console.log(`Registration attempt from IP: ${data.ipAddress}`)\n\n      const result = await AuthService.register(data)\n\n      // Set auth cookies with improved settings\n      // Set the primary auth_token cookie\n      setCookieWithOptions(c, \"auth_token\", result.accessToken, {\n        sameSite: \"lax\",\n        secure: false, // Set to false for local development\n        httpOnly: true,\n        path: \"/\",\n      })\n\n      // Set additional cookies for compatibility\n      setCookieWithOptions(c, \"accessToken\", result.accessToken, {\n        sameSite: \"lax\",\n        secure: false, // Set to false for local development\n        httpOnly: true,\n        path: \"/\",\n      })\n\n      setCookieWithOptions(c, \"token\", result.accessToken, {\n        sameSite: \"lax\",\n        secure: false, // Set to false for local development\n        httpOnly: true,\n        path: \"/\",\n      })\n\n      // Set refresh token\n      setCookieWithOptions(c, \"refresh_token\", result.refreshToken, {\n        sameSite: \"lax\",\n        secure: false, // Set to false for local development\n        httpOnly: true,\n        path: \"/\",\n      })\n\n      // Set authenticated flag for client-side checks\n      setCookieWithOptions(c, \"authenticated\", \"true\", {\n        httpOnly: false,\n        sameSite: \"lax\",\n        secure: false, // Set to false for local development\n        path: \"/\",\n        maxAge: 7 * 24 * 60 * 60,\n      })\n\n      // Log cookie setting\n      console.log(\"Set auth cookies for new user:\", result.user.email)\n\n      return c.json(result)\n    } catch (error) {\n      console.error(\"Registration error:\", error)\n      if (error instanceof AuthError) {\n        throw error\n      }\n      if (error instanceof HTTPException) {\n        throw error\n      }\n      throw new AuthError(\n        AuthErrorCode.REGISTRATION_FAILED,\n        \"Registration failed\",\n        400\n      )\n    }\n  }\n)\n\n// Verify email route with real implementation\nauth.get(\"/verify-email\", zValidator(\"query\", verifyEmailSchema), async (c) => {\n  try {\n    const { token } = c.req.valid(\"query\")\n\n    await AuthService.verifyEmail(token)\n\n    return c.json({\n      success: true,\n      message: \"Email verified successfully\",\n    })\n  } catch (error) {\n    console.error(\"Email verification error:\", error)\n    if (error instanceof AuthError) {\n      throw error\n    }\n    throw new AuthError(\n      AuthErrorCode.VERIFICATION_FAILED,\n      \"Email verification failed\",\n      400\n    )\n  }\n})\n\n// Refresh token route with real implementation\nauth.post(\"/refresh-token\", async (c) => {\n  try {\n    const data = await c.req.json()\n    const { refreshToken } = data\n\n    if (!refreshToken) {\n      throw new AuthError(\n        AuthErrorCode.INVALID_TOKEN,\n        \"Refresh token is required\",\n        400\n      )\n    }\n\n    // Get client information for logging\n    const clientInfo = {\n      ipAddress:\n        c.req.header(\"x-forwarded-for\") ||\n        c.req.header(\"x-real-ip\") ||\n        c.req.header(\"cf-connecting-ip\") ||\n        \"unknown\",\n      userAgent: c.req.header(\"user-agent\") || \"unknown\",\n      deviceId: c.req.header(\"x-device-id\") || \"unknown\",\n    }\n\n    // Verify the refresh token with enhanced security checks\n    const validationResult = await tokenValidationService.validateRefreshToken(\n      refreshToken,\n      {\n        checkBlacklist: true,\n        checkFamily: true,\n        logFailures: true,\n        clientInfo,\n      }\n    )\n\n    if (!validationResult.isValid) {\n      throw new AuthError(\n        AuthErrorCode.INVALID_REFRESH_TOKEN,\n        validationResult.error || \"Invalid refresh token\",\n        401\n      )\n    }\n\n    // Extract the payload from the validation result\n    const jwtPayload = {\n      userId: validationResult.userId!,\n      email: validationResult.email!,\n      role: validationResult.role!,\n      family: validationResult.details?.family,\n      jti: validationResult.details?.jti,\n    }\n\n    // Extract the token family or create a new one\n    const tokenFamily = jwtPayload.family || generateJwtId()\n\n    // Create a new token ID for the refresh token\n    const newTokenId = generateJwtId()\n\n    // Create token payload with enhanced security\n    const tokenPayload = {\n      userId: jwtPayload.userId,\n      email: jwtPayload.email,\n      role: jwtPayload.role,\n      // Add device info if available\n      deviceId: jwtPayload.deviceId || c.req.header(\"x-device-id\"),\n      ipAddress: c.req.header(\"x-forwarded-for\") || c.req.header(\"x-real-ip\"),\n      userAgent: c.req.header(\"user-agent\"),\n    }\n\n    // Generate new access token with shorter expiration (15 minutes)\n    const accessToken = await generateToken(tokenPayload, \"15m\", {\n      includeJti: true,\n    })\n\n    // Generate new refresh token with the same family but new ID\n    const newRefreshToken = await generateRefreshToken(\n      tokenPayload,\n      config.jwt.refreshExpiresIn,\n      {\n        includeJti: true,\n        family: tokenFamily,\n      }\n    )\n\n    // Store the new token ID in the family for future validation\n    await storeTokenFamily(tokenFamily, newTokenId)\n\n    // Revoke the old refresh token\n    await revokeToken(refreshToken, 60 * 60 * 24) // 24 hours\n\n    // Set new cookies with improved settings\n    // Set the primary auth_token cookie\n    setCookieWithOptions(c, \"auth_token\", accessToken, {\n      sameSite: \"lax\",\n      secure: false, // Set to false for local development\n      httpOnly: true,\n      path: \"/\",\n    })\n\n    // Set additional cookies for compatibility\n    setCookieWithOptions(c, \"accessToken\", accessToken, {\n      sameSite: \"lax\",\n      secure: false, // Set to false for local development\n      httpOnly: true,\n      path: \"/\",\n    })\n\n    setCookieWithOptions(c, \"token\", accessToken, {\n      sameSite: \"lax\",\n      secure: false, // Set to false for local development\n      httpOnly: true,\n      path: \"/\",\n    })\n\n    // Set refresh token\n    setCookieWithOptions(c, \"refresh_token\", newRefreshToken, {\n      sameSite: \"lax\",\n      secure: false, // Set to false for local development\n      httpOnly: true,\n      path: \"/\",\n    })\n\n    // Set authenticated flag for client-side checks\n    setCookieWithOptions(c, \"authenticated\", \"true\", {\n      httpOnly: false,\n      sameSite: \"lax\",\n      secure: false, // Set to false for local development\n      path: \"/\",\n      maxAge: 7 * 24 * 60 * 60,\n    })\n\n    // Log cookie setting\n    console.log(\"Refreshed auth cookies\")\n\n    return c.json({\n      success: true,\n      message: \"Token refreshed\",\n      data: {\n        accessToken,\n        refreshToken: newRefreshToken,\n      },\n    })\n  } catch (error) {\n    console.error(\"Token refresh error:\", error)\n    if (error instanceof AuthError) {\n      throw error\n    }\n    throw new AuthError(\n      AuthErrorCode.INVALID_TOKEN,\n      \"Failed to refresh token\",\n      401\n    )\n  }\n})\n\n// Request password reset with real implementation\nauth.post(\n  \"/forgot-password\",\n  csrfProtection,\n  zValidator(\"json\", forgotPasswordSchema),\n  async (c) => {\n    try {\n      const { email } = await c.req.json()\n      console.log(`Password reset requested for: ${email}`)\n\n      await AuthService.forgotPassword(email)\n\n      return c.json({\n        success: true,\n        message: \"Password reset email sent\",\n      })\n    } catch (error) {\n      console.error(\"Forgot password error:\", error)\n      // Don't expose whether the email exists or not\n      return c.json({\n        success: true,\n        message: \"If the email exists, a password reset link has been sent\",\n      })\n    }\n  }\n)\n\n// Reset password with real implementation\nauth.post(\n  \"/reset-password\",\n  csrfProtection,\n  zValidator(\"json\", resetPasswordSchema),\n  async (c) => {\n    try {\n      const { token, password } = await c.req.json()\n\n      await AuthService.resetPassword(token, password)\n\n      return c.json({\n        success: true,\n        message: \"Password reset successfully\",\n      })\n    } catch (error) {\n      console.error(\"Reset password error:\", error)\n      if (error instanceof AuthError) {\n        throw error\n      }\n      throw new AuthError(\n        AuthErrorCode.RESET_PASSWORD_FAILED,\n        \"Failed to reset password\",\n        400\n      )\n    }\n  }\n)\n\n// Logout route with real implementation\nauth.post(\"/logout\", csrfProtection, async (c) => {\n  try {\n    // Get the token from cookies or Authorization header\n    const authHeader = c.req.header(\"Authorization\")\n    let token: string | undefined\n\n    if (authHeader && authHeader.startsWith(\"Bearer \")) {\n      token = authHeader.split(\" \")[1]\n    } else {\n      // If not in header, try to get from cookies\n      const cookieHeader = c.req.raw.headers.get(\"cookie\")\n      if (cookieHeader) {\n        const cookies = cookieHeader.split(\";\")\n        const authCookie = cookies.find((cookie) =>\n          cookie.trim().startsWith(\"auth_token=\")\n        )\n        if (authCookie) {\n          token = authCookie.split(\"=\")[1]\n        }\n      }\n    }\n\n    // If we have a token, revoke it\n    if (token) {\n      try {\n        // Get client information for logging\n        const clientInfo = {\n          ipAddress:\n            c.req.header(\"x-forwarded-for\") ||\n            c.req.header(\"x-real-ip\") ||\n            c.req.header(\"cf-connecting-ip\") ||\n            \"unknown\",\n          userAgent: c.req.header(\"user-agent\") || \"unknown\",\n          deviceId: c.req.header(\"x-device-id\") || \"unknown\",\n        }\n\n        // Verify the token to get the payload\n        const validationResult =\n          await tokenValidationService.validateAccessToken(token, {\n            checkBlacklist: false,\n            clientInfo,\n          })\n\n        if (!validationResult.isValid) {\n          console.log(\n            \"Token validation failed during logout:\",\n            validationResult.error\n          )\n          // Continue with logout even if token is invalid\n        }\n\n        // Use validation result as payload\n        const payload = {\n          userId: validationResult.userId || \"unknown\",\n          email: validationResult.email || \"unknown\",\n        }\n\n        // Revoke the access token\n        await revokeToken(token)\n\n        // Get refresh token from cookies\n        const cookieHeader = c.req.raw.headers.get(\"cookie\")\n        if (cookieHeader) {\n          const cookies = cookieHeader.split(\";\")\n          const refreshCookie = cookies.find((cookie) =>\n            cookie.trim().startsWith(\"refresh_token=\")\n          )\n\n          if (refreshCookie) {\n            const refreshToken = refreshCookie.split(\"=\")[1]\n            // Revoke the refresh token\n            await revokeToken(refreshToken)\n          }\n        }\n\n        // Log the logout\n        console.log(`User ${payload.userId} logged out successfully`)\n\n        // Log security event\n        await securityLogService.logLogout(\n          payload.userId,\n          payload.email,\n          c.req.header(\"x-forwarded-for\") ||\n            c.req.header(\"x-real-ip\") ||\n            \"unknown\",\n          c.req.header(\"user-agent\") || \"unknown\"\n        )\n      } catch (error) {\n        console.error(\"Error during token revocation:\", error)\n      }\n    }\n\n    // Clear all possible auth cookies\n    clearCookie(c, \"auth_token\")\n    clearCookie(c, \"accessToken\")\n    clearCookie(c, \"token\")\n    clearCookie(c, \"refresh_token\")\n    clearCookie(c, \"authenticated\")\n\n    console.log(\"Cleared all auth cookies\")\n\n    return c.json({ success: true, message: \"Logged out successfully\" })\n  } catch (error) {\n    console.error(\"Logout error:\", error)\n    // Still clear all possible auth cookies even if there's an error\n    clearCookie(c, \"auth_token\")\n    clearCookie(c, \"accessToken\")\n    clearCookie(c, \"token\")\n    clearCookie(c, \"refresh_token\")\n    clearCookie(c, \"authenticated\")\n\n    console.log(\"Cleared all auth cookies (error case)\")\n\n    return c.json({ success: true, message: \"Logged out successfully\" })\n  }\n})\n\n// Get current user (me) endpoint\nauth.use(\"/me\", authMiddleware)\nauth.get(\"/me\", async (c) => {\n  const userId = c.var.userId\n  if (!userId) {\n    throw new HTTPException(401, { message: \"Unauthorized\" })\n  }\n  try {\n    // Get user from database\n    const user = await prisma.user.findUnique({\n      where: { id: userId },\n      select: {\n        id: true,\n        email: true,\n        name: true,\n        role: true,\n        image: true,\n        emailVerified: true,\n        createdAt: true,\n        updatedAt: true,\n      },\n    })\n\n    if (!user) {\n      throw new AuthError(\n        AuthErrorCode.INVALID_CREDENTIALS,\n        \"User not found\",\n        404\n      )\n    }\n\n    return c.json({\n      success: true,\n      data: user,\n    })\n  } catch (error) {\n    console.error(\"Get current user error:\", error)\n    if (error instanceof AuthError) {\n      throw error\n    }\n    throw new AuthError(\n      AuthErrorCode.INVALID_CREDENTIALS,\n      \"Authentication failed\",\n      401\n    )\n  }\n})\n\n// Auth check endpoint - lightweight status check for client-side apps\nauth.get(\"/check\", async (c) => {\n  try {\n    // First try to get token from Authorization header\n    const authHeader = c.req.header(\"Authorization\")\n    let token: string | undefined\n\n    if (authHeader && authHeader.startsWith(\"Bearer \")) {\n      token = authHeader.split(\" \")[1]\n    } else {\n      // If not in header, try to get from cookies\n      const cookieHeader = c.req.raw.headers.get(\"cookie\")\n      console.log(\"Auth check - Cookie header:\", cookieHeader)\n\n      if (cookieHeader) {\n        const cookies = cookieHeader.split(\";\")\n\n        // Try multiple possible cookie names\n        const possibleCookieNames = [\"auth_token\", \"accessToken\", \"token\"]\n\n        for (const cookieName of possibleCookieNames) {\n          const authCookie = cookies.find((cookie) =>\n            cookie.trim().startsWith(`${cookieName}=`)\n          )\n\n          if (authCookie) {\n            token = authCookie.split(\"=\")[1]\n            console.log(`Auth check - Found token in cookie: ${cookieName}`)\n            break\n          }\n        }\n      }\n    }\n\n    // Check if we have a token\n    if (!token) {\n      return c.json(\n        {\n          authenticated: false,\n          message: \"No authentication token found\",\n        },\n        200\n      ) // Return 200 even for unauthenticated to avoid CORS issues\n    }\n\n    // Check if token is blacklisted (only if Redis is available)\n    if (redisService.isAvailable()) {\n      const isBlacklisted = await redisService.isTokenBlacklisted(token)\n      if (isBlacklisted) {\n        return c.json(\n          {\n            authenticated: false,\n            message: \"Token has been invalidated\",\n          },\n          200\n        )\n      }\n    }\n\n    // Verify the token using the unified token validation service\n    try {\n      // Get client information for logging\n      const clientInfo = {\n        ipAddress:\n          c.req.header(\"x-forwarded-for\") ||\n          c.req.header(\"x-real-ip\") ||\n          c.req.header(\"cf-connecting-ip\") ||\n          \"unknown\",\n        userAgent: c.req.header(\"user-agent\") || \"unknown\",\n        deviceId: c.req.header(\"x-device-id\") || \"unknown\",\n      }\n\n      // Validate the token\n      const validationResult = await tokenValidationService.validateAccessToken(\n        token,\n        {\n          checkBlacklist: true,\n          clientInfo,\n        }\n      )\n\n      if (!validationResult.isValid) {\n        return c.json(\n          {\n            authenticated: false,\n            message: validationResult.error || \"Invalid token\",\n          },\n          200\n        )\n      }\n\n      // Return user info without sensitive data\n      return c.json(\n        {\n          authenticated: true,\n          user: {\n            id: validationResult.userId,\n            email: validationResult.email,\n            role: validationResult.role,\n          },\n        },\n        200\n      )\n    } catch (tokenError) {\n      console.log(\"Token verification failed:\", tokenError)\n\n      // Return clear unauthenticated state\n      return c.json(\n        {\n          authenticated: false,\n          message: \"Invalid or expired token\",\n        },\n        200\n      ) // Return 200 to avoid CORS issues\n    }\n  } catch (error) {\n    console.error(\"Auth check error:\", error)\n\n    // Return generic error but still 200 to avoid disrupting client\n    return c.json(\n      {\n        authenticated: false,\n        message: \"Authentication check failed\",\n      },\n      200\n    )\n  }\n})\n\n// CSRF token endpoint for secure form submission\nauth.get(\"/csrf\", async (c) => {\n  try {\n    // Generate a random CSRF token\n    const csrfToken = crypto.randomUUID()\n\n    // Set as a cookie with appropriate security settings\n    setCookieWithOptions(c, \"csrfToken\", csrfToken, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      sameSite: \"strict\",\n      maxAge: 60 * 60, // 1 hour\n    })\n\n    return c.json({ success: true, csrfToken })\n  } catch (error) {\n    console.error(\"CSRF token generation error:\", error)\n    throw new AuthError(\n      AuthErrorCode.INVALID_CREDENTIALS,\n      \"Could not generate security token\",\n      500\n    )\n  }\n})\n\n// Token validation endpoint\nauth.post(\"/validate-token\", async (c) => {\n  try {\n    const { token } = await c.req.json()\n\n    if (!token) {\n      return c.json({\n        isValid: false,\n        message: \"No token provided\",\n      })\n    }\n\n    try {\n      // Get client information for logging\n      const clientInfo = {\n        ipAddress:\n          c.req.header(\"x-forwarded-for\") ||\n          c.req.header(\"x-real-ip\") ||\n          c.req.header(\"cf-connecting-ip\") ||\n          \"unknown\",\n        userAgent: c.req.header(\"user-agent\") || \"unknown\",\n        deviceId: c.req.header(\"x-device-id\") || \"unknown\",\n      }\n\n      // Validate the token using the unified token validation service\n      const validationResult = await tokenValidationService.validateAccessToken(\n        token,\n        {\n          checkBlacklist: true,\n          logFailures: true,\n          clientInfo,\n        }\n      )\n\n      // Return validation result\n      if (validationResult.isValid) {\n        return c.json({\n          isValid: true,\n          userId: validationResult.userId,\n          email: validationResult.email,\n          role: validationResult.role,\n          exp: validationResult.exp,\n        })\n      } else {\n        return c.json({\n          isValid: false,\n          message: validationResult.error || \"Invalid token\",\n        })\n      }\n    } catch (tokenError) {\n      return c.json({\n        isValid: false,\n        message: \"Invalid or expired token\",\n      })\n    }\n  } catch (error) {\n    console.error(\"Token validation error:\", error)\n    return c.json({\n      isValid: false,\n      message: \"Token validation failed\",\n    })\n  }\n})\n\n// CSRF token endpoint - provides a CSRF token for client-side forms\nauth.get(\"/csrf-token\", async (c) => {\n  try {\n    // Generate a new CSRF token\n    const token = crypto.randomBytes(32).toString(\"hex\")\n\n    // Set the token as a cookie\n    setCookieWithOptions(c, \"csrf_token\", token, {\n      httpOnly: false, // Allow JavaScript access\n      sameSite: \"lax\",\n      secure: process.env.NODE_ENV === \"production\",\n      path: \"/\",\n      maxAge: 60 * 60 * 24, // 24 hours\n    })\n\n    // Return the token to the client\n    return c.json({\n      success: true,\n      csrfToken: token,\n    })\n  } catch (error) {\n    console.error(\"CSRF token generation error:\", error)\n    throw new AuthError(\n      AuthErrorCode.SERVER_ERROR,\n      \"Failed to generate CSRF token\",\n      500\n    )\n  }\n})\n\n// CSRF token validation middleware is now imported from middleware/csrf.ts\n\nexport default auth\n","import { Context, Next } from \"hono\"\nimport { ZodError } from \"zod\"\nimport { ContentfulStatusCode } from \"hono/utils/http-status\"\nimport { HTTPException } from \"hono/http-exception\"\nimport { AuthError, AuthErrorCode, ErrorResponse } from \"../types/error.types\"\n\n/**\n * Error codes for API errors\n */\nexport enum ErrorCode {\n  // System errors (1xxx)\n  INTERNAL_SERVER_ERROR = \"SYS001\",\n  SERVICE_UNAVAILABLE = \"SYS002\",\n  BAD_GATEWAY = \"SYS003\",\n  GATEWAY_TIMEOUT = \"SYS004\",\n\n  // Request errors (2xxx)\n  BAD_REQUEST = \"REQ001\",\n  VALIDATION_ERROR = \"REQ002\",\n  RESOURCE_NOT_FOUND = \"REQ003\",\n  METHOD_NOT_ALLOWED = \"REQ004\",\n  CONFLICT = \"REQ005\",\n  PAYLOAD_TOO_LARGE = \"REQ006\",\n\n  // Database errors (3xxx)\n  DATABASE_ERROR = \"DB001\",\n  CONSTRAINT_VIOLATION = \"DB002\",\n  UNIQUE_VIOLATION = \"DB003\",\n  FOREIGN_KEY_VIOLATION = \"DB004\",\n  TRANSACTION_ERROR = \"DB005\",\n\n  // Business logic errors (4xxx)\n  BUSINESS_RULE_VIOLATION = \"BIZ001\",\n  INVALID_STATE = \"BIZ002\",\n  DEPENDENT_SERVICE_ERROR = \"BIZ003\",\n  FEATURE_DISABLED = \"BIZ004\",\n}\n\n/**\n * Custom API Error class\n */\nexport class ApiError extends Error {\n  constructor(\n    public message: string,\n    public status: number = 500,\n    public code: ErrorCode | string = ErrorCode.INTERNAL_SERVER_ERROR,\n    public details?: Record<string, any>\n  ) {\n    super(message)\n    this.name = \"ApiError\"\n  }\n}\n\nfunction formatZodError(error: ZodError) {\n  const issues = error.issues.map((issue) => ({\n    path: issue.path.join(\".\"),\n    message: issue.message,\n  }))\n\n  // Create a summary message from all validation issues\n  const message = issues.map((issue) => issue.message).join(\", \")\n\n  return {\n    message,\n    errors: issues,\n  }\n}\n\n/**\n * Global error handler for Hono\n */\nexport const errorMiddleware = async (c: Context, next: Next) => {\n  try {\n    await next()\n  } catch (error) {\n    console.error(\"API Error:\", error)\n\n    // Format the error response based on the error type\n    const errorResponse = formatError(error)\n\n    // Log detailed error information for server-side debugging\n    if (errorResponse.status >= 500) {\n      console.error(\"Server Error:\", {\n        path: c.req.path,\n        method: c.req.method,\n        error: error instanceof Error ? error.stack : error,\n      })\n    }\n\n    // Return the formatted error response - convert status to number to satisfy Hono's type system\n    return c.json(errorResponse.body, errorResponse.status as any)\n  }\n}\n\n// Format different error types into a consistent structure\nfunction formatError(error: unknown): {\n  status: number\n  body: ErrorResponse\n} {\n  // Handle known error types\n  if (error instanceof ApiError) {\n    return {\n      status: error.status,\n      body: {\n        success: false,\n        code: error.code,\n        message: error.message,\n        details: error.details,\n      },\n    }\n  }\n\n  if (error instanceof AuthError) {\n    return {\n      status: error.status,\n      body: {\n        success: false,\n        code: error.code,\n        message: error.message,\n        details: error.details,\n      },\n    }\n  }\n\n  if (error instanceof HTTPException) {\n    return {\n      status: error.status,\n      body: {\n        success: false,\n        code: mapHttpStatusToErrorCode(error.status),\n        message: error.message || getDefaultMessageForStatus(error.status),\n        details: error.res?.body ? { body: error.res.body } : undefined,\n      },\n    }\n  }\n\n  // Handle generic Error objects\n  if (error instanceof Error) {\n    // Check for specific error types based on message or name\n    if (error.name === \"PrismaClientKnownRequestError\") {\n      return handlePrismaError(error)\n    }\n\n    // Default error response for unknown Error objects\n    return {\n      status: 500,\n      body: {\n        success: false,\n        code: ErrorCode.INTERNAL_SERVER_ERROR,\n        message: \"An unexpected error occurred\",\n        details:\n          process.env.NODE_ENV === \"development\"\n            ? { name: error.name, message: error.message }\n            : undefined,\n      },\n    }\n  }\n\n  // Handle unknown error types\n  return {\n    status: 500,\n    body: {\n      success: false,\n      code: ErrorCode.INTERNAL_SERVER_ERROR,\n      message: \"An unexpected error occurred\",\n      details:\n        process.env.NODE_ENV === \"development\"\n          ? { error: String(error) }\n          : undefined,\n    },\n  }\n}\n\n// Map HTTP status codes to error codes\nfunction mapHttpStatusToErrorCode(status: number): string {\n  switch (status) {\n    case 400:\n      return ErrorCode.BAD_REQUEST\n    case 401:\n      return AuthErrorCode.INVALID_TOKEN // Use auth error code for consistency\n    case 403:\n      return AuthErrorCode.FORBIDDEN // Use auth error code for consistency\n    case 404:\n      return ErrorCode.RESOURCE_NOT_FOUND\n    case 405:\n      return ErrorCode.METHOD_NOT_ALLOWED\n    case 409:\n      return ErrorCode.CONFLICT\n    case 413:\n      return ErrorCode.PAYLOAD_TOO_LARGE\n    case 422:\n      return ErrorCode.VALIDATION_ERROR\n    case 500:\n      return ErrorCode.INTERNAL_SERVER_ERROR\n    case 502:\n      return ErrorCode.BAD_GATEWAY\n    case 503:\n      return ErrorCode.SERVICE_UNAVAILABLE\n    case 504:\n      return ErrorCode.GATEWAY_TIMEOUT\n    default:\n      return ErrorCode.INTERNAL_SERVER_ERROR\n  }\n}\n\n// Get default message for HTTP status code\nfunction getDefaultMessageForStatus(status: number): string {\n  switch (status) {\n    case 400: return \"Bad request\"\n    case 401: return \"Unauthorized\"\n    case 403: return \"Forbidden\"\n    case 404: return \"Resource not found\"\n    case 405: return \"Method not allowed\"\n    case 409: return \"Conflict\"\n    case 413: return \"Payload too large\"\n    case 422: return \"Validation error\"\n    case 500: return \"Internal server error\"\n    case 502: return \"Bad gateway\"\n    case 503: return \"Service unavailable\"\n    case 504: return \"Gateway timeout\"\n    default: return \"An error occurred\"\n  }\n}\n\n// Handle Prisma-specific errors\nfunction handlePrismaError(error: Error): { \n  status: number; \n  body: ErrorResponse \n} {\n  // Extract Prisma error details (this is a simplified version)\n  const details: Record<string, any> = {}\n\n  // Check for common Prisma error patterns in the message\n  if (error.message.includes(\"Unique constraint failed\")) {\n    return {\n      status: 409,\n      body: {\n        success: false,\n        code: ErrorCode.UNIQUE_VIOLATION,\n        message: \"A record with this data already exists\",\n        details,\n      },\n    }\n  }\n\n  if (error.message.includes(\"Foreign key constraint failed\")) {\n    return {\n      status: 400,\n      body: {\n        success: false,\n        code: ErrorCode.FOREIGN_KEY_VIOLATION,\n        message: \"Referenced record does not exist\",\n        details,\n      },\n    }\n  }\n\n  // Default database error\n  return {\n    status: 500,\n    body: {\n      success: false,\n      code: ErrorCode.DATABASE_ERROR,\n      message: \"Database operation failed\",\n      details:\n        process.env.NODE_ENV === \"development\"\n          ? { error: error.message }\n          : undefined,\n    },\n  }\n}\n\n// Main error handler function for route handlers\nexport const errorHandler = (err: any, c?: Context) => {\n  // If context is not provided, return a formatted error object directly\n  if (!c) {\n    const { status, body } = formatError(err)\n    return { status, body }\n  }\n\n  // If context is provided, return a JSON response\n  const { status, body } = formatError(err)\n  return c.json(body, status as any)\n}\n","export enum AuthErrorCode {\n  INVALID_CREDENTIALS = \"AUTH001\",\n  ACCOUNT_LOCKED = \"AUTH002\",\n  TOKEN_EXPIRED = \"AUTH003\",\n  INSUFFICIENT_PERMISSIONS = \"AUTH004\",\n  TOKEN_BLACKLISTED = \"AUTH005\",\n  RATE_LIMITED = \"AUTH006\",\n  INVALID_TOKEN = \"AUTH007\",\n  EMAIL_NOT_VERIFIED = \"AUTH008\",\n  PASSWORD_POLICY = \"AUTH009\",\n  MFA_REQUIRED = \"AUTH010\",\n  FORBIDDEN = \"AUTH011\",\n  CSRF_TOKEN_INVALID = \"AUTH012\",\n  INVALID_CSRF = \"AUTH013\",\n  REGISTRATION_FAILED = \"AUTH014\",\n  VERIFICATION_FAILED = \"AUTH015\",\n  RESET_PASSWORD_FAILED = \"AUTH016\",\n  SERVER_ERROR = \"AUTH017\",\n}\n\nexport class AuthError extends Error {\n  constructor(\n    public code: AuthErrorCode,\n    message: string,\n    public status: number = 401,\n    public details?: Record<string, any>\n  ) {\n    super(message)\n    this.name = \"AuthError\"\n  }\n}\n\nexport interface ErrorResponse {\n  success: false\n  code: string\n  message: string\n  details?: Record<string, any> | any[]\n}\n","import { SignJWT, jwtVerify } from \"jose\"\nimport { config } from \"../config\"\nimport { UserRole } from \"../types/auth.types\"\n\n// Convert string to Uint8Array for jose\nconst textEncoder = new TextEncoder()\nconst jwtSecret = textEncoder.encode(config.jwt.secret)\nconst refreshSecret = textEncoder.encode(config.jwt.refreshSecret) // Use the refresh secret for refresh tokens\n\n/**\n * JWT payload interface\n */\nexport interface JwtPayload {\n  userId: string\n  email: string\n  role: UserRole\n  jti?: string // JWT ID for token identification\n  iat?: number // Issued at timestamp\n  exp?: number // Expiration timestamp\n  sub?: string // Subject (usually userId)\n  iss?: string // Issuer\n  aud?: string // Audience\n  deviceId?: string // Device identifier\n  ipAddress?: string // IP address of the client\n  userAgent?: string // User agent of the client\n  [key: string]: unknown\n}\n\n/**\n * Generate a random JWT ID\n */\nexport function generateJwtId(): string {\n  return crypto.randomUUID()\n}\n\n/**\n * Generate a JWT token with enhanced security\n */\nexport async function generateToken(\n  payload: JwtPayload,\n  expiresIn = config.jwt.expiresIn,\n  options: {\n    includeJti?: boolean\n    audience?: string\n    issuer?: string\n  } = {}\n): Promise<string> {\n  // Create a new JWT with the payload\n  let jwt = new SignJWT({ ...payload })\n    .setProtectedHeader({ alg: \"HS256\", typ: \"JWT\" })\n    .setIssuedAt()\n    .setExpirationTime(expiresIn)\n    .setSubject(payload.userId) // Set subject to userId\n\n  // Add JWT ID if requested (helps with token revocation)\n  if (options.includeJti !== false) {\n    jwt = jwt.setJti(payload.jti || generateJwtId())\n  }\n\n  // Set issuer if provided\n  if (options.issuer || config.jwt.issuer) {\n    jwt = jwt.setIssuer(options.issuer || config.jwt.issuer)\n  }\n\n  // Set audience if provided\n  if (options.audience || config.jwt.audience) {\n    jwt = jwt.setAudience(options.audience || config.jwt.audience)\n  }\n\n  // Sign the token\n  const token = await jwt.sign(jwtSecret)\n\n  return token\n}\n\n/**\n * Generate a refresh token with enhanced security\n */\nexport async function generateRefreshToken(\n  payload: JwtPayload,\n  expiresIn = config.jwt.refreshExpiresIn,\n  options: {\n    includeJti?: boolean\n    audience?: string\n    issuer?: string\n    family?: string // Token family for refresh token rotation\n  } = {}\n): Promise<string> {\n  // Create a new JWT with the payload\n  let jwt = new SignJWT({\n    ...payload,\n    // Add token family if provided (for refresh token rotation)\n    family: options.family || payload.family || generateJwtId(),\n  })\n    .setProtectedHeader({ alg: \"HS256\", typ: \"JWT\" })\n    .setIssuedAt()\n    .setExpirationTime(expiresIn)\n    .setSubject(payload.userId) // Set subject to userId\n\n  // Add JWT ID if requested (helps with token revocation)\n  if (options.includeJti !== false) {\n    jwt = jwt.setJti(payload.jti || generateJwtId())\n  }\n\n  // Set issuer if provided\n  if (options.issuer || config.jwt.issuer) {\n    jwt = jwt.setIssuer(options.issuer || config.jwt.issuer)\n  }\n\n  // Set audience if provided\n  if (options.audience || config.jwt.audience) {\n    jwt = jwt.setAudience(options.audience || config.jwt.audience)\n  }\n\n  // Sign the token with the refresh secret\n  const token = await jwt.sign(refreshSecret)\n\n  return token\n}\n\n/**\n * Verify a JWT token with enhanced security checks\n */\nexport async function verifyToken(\n  token: string,\n  options: {\n    audience?: string\n    issuer?: string\n    checkBlacklist?: boolean\n  } = {}\n): Promise<JwtPayload> {\n  try {\n    // Check if token is blacklisted\n    if (options.checkBlacklist !== false) {\n      const { redisService } = await import(\"../services/redis.service\")\n      if (\n        redisService.isAvailable() &&\n        (await redisService.isTokenBlacklisted(token))\n      ) {\n        throw new Error(\"Token has been revoked\")\n      }\n    }\n\n    // Verify the token\n    const { payload } = await jwtVerify(token, jwtSecret, {\n      // Add additional verification options\n      issuer: options.issuer || config.jwt.issuer,\n      audience: options.audience || config.jwt.audience,\n    })\n\n    return payload as unknown as JwtPayload\n  } catch (error) {\n    console.error(\"Token verification error:\", error)\n    if (error instanceof Error) {\n      throw error\n    }\n    throw new Error(\"Invalid token\")\n  }\n}\n\n/**\n * Revoke a token by adding it to the blacklist\n */\nexport async function revokeToken(\n  token: string,\n  expiresIn: number = config.jwt.expiresIn\n): Promise<void> {\n  const { redisService } = await import(\"../services/redis.service\")\n  if (redisService.isAvailable()) {\n    await redisService.blacklistToken(token, expiresIn)\n  }\n}\n\n/**\n * Revoke all tokens for a user\n */\nexport async function revokeAllUserTokens(userId: string): Promise<void> {\n  const { redisService } = await import(\"../services/redis.service\")\n  if (redisService.isAvailable()) {\n    // Add user to a blacklist that will be checked during token verification\n    const key = `user_blacklist:${userId}`\n    await redisService.set(\n      key,\n      Date.now().toString(),\n      config.jwt.refreshExpiresIn\n    )\n  }\n}\n\n/**\n * Store token family information for refresh token rotation\n */\nexport async function storeTokenFamily(\n  family: string,\n  tokenId: string,\n  expiresIn: number = config.jwt.refreshExpiresIn\n): Promise<void> {\n  const { redisService } = await import(\"../services/redis.service\")\n  if (redisService.isAvailable()) {\n    const key = `token_family:${family}`\n    await redisService.set(key, tokenId, expiresIn)\n  }\n}\n\nexport async function verifyRefreshToken(\n  token: string,\n  options: {\n    audience?: string\n    issuer?: string\n    checkBlacklist?: boolean\n    checkFamily?: boolean\n  } = {}\n): Promise<JwtPayload> {\n  try {\n    // Check if token is blacklisted\n    if (options.checkBlacklist !== false) {\n      const { redisService } = await import(\"../services/redis.service\")\n      if (\n        redisService.isAvailable() &&\n        (await redisService.isTokenBlacklisted(token))\n      ) {\n        throw new Error(\"Refresh token has been revoked\")\n      }\n    }\n\n    // Verify the token\n    const { payload } = await jwtVerify(token, refreshSecret, {\n      // Add additional verification options\n      issuer: options.issuer || config.jwt.issuer,\n      audience: options.audience || config.jwt.audience,\n    })\n\n    // Check if the token family has been revoked (for refresh token rotation)\n    if (options.checkFamily !== false && payload.family) {\n      const { redisService } = await import(\"../services/redis.service\")\n      if (redisService.isAvailable()) {\n        const familyKey = `token_family:${payload.family}`\n        const latestTokenId = await redisService.get(familyKey)\n\n        // If we have a record of this family but with a different token ID,\n        // it means this token has been superseded by a newer one\n        if (latestTokenId && latestTokenId !== payload.jti) {\n          // Blacklist this token as it's been superseded\n          await redisService.blacklistToken(token)\n          throw new Error(\"Refresh token has been superseded\")\n        }\n      }\n    }\n\n    return payload as unknown as JwtPayload\n  } catch (error) {\n    console.error(\"Refresh token verification error:\", error)\n    if (error instanceof Error) {\n      throw error\n    }\n    throw new Error(\"Invalid refresh token\")\n  }\n}\n","import { jwtVerify, decodeJwt } from \"jose\"\nimport { config } from \"../config\"\nimport { JwtPayload } from \"../utils/jwt\"\nimport { redisService } from \"./redis.service\"\nimport { AuthError, AuthErrorCode } from \"../types/error.types\"\nimport { prisma } from \"../lib/prisma\"\nimport { securityLogService, SecurityEventType } from \"./security-log.service\"\n\n// Convert string to Uint8Array for jose\nconst textEncoder = new TextEncoder()\nconst jwtSecret = textEncoder.encode(config.jwt.secret)\nconst refreshSecret = textEncoder.encode(config.jwt.refreshSecret)\n\n// Simple in-memory cache for token validation results\nconst tokenCache = new Map<\n  string,\n  {\n    userId: string\n    email: string\n    role: string\n    expiry: number\n    timestamp: number\n  }\n>()\n\n// Cache expiration time (5 minutes)\nconst CACHE_EXPIRY = 5 * 60 * 1000\n\n/**\n * Token validation result interface\n */\nexport interface TokenValidationResult {\n  isValid: boolean\n  userId?: string\n  email?: string\n  role?: string\n  exp?: number\n  error?: string\n  details?: Record<string, any>\n}\n\n/**\n * Token validation service\n * Provides unified token validation logic for the application\n */\nexport class TokenValidationService {\n  /**\n   * Validate an access token with full security checks\n   */\n  async validateAccessToken(\n    token: string,\n    options: {\n      audience?: string\n      issuer?: string\n      checkBlacklist?: boolean\n      logFailures?: boolean\n      clientInfo?: {\n        ipAddress?: string\n        userAgent?: string\n        deviceId?: string\n      }\n    } = {}\n  ): Promise<TokenValidationResult> {\n    try {\n      // Check cache first for performance\n      const cachedResult = this.getCachedValidation(token)\n      if (cachedResult) {\n        return {\n          isValid: true,\n          userId: cachedResult.userId,\n          email: cachedResult.email,\n          role: cachedResult.role,\n          exp: cachedResult.expiry\n        }\n      }\n\n      // Perform quick validation first (faster)\n      const quickResult = this.quickValidateToken(token)\n      if (!quickResult.isValid) {\n        // Log validation failure if requested\n        if (options.logFailures && options.clientInfo) {\n          await this.logValidationFailure(\n            token,\n            quickResult.error || \"Unknown error\",\n            options.clientInfo\n          )\n        }\n        return quickResult\n      }\n\n      // Check if token is blacklisted\n      if (options.checkBlacklist !== false && redisService.isAvailable()) {\n        const isBlacklisted = await redisService.isTokenBlacklisted(token)\n        if (isBlacklisted) {\n          // Log validation failure if requested\n          if (options.logFailures && options.clientInfo) {\n            await this.logValidationFailure(\n              token,\n              \"Token has been revoked\",\n              options.clientInfo\n            )\n          }\n          return {\n            isValid: false,\n            error: \"Token has been revoked\"\n          }\n        }\n      }\n\n      // Verify the token with full cryptographic validation\n      const { payload } = await jwtVerify(token, jwtSecret, {\n        issuer: options.issuer || config.jwt.issuer,\n        audience: options.audience || config.jwt.audience\n      })\n\n      const jwtPayload = payload as unknown as JwtPayload\n\n      // Cache the successful validation result\n      this.cacheValidationResult(token, jwtPayload)\n\n      return {\n        isValid: true,\n        userId: jwtPayload.userId,\n        email: jwtPayload.email,\n        role: jwtPayload.role,\n        exp: jwtPayload.exp\n      }\n    } catch (error) {\n      // Log validation failure if requested\n      if (options.logFailures && options.clientInfo) {\n        await this.logValidationFailure(\n          token,\n          error instanceof Error ? error.message : \"Unknown error\",\n          options.clientInfo\n        )\n      }\n\n      console.error(\"Token validation error:\", error)\n      \n      // Return appropriate error based on the type\n      if (error instanceof Error) {\n        if (error.message.includes(\"expired\")) {\n          return {\n            isValid: false,\n            error: \"Token has expired\"\n          }\n        }\n        return {\n          isValid: false,\n          error: error.message\n        }\n      }\n      \n      return {\n        isValid: false,\n        error: \"Invalid token\"\n      }\n    }\n  }\n\n  /**\n   * Validate a refresh token with full security checks\n   */\n  async validateRefreshToken(\n    token: string,\n    options: {\n      audience?: string\n      issuer?: string\n      checkBlacklist?: boolean\n      checkFamily?: boolean\n      logFailures?: boolean\n      clientInfo?: {\n        ipAddress?: string\n        userAgent?: string\n        deviceId?: string\n      }\n    } = {}\n  ): Promise<TokenValidationResult> {\n    try {\n      // Perform quick validation first (faster)\n      const quickResult = this.quickValidateToken(token)\n      if (!quickResult.isValid) {\n        // Log validation failure if requested\n        if (options.logFailures && options.clientInfo) {\n          await this.logValidationFailure(\n            token,\n            quickResult.error || \"Unknown error\",\n            options.clientInfo,\n            true\n          )\n        }\n        return quickResult\n      }\n\n      // Check if token is blacklisted\n      if (options.checkBlacklist !== false && redisService.isAvailable()) {\n        const isBlacklisted = await redisService.isTokenBlacklisted(token)\n        if (isBlacklisted) {\n          // Log validation failure if requested\n          if (options.logFailures && options.clientInfo) {\n            await this.logValidationFailure(\n              token,\n              \"Refresh token has been revoked\",\n              options.clientInfo,\n              true\n            )\n          }\n          return {\n            isValid: false,\n            error: \"Refresh token has been revoked\"\n          }\n        }\n      }\n\n      // Verify the token with full cryptographic validation\n      const { payload } = await jwtVerify(token, refreshSecret, {\n        issuer: options.issuer || config.jwt.issuer,\n        audience: options.audience || config.jwt.audience\n      })\n\n      const jwtPayload = payload as unknown as JwtPayload\n\n      // Check if the token family has been revoked (for refresh token rotation)\n      if (options.checkFamily !== false && jwtPayload.family && redisService.isAvailable()) {\n        const familyKey = `token_family:${jwtPayload.family}`\n        const latestTokenId = await redisService.get(familyKey)\n        \n        // If we have a record of this family but with a different token ID,\n        // it means this token has been superseded by a newer one\n        if (latestTokenId && latestTokenId !== jwtPayload.jti) {\n          // Log validation failure if requested\n          if (options.logFailures && options.clientInfo) {\n            await this.logValidationFailure(\n              token,\n              \"Refresh token has been superseded\",\n              options.clientInfo,\n              true\n            )\n          }\n          \n          // Blacklist this token as it's been superseded\n          await redisService.blacklistToken(token)\n          \n          return {\n            isValid: false,\n            error: \"Refresh token has been superseded\"\n          }\n        }\n      }\n\n      return {\n        isValid: true,\n        userId: jwtPayload.userId,\n        email: jwtPayload.email,\n        role: jwtPayload.role,\n        exp: jwtPayload.exp,\n        details: {\n          family: jwtPayload.family,\n          jti: jwtPayload.jti\n        }\n      }\n    } catch (error) {\n      // Log validation failure if requested\n      if (options.logFailures && options.clientInfo) {\n        await this.logValidationFailure(\n          token,\n          error instanceof Error ? error.message : \"Unknown error\",\n          options.clientInfo,\n          true\n        )\n      }\n\n      console.error(\"Refresh token validation error:\", error)\n      \n      // Return appropriate error based on the type\n      if (error instanceof Error) {\n        if (error.message.includes(\"expired\")) {\n          return {\n            isValid: false,\n            error: \"Refresh token has expired\"\n          }\n        }\n        return {\n          isValid: false,\n          error: error.message\n        }\n      }\n      \n      return {\n        isValid: false,\n        error: \"Invalid refresh token\"\n      }\n    }\n  }\n\n  /**\n   * Quick validation of JWT token (synchronous)\n   * This performs basic validation without cryptographic verification\n   */\n  quickValidateToken(token: string): TokenValidationResult {\n    try {\n      // Basic validation\n      if (!token || token.trim() === \"\") {\n        return { isValid: false, error: \"Empty token provided\" }\n      }\n\n      // Check token format\n      if (!token.includes(\".\") || token.split(\".\").length !== 3) {\n        return {\n          isValid: false,\n          error: \"Invalid token format (not a JWT)\"\n        }\n      }\n\n      // Decode the token without verification (fast operation)\n      try {\n        const decoded = decodeJwt(token)\n\n        // Check expiration\n        const currentTime = Math.floor(Date.now() / 1000)\n        if (decoded.exp && decoded.exp < currentTime) {\n          return { \n            isValid: false, \n            error: \"Token expired\",\n            exp: decoded.exp\n          }\n        }\n\n        // Extract user information\n        const userId =\n          typeof decoded.sub === \"string\"\n            ? decoded.sub\n            : typeof decoded.userId === \"string\"\n              ? decoded.userId\n              : \"\"\n\n        if (!userId) {\n          return { isValid: false, error: \"Missing user ID in token\" }\n        }\n\n        return { \n          isValid: true,\n          userId,\n          email: typeof decoded.email === \"string\" ? decoded.email : undefined,\n          role: typeof decoded.role === \"string\" ? decoded.role : undefined,\n          exp: typeof decoded.exp === \"number\" ? decoded.exp : undefined\n        }\n      } catch (decodeError) {\n        return { isValid: false, error: \"Failed to decode token\" }\n      }\n    } catch (error) {\n      return { \n        isValid: false, \n        error: error instanceof Error ? error.message : \"Unknown validation error\" \n      }\n    }\n  }\n\n  /**\n   * Get cached validation result\n   */\n  private getCachedValidation(\n    token: string\n  ): { userId: string; email: string; role: string; expiry: number } | null {\n    const cached = tokenCache.get(token)\n    \n    if (!cached) {\n      return null\n    }\n    \n    // Check if cache entry is expired\n    const now = Date.now()\n    if (now - cached.timestamp > CACHE_EXPIRY) {\n      tokenCache.delete(token)\n      return null\n    }\n    \n    // Check if token itself is expired\n    const currentTime = Math.floor(now / 1000)\n    if (cached.expiry < currentTime) {\n      tokenCache.delete(token)\n      return null\n    }\n    \n    return cached\n  }\n\n  /**\n   * Cache validation result\n   */\n  private cacheValidationResult(token: string, payload: JwtPayload): void {\n    try {\n      // Only cache if we have the necessary information\n      if (payload.userId && payload.exp) {\n        tokenCache.set(token, {\n          userId: payload.userId,\n          email: payload.email,\n          role: payload.role,\n          expiry: payload.exp,\n          timestamp: Date.now()\n        })\n      }\n    } catch (error) {\n      // If caching fails, just log and continue (non-critical)\n      console.warn(\"Failed to cache token validation result:\", error)\n    }\n  }\n\n  /**\n   * Log token validation failure\n   */\n  private async logValidationFailure(\n    token: string,\n    reason: string,\n    clientInfo: {\n      ipAddress?: string\n      userAgent?: string\n      deviceId?: string\n    },\n    isRefreshToken: boolean = false\n  ): Promise<void> {\n    try {\n      // Try to extract user info from token without verification\n      let userId: string | undefined\n      let email: string | undefined\n      \n      try {\n        const decoded = decodeJwt(token)\n        userId = decoded.sub?.toString() || decoded.userId?.toString()\n        email = decoded.email?.toString()\n      } catch (error) {\n        // Ignore decode errors\n      }\n      \n      // Log the validation failure\n      await securityLogService.logEvent({\n        userId,\n        email,\n        eventType: SecurityEventType.TOKEN_VALIDATION_FAILURE,\n        ipAddress: clientInfo.ipAddress,\n        userAgent: clientInfo.userAgent,\n        deviceId: clientInfo.deviceId,\n        details: {\n          reason,\n          isRefreshToken,\n          tokenFragment: token.length > 10 ? `${token.substring(0, 10)}...` : token\n        }\n      })\n    } catch (error) {\n      // Ensure logging errors don't break the application\n      console.error(\"Error logging token validation failure:\", error)\n    }\n  }\n\n  /**\n   * Validate a user exists and is active\n   */\n  async validateUser(userId: string): Promise<boolean> {\n    try {\n      const user = await prisma.user.findUnique({\n        where: { id: userId },\n        select: { id: true, locked: true }\n      })\n      \n      // User must exist and not be locked\n      return !!user && !user.locked\n    } catch (error) {\n      console.error(\"User validation error:\", error)\n      return false\n    }\n  }\n\n  /**\n   * Extract token from Authorization header\n   */\n  extractTokenFromHeader(header: string): string {\n    if (!header) {\n      throw new AuthError(\n        AuthErrorCode.INVALID_TOKEN,\n        \"No authorization header provided\",\n        401\n      )\n    }\n    \n    const [type, token] = header.split(\" \")\n    \n    if (type !== \"Bearer\" || !token) {\n      throw new AuthError(\n        AuthErrorCode.INVALID_TOKEN,\n        \"Invalid authorization header format\",\n        401\n      )\n    }\n    \n    return token\n  }\n\n  /**\n   * Get token from request (header or cookie)\n   */\n  getTokenFromRequest(c: any): string {\n    // Try to get from Authorization header first\n    const authHeader = c.req.header(\"Authorization\")\n    if (authHeader && authHeader.startsWith(\"Bearer \")) {\n      return this.extractTokenFromHeader(authHeader)\n    }\n    \n    // If not in header, try to get from cookies\n    const cookieHeader = c.req.raw.headers.get(\"cookie\")\n    if (cookieHeader) {\n      const cookies = cookieHeader.split(\";\")\n      \n      // Try multiple possible cookie names\n      const possibleCookieNames = [\"auth_token\", \"accessToken\", \"token\"]\n      \n      for (const cookieName of possibleCookieNames) {\n        const authCookie = cookies.find((cookie) =>\n          cookie.trim().startsWith(`${cookieName}=`)\n        )\n        \n        if (authCookie) {\n          return authCookie.split(\"=\")[1]\n        }\n      }\n    }\n    \n    throw new AuthError(\n      AuthErrorCode.INVALID_TOKEN,\n      \"No authentication token found\",\n      401\n    )\n  }\n}\n\n// Export singleton instance\nexport const tokenValidationService = new TokenValidationService()\n","import { prisma } from \"../lib/prisma\"\n\n/**\n * Security event types for logging\n */\nexport enum SecurityEventType {\n  LOGIN_SUCCESS = \"LOGIN_SUCCESS\",\n  LOGIN_FAILURE = \"LOGIN_FAILURE\",\n  LOGOUT = \"LOGOUT\",\n  PASSWORD_RESET_REQUEST = \"PASSWORD_RESET_REQUEST\",\n  PASSWORD_RESET_SUCCESS = \"PASSWORD_RESET_SUCCESS\",\n  PASSWORD_RESET_FAILURE = \"PASSWORD_RESET_FAILURE\",\n  ACCOUNT_LOCKED = \"ACCOUNT_LOCKED\",\n  ACCOUNT_UNLOCKED = \"ACCOUNT_UNLOCKED\",\n  TOKEN_REFRESH = \"TOKEN_REFRESH\",\n  TOKEN_REVOKED = \"TOKEN_REVOKED\",\n  TOKEN_VALIDATION_FAILURE = \"TOKEN_VALIDATION_FAILURE\",\n  TOKEN_VALIDATION_SUCCESS = \"TOKEN_VALIDATION_SUCCESS\",\n  EMAIL_VERIFICATION = \"EMAIL_VERIFICATION\",\n  REGISTRATION = \"REGISTRATION\",\n  PROFILE_UPDATE = \"PROFILE_UPDATE\",\n  PERMISSION_CHANGE = \"PERMISSION_CHANGE\",\n  SUSPICIOUS_ACTIVITY = \"SUSPICIOUS_ACTIVITY\",\n  CSRF_VIOLATION = \"CSRF_VIOLATION\",\n  RATE_LIMIT_EXCEEDED = \"RATE_LIMIT_EXCEEDED\",\n}\n\n/**\n * Security log entry interface\n */\ninterface SecurityLogEntry {\n  userId?: string\n  email?: string\n  eventType: SecurityEventType\n  ipAddress?: string\n  userAgent?: string\n  deviceId?: string\n  details?: Record<string, any>\n}\n\n/**\n * Service for logging security-related events\n */\nexport class SecurityLogService {\n  /**\n   * Log a security event\n   */\n  async logEvent(entry: SecurityLogEntry): Promise<void> {\n    try {\n      // Log to database if available\n      if (prisma) {\n        // Check if we have a SecurityLog model\n        // If not, just log to console\n        try {\n          // @ts-ignore - SecurityLog model might not exist yet\n          await prisma.securityLog.create({\n            data: {\n              userId: entry.userId,\n              email: entry.email,\n              eventType: entry.eventType,\n              ipAddress: entry.ipAddress,\n              userAgent: entry.userAgent,\n              deviceId: entry.deviceId,\n              details: entry.details ? JSON.stringify(entry.details) : null,\n            },\n          })\n        } catch (error) {\n          // If model doesn't exist, log to console\n          console.warn(\n            \"SecurityLog model not available, logging to console only\"\n          )\n          this.logToConsole(entry)\n        }\n      } else {\n        // Fallback to console logging\n        this.logToConsole(entry)\n      }\n    } catch (error) {\n      // Ensure logging errors don't break the application\n      console.error(\"Error logging security event:\", error)\n      this.logToConsole(entry)\n    }\n  }\n\n  /**\n   * Log a security event to the console\n   */\n  private logToConsole(entry: SecurityLogEntry): void {\n    const timestamp = new Date().toISOString()\n    const userInfo = entry.userId\n      ? `User: ${entry.userId}`\n      : entry.email\n        ? `Email: ${entry.email}`\n        : \"Anonymous\"\n    const location = entry.ipAddress ? `IP: ${entry.ipAddress}` : \"\"\n    const device = entry.deviceId\n      ? `Device: ${entry.deviceId}`\n      : entry.userAgent\n        ? `UA: ${entry.userAgent}`\n        : \"\"\n\n    console.log(\n      `[SECURITY] ${timestamp} | ${entry.eventType} | ${userInfo} | ${location} | ${device}`\n    )\n\n    if (entry.details) {\n      console.log(`[SECURITY] Details:`, entry.details)\n    }\n  }\n\n  /**\n   * Log a successful login\n   */\n  async logLoginSuccess(\n    userId: string,\n    email: string,\n    ipAddress?: string,\n    userAgent?: string,\n    deviceId?: string\n  ): Promise<void> {\n    await this.logEvent({\n      userId,\n      email,\n      eventType: SecurityEventType.LOGIN_SUCCESS,\n      ipAddress,\n      userAgent,\n      deviceId,\n    })\n  }\n\n  /**\n   * Log a failed login attempt\n   */\n  async logLoginFailure(\n    email: string,\n    ipAddress?: string,\n    userAgent?: string,\n    reason?: string\n  ): Promise<void> {\n    await this.logEvent({\n      email,\n      eventType: SecurityEventType.LOGIN_FAILURE,\n      ipAddress,\n      userAgent,\n      details: reason ? { reason } : undefined,\n    })\n  }\n\n  /**\n   * Log a logout event\n   */\n  async logLogout(\n    userId: string,\n    email: string,\n    ipAddress?: string,\n    userAgent?: string\n  ): Promise<void> {\n    await this.logEvent({\n      userId,\n      email,\n      eventType: SecurityEventType.LOGOUT,\n      ipAddress,\n      userAgent,\n    })\n  }\n\n  /**\n   * Log an account lockout\n   */\n  async logAccountLocked(\n    userId: string,\n    email: string,\n    reason: string,\n    ipAddress?: string\n  ): Promise<void> {\n    await this.logEvent({\n      userId,\n      email,\n      eventType: SecurityEventType.ACCOUNT_LOCKED,\n      ipAddress,\n      details: { reason },\n    })\n  }\n\n  /**\n   * Log suspicious activity\n   */\n  async logSuspiciousActivity(\n    email?: string,\n    userId?: string,\n    activityType?: string,\n    ipAddress?: string,\n    details?: Record<string, any>\n  ): Promise<void> {\n    await this.logEvent({\n      userId,\n      email,\n      eventType: SecurityEventType.SUSPICIOUS_ACTIVITY,\n      ipAddress,\n      details: {\n        activityType,\n        ...details,\n      },\n    })\n  }\n\n  /**\n   * Log a CSRF violation\n   */\n  async logCsrfViolation(\n    ipAddress?: string,\n    userAgent?: string,\n    path?: string\n  ): Promise<void> {\n    await this.logEvent({\n      eventType: SecurityEventType.CSRF_VIOLATION,\n      ipAddress,\n      userAgent,\n      details: { path },\n    })\n  }\n\n  /**\n   * Log a rate limit exceeded event\n   */\n  async logRateLimitExceeded(\n    ipAddress: string,\n    path: string,\n    method: string\n  ): Promise<void> {\n    await this.logEvent({\n      eventType: SecurityEventType.RATE_LIMIT_EXCEEDED,\n      ipAddress,\n      details: { path, method },\n    })\n  }\n}\n\n// Export singleton instance\nexport const securityLogService = new SecurityLogService()\n","import { prisma } from \"../lib/prisma\"\nimport { compare, hash } from \"bcryptjs\"\nimport { sign, verify } from \"jsonwebtoken\"\nimport { HTTPException } from \"hono/http-exception\"\nimport { User, UserRole } from \"@prisma/client\"\nimport { generateToken, JwtPayload } from \"../utils/jwt\"\nimport { ApiError, ErrorCode } from \"../middleware/error-handler\"\nimport { AuthError, AuthErrorCode } from \"../types/error.types\"\nimport {\n  generateRefreshToken,\n  JwtPayload,\n  verifyRefreshToken,\n  generateJwtId,\n  storeTokenFamily,\n  revokeToken,\n  revokeAllUserTokens,\n} from \"../utils/jwt\"\nimport {\n  LoginRequest,\n  RegisterRequest,\n  AuthResponse,\n  UserRole as AppUserRole,\n} from \"../types/auth.types\"\nimport { randomUUID } from \"crypto\"\nimport { mapPrismaRoleToAppRole } from \"../utils/role-mapper\"\nimport { emailService } from \"../services/email.service\"\nimport { generateToken as createJwtToken, verifyToken } from \"../utils/jwt\"\nimport { accountLockoutService } from \"./account-lockout.service\"\nimport { securityLogService, SecurityEventType } from \"./security-log.service\"\n\nexport interface AuthResult {\n  success: boolean\n  token?: string\n  error?: string\n}\n\nexport class AuthService {\n  constructor() {}\n\n  private static generateToken(user: User): string {\n    return sign(\n      {\n        userId: user.id,\n        email: user.email,\n        role: mapPrismaRoleToAppRole(user.role),\n      },\n      process.env.JWT_SECRET!,\n      { expiresIn: \"24h\" }\n    )\n  }\n\n  private static async validatePassword(\n    password: string,\n    hashedPassword: string\n  ): Promise<boolean> {\n    return compare(password, hashedPassword)\n  }\n\n  static async login(data: LoginRequest): Promise<AuthResponse> {\n    console.log(\"AuthService.login called with email:\", data.email)\n\n    try {\n      // Check if account is locked\n      await accountLockoutService.checkAccountStatus(data.email)\n\n      const user = await prisma.user.findUnique({\n        where: { email: data.email },\n      })\n\n      console.log(\"User found:\", user ? \"Yes\" : \"No\")\n\n      // Get client info for security logging\n      const ipAddress = data.ipAddress || \"unknown\"\n      const userAgent = data.userAgent || \"unknown\"\n\n      if (!user) {\n        console.log(\"User not found, recording failed attempt\")\n        // Record failed attempt even if user doesn't exist (prevents user enumeration)\n        await accountLockoutService.recordFailedAttempt(\n          data.email,\n          ipAddress,\n          userAgent\n        )\n\n        // Log security event\n        await securityLogService.logLoginFailure(\n          data.email,\n          ipAddress,\n          userAgent,\n          \"User not found\"\n        )\n\n        throw new HTTPException(401, { message: \"Invalid credentials\" })\n      }\n\n      console.log(\"Validating password\")\n      const isValidPassword = await this.validatePassword(\n        data.password,\n        user.password\n      )\n\n      console.log(\"Password valid:\", isValidPassword)\n\n      if (!isValidPassword) {\n        console.log(\"Invalid password, recording failed attempt\")\n        // Record failed attempt\n        await accountLockoutService.recordFailedAttempt(\n          user.email,\n          ipAddress,\n          userAgent\n        )\n\n        // Log security event\n        await securityLogService.logLoginFailure(\n          user.email,\n          ipAddress,\n          userAgent,\n          \"Invalid password\"\n        )\n\n        throw new HTTPException(401, { message: \"Invalid credentials\" })\n      }\n\n      // Reset failed attempts counter on successful login\n      await accountLockoutService.resetFailedAttempts(user.email)\n\n      // Log successful login\n      await securityLogService.logLoginSuccess(\n        user.id,\n        user.email,\n        ipAddress,\n        userAgent,\n        data.deviceId\n      )\n\n      console.log(\"Generating tokens with enhanced security\")\n\n      // Create a token family for refresh token rotation\n      const tokenFamily = generateJwtId()\n\n      // Create token payload with enhanced security\n      const tokenPayload = {\n        userId: user.id,\n        email: user.email,\n        role: mapPrismaRoleToAppRole(user.role),\n        // Add additional security claims\n        jti: generateJwtId(),\n      }\n\n      // Generate access token with shorter expiration (15 minutes)\n      const accessToken = await generateToken(tokenPayload, \"15m\", {\n        includeJti: true,\n      })\n\n      // Generate refresh token with the token family\n      const refreshTokenId = generateJwtId()\n      const refreshToken = await generateRefreshToken(\n        tokenPayload,\n        \"7d\", // 7 days\n        {\n          includeJti: true,\n          family: tokenFamily,\n        }\n      )\n\n      // Store the token family for future validation\n      await storeTokenFamily(tokenFamily, refreshTokenId)\n      const { password: _, ...userWithoutPassword } = user\n\n      console.log(\"Login successful, returning response\")\n      return {\n        user: {\n          id: user.id,\n          name: user.name || \"\",\n          email: user.email,\n          role: mapPrismaRoleToAppRole(user.role),\n          organization: user.organization || undefined,\n          department: user.department || undefined,\n        },\n        accessToken,\n        refreshToken,\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error)\n      throw new HTTPException(500, { message: \"Authentication failed\" })\n    }\n  }\n\n  static async register(data: RegisterRequest): Promise<AuthResponse> {\n    try {\n      // Check if user already exists\n      const existingUser = await prisma.user.findUnique({\n        where: { email: data.email },\n      })\n\n      if (existingUser) {\n        throw new HTTPException(400, { message: \"Email already registered\" })\n      }\n\n      // Hash the password\n      const hashedPassword = await hash(data.password, 10)\n\n      // Create the user\n      const user = await prisma.user.create({\n        data: {\n          email: data.email,\n          password: hashedPassword,\n          name: data.name,\n          role: UserRole.USER,\n          organization: data.organization,\n          department: data.department,\n          phone: data.phone,\n        },\n      })\n\n      // Generate tokens with enhanced security\n      // Create a token family for refresh token rotation\n      const tokenFamily = generateJwtId()\n\n      // Create token payload with enhanced security\n      const tokenPayload = {\n        userId: user.id,\n        email: user.email,\n        role: mapPrismaRoleToAppRole(user.role),\n        // Add additional security claims\n        jti: generateJwtId(),\n      }\n\n      // Generate access token with shorter expiration (15 minutes)\n      const accessToken = await generateToken(tokenPayload, \"15m\", {\n        includeJti: true,\n      })\n\n      // Generate refresh token with the token family\n      const refreshTokenId = generateJwtId()\n      const refreshToken = await generateRefreshToken(\n        tokenPayload,\n        \"7d\", // 7 days\n        {\n          includeJti: true,\n          family: tokenFamily,\n        }\n      )\n\n      // Store the token family for future validation\n      await storeTokenFamily(tokenFamily, refreshTokenId)\n\n      // Remove password from response\n      const { password: _, ...userWithoutPassword } = user\n\n      return {\n        user: {\n          id: user.id,\n          name: user.name || \"\",\n          email: user.email,\n          role: mapPrismaRoleToAppRole(user.role),\n          organization: user.organization || undefined,\n          department: user.department || undefined,\n        },\n        accessToken,\n        refreshToken,\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error)\n      if (error instanceof HTTPException) {\n        throw error\n      }\n      throw new HTTPException(500, { message: \"Registration failed\" })\n    }\n  }\n\n  static async validateToken(token: string): Promise<User> {\n    try {\n      const decoded = verify(token, process.env.JWT_SECRET!) as {\n        userId: string\n      }\n\n      const user = await prisma.user.findUnique({\n        where: { id: decoded.userId },\n      })\n\n      if (!user) {\n        throw new HTTPException(401, { message: \"User not found\" })\n      }\n\n      return user\n    } catch (error) {\n      console.error(\"Token validation error:\", error)\n      throw new HTTPException(401, { message: \"Invalid token\" })\n    }\n  }\n\n  async verifyEmail(token: string): Promise<AuthResult> {\n    try {\n      const user = await prisma.user.findUnique({\n        where: { id: token },\n      })\n\n      if (!user) {\n        return { success: false, error: \"Invalid verification token\" }\n      }\n\n      await prisma.user.update({\n        where: { id: user.id },\n        data: { emailVerified: new Date() },\n      })\n\n      return { success: true }\n    } catch (error) {\n      console.error(\"Email verification error:\", error)\n      return { success: false, error: \"Email verification failed\" }\n    }\n  }\n\n  async refreshToken(refreshToken: string): Promise<AuthResult> {\n    try {\n      const jwtPayload = await verifyRefreshToken(refreshToken)\n      const tokenPayload: JwtPayload = {\n        userId: jwtPayload.userId,\n        email: jwtPayload.email,\n        role: jwtPayload.role,\n      }\n      const accessToken = await createJwtToken(tokenPayload)\n      const newRefreshToken = await generateRefreshToken(jwtPayload)\n      return { success: true, token: accessToken }\n    } catch (error) {\n      console.error(\"Refresh token error:\", error)\n      return { success: false, error: \"Refresh token failed\" }\n    }\n  }\n\n  async forgotPassword(email: string): Promise<void> {\n    const user = await prisma.user.findUnique({\n      where: { email },\n    })\n\n    if (!user) {\n      // Don't reveal that the user doesn't exist\n      return\n    }\n\n    const token = randomUUID()\n    const expires = new Date()\n    expires.setHours(expires.getHours() + 1)\n\n    await prisma.verificationToken.create({\n      data: {\n        identifier: email,\n        token,\n        expires,\n      },\n    })\n\n    // Send password reset email\n    await emailService.sendPasswordResetEmail(email, token)\n  }\n\n  async resetPassword(token: string, newPassword: string): Promise<void> {\n    const verificationToken = await prisma.verificationToken.findUnique({\n      where: { token },\n    })\n\n    if (!verificationToken) {\n      throw new AuthError(\n        AuthErrorCode.INVALID_TOKEN,\n        \"Invalid or expired token\",\n        400\n      )\n    }\n\n    if (verificationToken.expires < new Date()) {\n      await prisma.verificationToken.delete({\n        where: { token },\n      })\n      throw new AuthError(AuthErrorCode.TOKEN_EXPIRED, \"Token has expired\", 400)\n    }\n\n    const hashedPassword = await hash(newPassword, 10)\n\n    await prisma.user.update({\n      where: { email: verificationToken.identifier },\n      data: { password: hashedPassword },\n    })\n\n    await prisma.verificationToken.delete({\n      where: { token },\n    })\n  }\n\n  static async verifyEmail(token: string): Promise<void> {\n    try {\n      const verificationToken = await prisma.verificationToken.findFirst({\n        where: {\n          token,\n          expires: {\n            gt: new Date(),\n          },\n        },\n      })\n\n      if (!verificationToken) {\n        throw new AuthError(\n          AuthErrorCode.INVALID_TOKEN,\n          \"Invalid or expired token\",\n          400\n        )\n      }\n\n      // Update user\n      await prisma.user.update({\n        where: { email: verificationToken.identifier },\n        data: { emailVerified: new Date() },\n      })\n\n      // Delete verification token\n      await prisma.verificationToken.delete({\n        where: { token },\n      })\n    } catch (error) {\n      console.error(\"Email verification error:\", error)\n      if (error instanceof AuthError) {\n        throw error\n      }\n      throw new AuthError(\n        AuthErrorCode.VERIFICATION_FAILED,\n        \"Email verification failed\",\n        500\n      )\n    }\n  }\n\n  static async forgotPassword(email: string): Promise<void> {\n    try {\n      // Find user by email\n      const user = await prisma.user.findUnique({\n        where: { email },\n      })\n\n      if (!user) {\n        // Don't reveal that the user doesn't exist\n        return\n      }\n\n      // Generate token\n      const token = randomUUID()\n      const expires = new Date()\n      expires.setHours(expires.getHours() + 1)\n\n      // Create verification token\n      await prisma.verificationToken.create({\n        data: {\n          identifier: email,\n          token,\n          expires,\n        },\n      })\n\n      // Send password reset email\n      try {\n        await emailService.sendPasswordResetEmail(email, token)\n      } catch (error) {\n        console.error(\"Email service error:\", error)\n        // In development, just log the token\n        if (process.env.NODE_ENV === \"development\") {\n          console.log(`[DEV] Password reset token for ${email}: ${token}`)\n        }\n      }\n    } catch (error) {\n      console.error(\"Forgot password error:\", error)\n      // Don't expose errors to the client for security reasons\n    }\n  }\n\n  static async resetPassword(\n    token: string,\n    newPassword: string\n  ): Promise<void> {\n    try {\n      // Find verification token\n      const verificationToken = await prisma.verificationToken.findUnique({\n        where: { token },\n      })\n\n      if (!verificationToken) {\n        throw new AuthError(\n          AuthErrorCode.INVALID_TOKEN,\n          \"Invalid or expired token\",\n          400\n        )\n      }\n\n      // Check if token is expired\n      if (verificationToken.expires < new Date()) {\n        await prisma.verificationToken.delete({\n          where: { token },\n        })\n        throw new AuthError(\n          AuthErrorCode.TOKEN_EXPIRED,\n          \"Token has expired\",\n          400\n        )\n      }\n\n      // Hash the new password\n      const hashedPassword = await hash(newPassword, 10)\n\n      // Update user password\n      await prisma.user.update({\n        where: { email: verificationToken.identifier },\n        data: { password: hashedPassword },\n      })\n\n      // Delete verification token\n      await prisma.verificationToken.delete({\n        where: { token },\n      })\n    } catch (error) {\n      console.error(\"Password reset error:\", error)\n      if (error instanceof AuthError) {\n        throw error\n      }\n      throw new AuthError(\n        AuthErrorCode.RESET_PASSWORD_FAILED,\n        \"Failed to reset password\",\n        500\n      )\n    }\n  }\n}\n\nexport const authService = new AuthService()\n","import { z } from \"@hono/zod-openapi\"\n\n/**\n * Authentication and authorization related types\n */\nexport enum UserRole {\n  ADMIN = \"ADMIN\",\n  NODE_OFFICER = \"NODE_OFFICER\",\n  USER = \"USER\",\n  GUEST = \"GUEST\",\n}\n\n/**\n * Basic user interface\n */\nexport interface User {\n  id: string\n  name?: string\n  email: string\n  role: UserRole\n  image?: string\n  organizationId?: string\n}\n\n/**\n * Simple permission definition\n */\nexport interface Permission {\n  action: string\n  subject: string\n}\n\n/**\n * Role inclusion hierarchy - which role includes permissions of other roles\n */\nexport const RoleIncludes: Record<UserRole, UserRole[]> = {\n  [UserRole.ADMIN]: [],\n  [UserRole.NODE_OFFICER]: [UserRole.USER],\n  [UserRole.USER]: [],\n  [UserRole.GUEST]: [],\n}\n\n/**\n * Basic permissions for each role\n */\nexport const RolePermissions: Record<UserRole, Permission[]> = {\n  [UserRole.ADMIN]: [\n    { action: \"create\", subject: \"metadata\" },\n    { action: \"read\", subject: \"metadata\" },\n    { action: \"update\", subject: \"metadata\" },\n    { action: \"delete\", subject: \"metadata\" },\n    { action: \"manage\", subject: \"metadata\" },\n    { action: \"create\", subject: \"user\" },\n    { action: \"read\", subject: \"user\" },\n    { action: \"update\", subject: \"user\" },\n    { action: \"delete\", subject: \"user\" },\n    { action: \"read\", subject: \"system\" },\n  ],\n  [UserRole.NODE_OFFICER]: [\n    { action: \"create\", subject: \"metadata\" },\n    { action: \"read\", subject: \"metadata\" },\n    { action: \"update\", subject: \"metadata\" },\n    { action: \"manage\", subject: \"metadata\" },\n    { action: \"read\", subject: \"user\" },\n    { action: \"create\", subject: \"user\" },\n  ],\n  [UserRole.USER]: [\n    { action: \"read\", subject: \"metadata\" },\n    { action: \"create\", subject: \"metadata\" },\n  ],\n  [UserRole.GUEST]: [{ action: \"read\", subject: \"metadata\" }],\n}\n\n/**\n * Authentication result interface\n */\nexport interface AuthResult {\n  success: boolean\n  message?: string\n  user?: User\n  token?: string\n}\n\n/**\n * JWT payload structure\n */\nexport interface JWTPayload {\n  sub: string\n  email: string\n  role: string\n  iat: number\n  exp: number\n}\n\n/**\n * Password schema\n */\nexport const passwordSchema = z\n  .string()\n  .min(8, \"Password must be at least 8 characters\")\n  .regex(/[A-Z]/, \"Must contain at least one uppercase letter\")\n  .regex(/[a-z]/, \"Must contain at least one lowercase letter\")\n  .regex(/[0-9]/, \"Must contain at least one number\")\n  .regex(/[^A-Za-z0-9]/, \"Must contain at least one special character\")\n\n/**\n * Login request schema\n */\nexport const loginSchema = z\n  .object({\n    email: z.string().email(\"Invalid email address\").openapi({\n      example: \"user@example.com\",\n      description: \"User's email address\",\n    }),\n    password: passwordSchema.openapi({\n      example: \"StrongP@ss123\",\n      description:\n        \"User's password - must contain uppercase, lowercase, number, and special character\",\n    }),\n    // Additional fields for security tracking\n    ipAddress: z.string().optional().openapi({\n      example: \"192.168.1.1\",\n      description: \"Client IP address for security tracking\",\n    }),\n    userAgent: z.string().optional().openapi({\n      example: \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\",\n      description: \"Client user agent for security tracking\",\n    }),\n    deviceId: z.string().optional().openapi({\n      example: \"device-123\",\n      description: \"Client device identifier for security tracking\",\n    }),\n  })\n  .openapi(\"LoginRequest\")\n\nexport type LoginRequest = z.infer<typeof loginSchema>\n\n/**\n * Registration request schema\n */\nexport const registerSchema = z\n  .object({\n    name: z.string().min(2, \"Name must be at least 2 characters\").openapi({\n      example: \"John Doe\",\n      description: \"User's full name\",\n    }),\n    email: z.string().email(\"Invalid email address\").openapi({\n      example: \"user@example.com\",\n      description: \"User's email address\",\n    }),\n    password: passwordSchema.openapi({\n      example: \"StrongP@ss123\",\n      description:\n        \"User's password - must contain uppercase, lowercase, number, and special character\",\n    }),\n    organization: z.string().optional().openapi({\n      example: \"ACME Corp\",\n      description: \"User's organization\",\n    }),\n    department: z.string().optional().openapi({\n      example: \"Engineering\",\n      description: \"User's department\",\n    }),\n    phone: z.string().optional().openapi({\n      example: \"+1234567890\",\n      description: \"User's phone number\",\n    }),\n    // Additional fields for security tracking\n    ipAddress: z.string().optional().openapi({\n      example: \"192.168.1.1\",\n      description: \"Client IP address for security tracking\",\n    }),\n    userAgent: z.string().optional().openapi({\n      example: \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\",\n      description: \"Client user agent for security tracking\",\n    }),\n    deviceId: z.string().optional().openapi({\n      example: \"device-123\",\n      description: \"Client device identifier for security tracking\",\n    }),\n  })\n  .openapi(\"RegisterRequest\")\n\nexport type RegisterRequest = z.infer<typeof registerSchema>\n\n/**\n * Request password reset schema\n */\nexport const requestPasswordResetSchema = z\n  .object({\n    email: z.string().email().openapi({\n      example: \"user@example.com\",\n      description: \"Email address to send password reset link to\",\n    }),\n  })\n  .openapi(\"RequestPasswordResetRequest\")\n\nexport type RequestPasswordResetRequest = z.infer<\n  typeof requestPasswordResetSchema\n>\n\n/**\n * Forgot password schema (alias for requestPasswordResetSchema)\n */\nexport const forgotPasswordSchema = requestPasswordResetSchema\n\n/**\n * Reset password schema\n */\nexport const resetPasswordSchema = z\n  .object({\n    token: z.string().openapi({\n      example: \"reset-token-123\",\n      description: \"Password reset token\",\n    }),\n    password: z\n      .string()\n      .min(8, \"Password must be at least 8 characters\")\n      .openapi({\n        example: \"newpassword123\",\n        description: \"New password\",\n      }),\n  })\n  .openapi(\"ResetPasswordRequest\")\n\nexport type ResetPasswordRequest = z.infer<typeof resetPasswordSchema>\n\n/**\n * Change password schema\n */\nexport const changePasswordSchema = z\n  .object({\n    currentPassword: z.string().openapi({\n      example: \"oldpassword123\",\n      description: \"Current password\",\n    }),\n    newPassword: z\n      .string()\n      .min(8, \"Password must be at least 8 characters\")\n      .openapi({\n        example: \"newpassword123\",\n        description: \"New password\",\n      }),\n  })\n  .openapi(\"ChangePasswordRequest\")\n\nexport type ChangePasswordRequest = z.infer<typeof changePasswordSchema>\n\n/**\n * Refresh token schema\n */\nexport const refreshTokenSchema = z\n  .object({\n    refreshToken: z.string().openapi({\n      example: \"refresh-token-123\",\n      description: \"Refresh token\",\n    }),\n  })\n  .openapi(\"RefreshTokenRequest\")\n\nexport type RefreshTokenRequest = z.infer<typeof refreshTokenSchema>\n\n/**\n * Email verification schema\n */\nexport const verifyEmailSchema = z\n  .object({\n    token: z.string().openapi({\n      example: \"verification-token-123\",\n      description: \"Email verification token\",\n    }),\n  })\n  .openapi(\"VerifyEmailRequest\")\n\nexport type VerifyEmailRequest = z.infer<typeof verifyEmailSchema>\n\n/**\n * Auth response\n */\nexport const authResponseSchema = z\n  .object({\n    user: z.object({\n      id: z.string().openapi({\n        example: \"user-123\",\n        description: \"User ID\",\n      }),\n      name: z.string().openapi({\n        example: \"John Doe\",\n        description: \"User's full name\",\n      }),\n      email: z.string().openapi({\n        example: \"user@example.com\",\n        description: \"User's email address\",\n      }),\n      role: z.nativeEnum(UserRole).openapi({\n        example: UserRole.USER,\n        description: \"User's role\",\n      }),\n      organization: z.string().optional().openapi({\n        example: \"ACME Corp\",\n        description: \"User's organization\",\n      }),\n      department: z.string().optional().openapi({\n        example: \"Engineering\",\n        description: \"User's department\",\n      }),\n    }),\n    accessToken: z.string().openapi({\n      example: \"access-token-123\",\n      description: \"JWT access token\",\n    }),\n    refreshToken: z.string().openapi({\n      example: \"refresh-token-123\",\n      description: \"JWT refresh token\",\n    }),\n  })\n  .openapi(\"AuthResponse\")\n\nexport type AuthResponse = z.infer<typeof authResponseSchema>\n","import { UserRole as AppUserRole } from \"../types/auth.types\"\nimport { Prisma, UserRole as PrismaUserRole } from \"@prisma/client\"\n\n/**\n * Maps Prisma UserRole to application UserRole\n */\nexport function mapPrismaRoleToAppRole(\n  prismaRole: PrismaUserRole\n): AppUserRole {\n  switch (prismaRole) {\n    case \"USER\":\n      return AppUserRole.USER\n    case \"ADMIN\":\n      return AppUserRole.ADMIN\n    case \"NODE_OFFICER\":\n      return AppUserRole.NODE_OFFICER\n    default:\n      return AppUserRole.USER // Default fallback\n  }\n}\n\n/**\n * Maps application UserRole to Prisma UserRole\n */\nexport function mapAppRoleToPrismaRole(appRole: AppUserRole): PrismaUserRole {\n  switch (appRole) {\n    case AppUserRole.USER:\n      return \"USER\"\n    case AppUserRole.ADMIN:\n      return \"ADMIN\"\n    case AppUserRole.NODE_OFFICER:\n      return \"NODE_OFFICER\"\n    default:\n      return \"USER\" // Default fallback\n  }\n}\n\n/**\n * Type guard to check if a string is a valid UserRole\n */\nexport function isValidUserRole(role: string): role is AppUserRole {\n  return Object.values(AppUserRole).includes(role as AppUserRole)\n}\n","import { config } from \"../config\"\nimport nodemailer from \"nodemailer\"\n\n/**\n * Email service for sending verification and password reset emails\n */\nclass EmailService {\n  /**\n   * Send a verification email to a user\n   * @param email Email address to send to\n   * @param token Verification token\n   */\n  async sendVerificationEmail(email: string, token: string): Promise<void> {\n    // In a production environment, this would integrate with a real email service\n    // For development, we just log the verification link\n    const verificationUrl = `${config.frontendUrl}/verify-email?token=${token}`\n\n    console.log(`📧 Verification email for ${email}:`)\n    console.log(`Verification URL: ${verificationUrl}`)\n    console.log(`Token: ${token}`)\n  }\n\n  /**\n   * Send a password reset email to a user\n   * @param email Email address to send to\n   * @param token Password reset token\n   */\n  async sendPasswordResetEmail(email: string, token: string): Promise<void> {\n    // In a production environment, this would integrate with a real email service\n    // For development, we just log the reset link\n    const resetUrl = `${config.frontendUrl}/reset-password/${token}`\n\n    console.log(`📧 Password reset email for ${email}:`)\n    console.log(`Reset URL: ${resetUrl}`)\n    console.log(`Token: ${token}`)\n  }\n\n  /**\n   * Send a welcome email after registration\n   */\n  async sendWelcomeEmail(email: string, name: string): Promise<void> {\n    const subject = \"Welcome to our platform\"\n    const html = `\n      <h1>Welcome!</h1>\n      <p>Hello ${name},</p>\n      <p>Thank you for joining our platform. We're excited to have you on board!</p>\n      <p>If you have any questions, please don't hesitate to contact our support team.</p>\n    `\n\n    await this.sendEmail(email, subject, html)\n  }\n\n  /**\n   * Send an email using the configured email provider\n   * @param to Recipient email address\n   * @param subject Email subject\n   * @param html Email HTML content\n   */\n  private async sendEmail(\n    to: string,\n    subject: string,\n    html: string\n  ): Promise<void> {\n    // In a production environment, this would integrate with a real email service\n    // For development, we just log the email\n    console.log(`📧 Email to ${to}:`)\n    console.log(`Subject: ${subject}`)\n    console.log(`Body: ${html}`)\n  }\n}\n\nexport const emailService = new EmailService()\n\n/**\n * Helper function to send an email\n */\nasync function sendEmail(\n  to: string,\n  subject: string,\n  html: string\n): Promise<void> {\n  // Create a test account if in development mode\n  let testAccount\n  let transporter\n\n  if (config.env === \"development\" && !config.email.host) {\n    // Create a test account using Ethereal Email for development\n    testAccount = await nodemailer.createTestAccount()\n\n    transporter = nodemailer.createTransport({\n      host: \"smtp.ethereal.email\",\n      port: 587,\n      secure: false,\n      auth: {\n        user: testAccount.user,\n        pass: testAccount.pass,\n      },\n    })\n  } else {\n    // Use configured SMTP server\n    transporter = nodemailer.createTransport({\n      host: config.email.host,\n      port: config.email.port,\n      secure: config.email.port === 465, // true for 465, false for other ports\n      auth: {\n        user: config.email.user,\n        pass: config.email.password,\n      },\n    })\n  }\n\n  // Send email\n  const info = await transporter.sendMail({\n    from: `\"${config.appName}\" <${config.email.from}>`,\n    to,\n    subject,\n    html,\n  })\n\n  // Log email URL in development mode\n  if (config.env === \"development\" && testAccount) {\n    console.log(\"Email sent: %s\", info.messageId)\n    console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info))\n  }\n}\n","import { prisma } from \"../lib/prisma\"\nimport { AuthError, AuthErrorCode } from \"../types/error.types\"\nimport { securityLogService, SecurityEventType } from \"./security-log.service\"\n\n/**\n * Configuration for account lockout\n */\ninterface LockoutConfig {\n  // Maximum number of failed attempts before locking the account\n  maxAttempts: number\n  // Duration of the lockout in seconds\n  lockoutDuration: number\n  // Time window in seconds to reset failed attempts counter\n  resetWindow: number\n}\n\n// Default lockout configuration\nconst DEFAULT_LOCKOUT_CONFIG: LockoutConfig = {\n  maxAttempts: 5,\n  lockoutDuration: 15 * 60, // 15 minutes\n  resetWindow: 60 * 60, // 1 hour\n}\n\n/**\n * Service to handle account lockout after failed login attempts\n */\nexport class AccountLockoutService {\n  private config: LockoutConfig\n\n  constructor(config: Partial<LockoutConfig> = {}) {\n    this.config = { ...DEFAULT_LOCKOUT_CONFIG, ...config }\n  }\n\n  /**\n   * Check if an account is locked\n   */\n  async isAccountLocked(email: string): Promise<boolean> {\n    try {\n      // Check if user exists and is locked\n      const user = await prisma.user.findUnique({\n        where: { email },\n        select: { locked: true, lockedUntil: true },\n      })\n\n      if (!user) {\n        return false\n      }\n\n      // If account is locked but lock time has expired, unlock it\n      if (user.locked && user.lockedUntil && user.lockedUntil < new Date()) {\n        await this.unlockAccount(email)\n        return false\n      }\n\n      return user.locked\n    } catch (error) {\n      console.error(\"Error checking account lock status:\", error)\n      return false\n    }\n  }\n\n  /**\n   * Record a failed login attempt\n   */\n  async recordFailedAttempt(\n    email: string,\n    ipAddress?: string,\n    userAgent?: string\n  ): Promise<void> {\n    try {\n      // Get current time\n      const now = new Date()\n\n      // Update user's failed attempts\n      const user = await prisma.user.findUnique({\n        where: { email },\n        select: { failedAttempts: true, lastFailedAttempt: true },\n      })\n\n      if (user) {\n        // Check if we should reset the counter based on the reset window\n        const shouldReset =\n          user.lastFailedAttempt &&\n          now.getTime() - user.lastFailedAttempt.getTime() >\n            this.config.resetWindow * 1000\n\n        // Calculate new attempt count\n        const newAttemptCount = shouldReset ? 1 : user.failedAttempts + 1\n\n        // Update user record\n        await prisma.user.update({\n          where: { email },\n          data: {\n            failedAttempts: newAttemptCount,\n            lastFailedAttempt: now,\n            // Lock account if max attempts reached\n            locked: newAttemptCount >= this.config.maxAttempts,\n            lockedUntil:\n              newAttemptCount >= this.config.maxAttempts\n                ? new Date(now.getTime() + this.config.lockoutDuration * 1000)\n                : null,\n          },\n        })\n\n        // If account is now locked, log it\n        if (newAttemptCount >= this.config.maxAttempts) {\n          console.warn(\n            `Account ${email} locked after ${newAttemptCount} failed attempts`\n          )\n\n          // Log security event\n          await securityLogService.logEvent({\n            email,\n            eventType: SecurityEventType.ACCOUNT_LOCKED,\n            ipAddress,\n            userAgent,\n            details: {\n              reason: \"Too many failed login attempts\",\n              attempts: newAttemptCount,\n              lockDuration: this.config.lockoutDuration,\n            },\n          })\n        }\n      }\n\n      // Also record in FailedLogin table for analytics\n      await prisma.failedLogin.upsert({\n        where: { email },\n        update: {\n          attempts: {\n            increment: 1,\n          },\n          ipAddress,\n          userAgent,\n          lastAttempt: now,\n          lockedUntil:\n            (user?.failedAttempts || 0) + 1 >= this.config.maxAttempts\n              ? new Date(now.getTime() + this.config.lockoutDuration * 1000)\n              : null,\n        },\n        create: {\n          email,\n          attempts: 1,\n          ipAddress,\n          userAgent,\n          firstAttempt: now,\n          lastAttempt: now,\n        },\n      })\n    } catch (error) {\n      console.error(\"Error recording failed login attempt:\", error)\n    }\n  }\n\n  /**\n   * Reset failed attempts counter after successful login\n   */\n  async resetFailedAttempts(email: string): Promise<void> {\n    try {\n      // Update user record\n      await prisma.user.update({\n        where: { email },\n        data: {\n          failedAttempts: 0,\n          lastFailedAttempt: null,\n          locked: false,\n          lockedUntil: null,\n        },\n      })\n\n      // Update FailedLogin record\n      await prisma.failedLogin.update({\n        where: { email },\n        data: {\n          attempts: 0,\n          resetAt: new Date(),\n          lockedUntil: null,\n        },\n      })\n    } catch (error) {\n      console.error(\"Error resetting failed attempts:\", error)\n    }\n  }\n\n  /**\n   * Unlock an account manually\n   */\n  async unlockAccount(email: string): Promise<void> {\n    try {\n      // Update user record\n      await prisma.user.update({\n        where: { email },\n        data: {\n          failedAttempts: 0,\n          locked: false,\n          lockedUntil: null,\n        },\n      })\n\n      // Update FailedLogin record\n      await prisma.failedLogin.update({\n        where: { email },\n        data: {\n          attempts: 0,\n          resetAt: new Date(),\n          lockedUntil: null,\n        },\n      })\n\n      console.log(`Account ${email} unlocked`)\n\n      // Log security event\n      await securityLogService.logEvent({\n        email,\n        eventType: SecurityEventType.ACCOUNT_UNLOCKED,\n        details: {\n          reason: \"Manual unlock\",\n        },\n      })\n    } catch (error) {\n      console.error(\"Error unlocking account:\", error)\n    }\n  }\n\n  /**\n   * Check account status and throw error if locked\n   */\n  async checkAccountStatus(email: string): Promise<void> {\n    const isLocked = await this.isAccountLocked(email)\n\n    if (isLocked) {\n      // Get lock expiration time\n      const user = await prisma.user.findUnique({\n        where: { email },\n        select: { lockedUntil: true },\n      })\n\n      const lockedUntil = user?.lockedUntil\n\n      throw new AuthError(\n        AuthErrorCode.ACCOUNT_LOCKED,\n        \"Account is locked due to too many failed login attempts\",\n        403,\n        {\n          lockedUntil: lockedUntil?.toISOString(),\n          remainingSeconds: lockedUntil\n            ? Math.max(\n                0,\n                Math.floor(\n                  (lockedUntil.getTime() - new Date().getTime()) / 1000\n                )\n              )\n            : this.config.lockoutDuration,\n        }\n      )\n    }\n  }\n}\n\n// Export singleton instance with default config\nexport const accountLockoutService = new AccountLockoutService()\n","import { Next } from \"hono\"\nimport { Context } from \"../types/hono.types\"\nimport { UserRole } from \"@prisma/client\"\nimport { AuthError, AuthErrorCode } from \"../types/error.types\"\nimport { tokenValidationService } from \"../services/token-validation.service\"\nimport {\n  securityLogService,\n  SecurityEventType,\n} from \"../services/security-log.service\"\nimport { prisma } from \"../lib/prisma\"\n\n/**\n * Interface for JWT payload\n */\ninterface JWTPayload {\n  userId: string\n  email: string\n  role: UserRole | string\n  [key: string]: any // Allow for additional fields\n}\n\n/**\n * Real authentication middleware that validates JWT tokens\n */\nexport async function authMiddleware(c: Context, next: Next) {\n  try {\n    // Get client information for logging\n    const clientInfo = {\n      ipAddress:\n        c.req.header(\"x-forwarded-for\") ||\n        c.req.header(\"x-real-ip\") ||\n        c.req.header(\"cf-connecting-ip\") ||\n        \"unknown\",\n      userAgent: c.req.header(\"user-agent\") || \"unknown\",\n      deviceId: c.req.header(\"x-device-id\") || \"unknown\",\n    }\n\n    // Get token from request (header or cookie)\n    let token: string\n    try {\n      token = tokenValidationService.getTokenFromRequest(c)\n    } catch (error) {\n      // If no token is found, throw an authentication error\n      throw new AuthError(\n        AuthErrorCode.INVALID_TOKEN,\n        \"No authentication token provided\",\n        401\n      )\n    }\n\n    // Validate the token\n    const validationResult = await tokenValidationService.validateAccessToken(\n      token,\n      {\n        checkBlacklist: true,\n        logFailures: true,\n        clientInfo,\n      }\n    )\n\n    if (!validationResult.isValid) {\n      // Token validation failed\n      throw new AuthError(\n        AuthErrorCode.INVALID_TOKEN,\n        validationResult.error || \"Invalid token\",\n        401\n      )\n    }\n\n    // Check if user exists and is active\n    const userIsValid = await tokenValidationService.validateUser(\n      validationResult.userId!\n    )\n    if (!userIsValid) {\n      throw new AuthError(\n        AuthErrorCode.USER_NOT_FOUND,\n        \"User not found or account is locked\",\n        401\n      )\n    }\n\n    // Get the complete user data from the database\n    const user = await prisma.user.findUnique({\n      where: { id: validationResult.userId! },\n      include: {\n        customRole: true,\n      },\n    })\n\n    if (!user) {\n      throw new AuthError(AuthErrorCode.USER_NOT_FOUND, \"User not found\", 401)\n    }\n\n    // Set user info in context\n    c.set(\"userId\", user.id)\n    c.set(\"userEmail\", user.email)\n    c.set(\"userRole\", user.role)\n    c.set(\"user\", user)\n\n    // Log successful token validation (optional, can be disabled for high-traffic APIs)\n    // await securityLogService.logEvent({\n    //   userId: validationResult.userId,\n    //   email: validationResult.email,\n    //   eventType: SecurityEventType.TOKEN_VALIDATION_SUCCESS,\n    //   ipAddress: clientInfo.ipAddress,\n    //   userAgent: clientInfo.userAgent,\n    //   deviceId: clientInfo.deviceId\n    // })\n\n    await next()\n  } catch (error) {\n    // Handle authentication errors\n    if (error instanceof AuthError) {\n      throw error\n    }\n\n    // Handle other errors\n    console.error(\"Authentication middleware error:\", error)\n    throw new AuthError(\n      AuthErrorCode.SERVER_ERROR,\n      \"Authentication failed\",\n      500\n    )\n  }\n}\n\n/**\n * Middleware to require admin role\n */\nexport async function adminMiddleware(c: Context, next: Next) {\n  const user = c.get(\"user\")\n\n  if (!user) {\n    throw new AuthError(\n      AuthErrorCode.UNAUTHORIZED,\n      \"User not found in context\",\n      401\n    )\n  }\n\n  // Check if user has ADMIN role (legacy) or has a custom role with admin privileges\n  if (\n    user.role !== UserRole.ADMIN &&\n    (!user.customRole || user.customRole.name !== \"Admin\")\n  ) {\n    throw new AuthError(AuthErrorCode.FORBIDDEN, \"Admin access required\", 403)\n  }\n\n  await next()\n}\n\n/**\n * Middleware to require a specific role\n */\nexport function requireRole(role: UserRole | string) {\n  return async (c: Context, next: Next) => {\n    const user = c.get(\"user\")\n\n    if (!user) {\n      throw new AuthError(\n        AuthErrorCode.UNAUTHORIZED,\n        \"User not found in context\",\n        401\n      )\n    }\n\n    // Check legacy role\n    if (user.role === role) {\n      await next()\n      return\n    }\n\n    // Check custom role\n    if (user.customRole && user.customRole.name === role) {\n      await next()\n      return\n    }\n\n    // Admin users have access to everything\n    if (\n      user.role === UserRole.ADMIN ||\n      (user.customRole && user.customRole.name === \"Admin\")\n    ) {\n      await next()\n      return\n    }\n\n    throw new AuthError(\n      AuthErrorCode.FORBIDDEN,\n      \"Insufficient permissions\",\n      403\n    )\n  }\n}\n\n/**\n * Middleware to require any of the specified roles\n */\nexport function requireAnyRole(roles: (UserRole | string)[]) {\n  return async (c: Context, next: Next) => {\n    const user = c.get(\"user\")\n\n    if (!user) {\n      throw new AuthError(\n        AuthErrorCode.UNAUTHORIZED,\n        \"User not found in context\",\n        401\n      )\n    }\n\n    // Admin users have access to everything\n    if (\n      user.role === UserRole.ADMIN ||\n      (user.customRole && user.customRole.name === \"Admin\")\n    ) {\n      await next()\n      return\n    }\n\n    // Check legacy role\n    if (roles.includes(user.role as UserRole)) {\n      await next()\n      return\n    }\n\n    // Check custom role\n    if (user.customRole && roles.includes(user.customRole.name)) {\n      await next()\n      return\n    }\n\n    throw new AuthError(\n      AuthErrorCode.FORBIDDEN,\n      \"Insufficient permissions\",\n      403\n    )\n  }\n}\n","import { Context } from \"hono\"\n\nexport interface CookieOptions {\n  path: string\n  httpOnly: boolean\n  secure: boolean\n  sameSite: \"lax\" | \"strict\" | \"none\"\n  maxAge: number\n  domain?: string\n}\n\nexport const DEFAULT_COOKIE_OPTIONS: CookieOptions = {\n  path: \"/\",\n  httpOnly: true,\n  secure: process.env.NODE_ENV === \"production\",\n  sameSite: \"lax\", // Changed from strict to lax for better compatibility\n  maxAge: 60 * 60 * 24 * 7, // 7 days\n}\n\nexport function getCookieDomain(): string | undefined {\n  if (process.env.NODE_ENV === \"production\") {\n    // Use cookie domain from environment variable if available\n    // This improves cross-subdomain support while maintaining security\n    const cookieDomain = process.env.COOKIE_DOMAIN\n\n    // Only use domain setting when explicitly configured\n    return cookieDomain || undefined\n  }\n  return undefined\n}\n\nexport function setCookieWithOptions(\n  c: Context,\n  name: string,\n  value: string,\n  options: Partial<CookieOptions> = {}\n): void {\n  const finalOptions = { ...DEFAULT_COOKIE_OPTIONS, ...options }\n  const domain = getCookieDomain()\n\n  let cookie = `${name}=${value}; Path=${finalOptions.path}`\n  if (finalOptions.httpOnly) cookie += \"; HttpOnly\"\n  if (finalOptions.secure) cookie += \"; Secure\"\n  cookie += `; SameSite=${finalOptions.sameSite}; Max-Age=${finalOptions.maxAge}`\n\n  // Only add domain if explicitly set\n  if (domain) cookie += `; Domain=${domain}`\n\n  // Log cookie setting for debugging\n  console.log(\n    `Setting cookie: ${name} (SameSite=${finalOptions.sameSite}, Secure=${finalOptions.secure}, HttpOnly=${finalOptions.httpOnly})`\n  )\n\n  // Use append instead of set to allow multiple cookies with different names\n  c.header(\"Set-Cookie\", cookie, { append: true })\n}\n\nexport function clearCookie(c: Context, name: string): void {\n  // Set cookie with past expiration to clear it\n  let cookie = `${name}=; Path=/; Max-Age=0; HttpOnly`\n  if (process.env.NODE_ENV === \"production\") cookie += \"; Secure\"\n  cookie += `; SameSite=${DEFAULT_COOKIE_OPTIONS.sameSite}`\n\n  const domain = getCookieDomain()\n  if (domain) cookie += `; Domain=${domain}`\n\n  // Log cookie clearing for debugging\n  console.log(`Clearing cookie: ${name}`)\n\n  // Use append instead of set to allow clearing multiple cookies\n  c.header(\"Set-Cookie\", cookie, { append: true })\n}\n","import { Context, Next } from \"hono\"\nimport { redisService } from \"../services/redis.service\"\nimport { AuthError, AuthErrorCode } from \"../types/error.types\"\nimport { config } from \"../config\"\nimport { securityLogService } from \"../services/security-log.service\"\n\ninterface RateLimitOptions {\n  windowSeconds: number\n  maxRequests: number\n  keyPrefix?: string\n  message?: string\n  statusCode?: number\n  skipSuccessfulRequests?: boolean\n  identifyClient?: (c: Context) => string\n}\n\nconst defaultOptions: RateLimitOptions = {\n  windowSeconds: config.rateLimit.auth.window,\n  maxRequests: config.rateLimit.auth.max,\n  keyPrefix: \"rate:auth:\",\n  message: \"Too many requests, please try again later\",\n  statusCode: 429,\n  skipSuccessfulRequests: false,\n  identifyClient: (c: Context) => {\n    // Get client IP with fallbacks\n    return (\n      c.req.header(\"x-forwarded-for\") ||\n      c.req.header(\"x-real-ip\") ||\n      c.req.header(\"cf-connecting-ip\") ||\n      c.req.raw.headers.get(\"x-forwarded-for\") ||\n      \"unknown\"\n    )\n  },\n}\n\nexport function rateLimit(options: Partial<RateLimitOptions> = {}) {\n  const opts = { ...defaultOptions, ...options }\n\n  return async (c: Context, next: Next) => {\n    // Get client identifier (usually IP)\n    const clientId = opts.identifyClient(c)\n\n    // Include the path in the rate limit key for more granular control\n    const path = c.req.path\n    const method = c.req.method\n\n    // Create a unique key for this client and endpoint\n    const key = `${opts.keyPrefix}${clientId}:${method}:${path}`\n\n    try {\n      // Check if Redis is available\n      if (!redisService.isAvailable()) {\n        console.warn(\"Rate limiting skipped: Redis not available\")\n        await next()\n        return\n      }\n\n      // Increment the counter\n      const attempts = await redisService.incrementRateLimit(\n        key,\n        opts.windowSeconds\n      )\n\n      // Get time to reset\n      const ttl =\n        (await redisService.getRateLimitTTL(key)) || opts.windowSeconds\n      const resetTime = new Date(Date.now() + ttl * 1000).toUTCString()\n\n      // Add rate limit headers\n      c.header(\"X-RateLimit-Limit\", opts.maxRequests.toString())\n      c.header(\n        \"X-RateLimit-Remaining\",\n        Math.max(0, opts.maxRequests - attempts).toString()\n      )\n      c.header(\"X-RateLimit-Reset\", resetTime)\n\n      // Check if rate limit exceeded\n      if (attempts > opts.maxRequests) {\n        // Log rate limit event\n        console.warn(`Rate limit exceeded for ${clientId} on ${path}`)\n\n        // Set Retry-After header\n        c.header(\"Retry-After\", ttl.toString())\n\n        // Log security event\n        await securityLogService.logRateLimitExceeded(clientId, path, method)\n\n        throw new AuthError(\n          AuthErrorCode.RATE_LIMITED,\n          opts.message || \"Too many requests, please try again later\",\n          opts.statusCode || 429,\n          {\n            windowSeconds: opts.windowSeconds,\n            retryAfter: ttl,\n          }\n        )\n      }\n\n      // Store the current attempts for potential rollback\n      c.set(\"rateLimitAttempts\", attempts)\n      c.set(\"rateLimitKey\", key)\n\n      // Continue to the next middleware\n      await next()\n\n      // If configured to skip successful requests and response is successful\n      if (\n        opts.skipSuccessfulRequests &&\n        c.res.status >= 200 &&\n        c.res.status < 400\n      ) {\n        // Decrement the counter to not count successful requests\n        await redisService.decrementRateLimit(key)\n      }\n    } catch (error) {\n      // Re-throw rate limit errors\n      if (\n        error instanceof AuthError &&\n        error.code === AuthErrorCode.RATE_LIMITED\n      ) {\n        throw error\n      }\n\n      // If Redis is down or other error, allow the request but log the error\n      console.error(\"Rate limiting error:\", error)\n      await next()\n    }\n  }\n}\n","import { MiddlewareHandler } from \"hono\"\nimport { getCookie, setCookie } from \"hono/cookie\"\nimport crypto from \"crypto\"\nimport { config } from \"../config\"\n\n/**\n * CSRF protection middleware for Hono\n * Validates CSRF tokens to protect against CSRF attacks\n */\n\n// Options for CSRF protection\ninterface CSRFOptions {\n  cookie: {\n    name: string\n    path?: string\n    domain?: string\n    maxAge?: number\n    httpOnly?: boolean\n    secure?: boolean\n    sameSite?: \"Strict\" | \"Lax\" | \"None\"\n  }\n  ignoreMethods?: string[]\n  ignorePaths?: string[]\n  tokenHeader?: string\n}\n\n// Default options\nconst defaultOptions: CSRFOptions = {\n  cookie: {\n    name: \"csrf_token\",\n    path: \"/\",\n    maxAge: 60 * 60 * 24, // 24 hours\n    httpOnly: false, // Allow JavaScript access to CSRF token\n    secure: process.env.NODE_ENV === \"production\",\n    sameSite: \"Lax\",\n  },\n  ignoreMethods: [\"GET\", \"HEAD\", \"OPTIONS\"], // Methods that don't need CSRF protection\n  ignorePaths: [\n    \"/health\",\n    \"/api/health\",\n    \"/api/auth/login\",\n    \"/auth/login\",\n    \"/api/auth/register\",\n    \"/auth/register\",\n    \"/api/auth/refresh-token\",\n    \"/auth/refresh-token\",\n    \"/api/auth/csrf-token\", // Endpoint to get a CSRF token\n    \"/auth/csrf-token\",\n  ], // Paths that don't need CSRF protection\n  tokenHeader: \"X-CSRF-Token\",\n}\n\n// Helper function to generate a CSRF token\nconst generateToken = (): string => {\n  return crypto.randomBytes(16).toString(\"hex\")\n}\n\n// CSRF middleware factory\nexport const csrf = (options: Partial<CSRFOptions> = {}): MiddlewareHandler => {\n  // Merge options with defaults\n  const opts: CSRFOptions = {\n    ...defaultOptions,\n    ...options,\n    cookie: {\n      ...defaultOptions.cookie,\n      ...options.cookie,\n    },\n  }\n\n  // CSRF middleware handler\n  return async (c, next) => {\n    const method = c.req.method\n    const path = c.req.path\n\n    // For debugging\n    console.log(`CSRF Middleware - Method: ${method}, Path: ${path}`)\n\n    // Get origin from request or fallback to config\n    const origin = c.req.header(\"Origin\") || config.corsOrigins[0]\n\n    // For all requests, set CORS headers\n    c.res.headers.set(\"Access-Control-Allow-Origin\", origin)\n    c.res.headers.set(\n      \"Access-Control-Allow-Methods\",\n      \"GET, POST, PUT, DELETE, OPTIONS\"\n    )\n    c.res.headers.set(\n      \"Access-Control-Allow-Headers\",\n      \"Content-Type, X-CSRF-Token\"\n    )\n    c.res.headers.set(\"Access-Control-Allow-Credentials\", \"true\")\n\n    // Handle preflight requests\n    if (method === \"OPTIONS\") {\n      return c.text(\"OK\", 200)\n    }\n\n    // Skip CSRF validation for ignored methods and paths\n    if (\n      opts.ignoreMethods?.includes(method) ||\n      opts.ignorePaths?.some((p) => path.startsWith(p))\n    ) {\n      console.log(`CSRF Middleware - Skipping validation for ${path}`)\n\n      // For GET requests, always ensure the token exists\n      if (method === \"GET\") {\n        let token = getCookie(c, opts.cookie.name)\n        if (!token) {\n          token = generateToken()\n          setCookie(c, opts.cookie.name, token, opts.cookie)\n          console.log(`CSRF Middleware - Generated new token for GET request`)\n        }\n      }\n\n      await next()\n      return\n    }\n\n    // Get the token from the cookie\n    const cookieToken = getCookie(c, opts.cookie.name)\n\n    // If there's no token in the cookie, generate one and return an error\n    if (!cookieToken) {\n      const newToken = generateToken()\n      setCookie(c, opts.cookie.name, newToken, opts.cookie)\n      console.log(`CSRF Middleware - No token in cookie, generated new one`)\n      return c.json({ error: \"CSRF token is missing\" }, 403)\n    }\n\n    // Get the token from the header\n    const headerToken = c.req.header(opts.tokenHeader || \"X-CSRF-Token\")\n\n    // Validate the token\n    if (!headerToken || headerToken !== cookieToken) {\n      console.log(\n        `CSRF Middleware - Invalid token: ${headerToken} vs ${cookieToken}`\n      )\n      return c.json({ error: \"Invalid CSRF token\" }, 403)\n    }\n\n    console.log(`CSRF Middleware - Token valid, proceeding with request`)\n\n    // Continue with the request\n    await next()\n\n    // Refresh the token if it's about to expire\n    // This is optional but recommended for enhanced security\n    const newToken = generateToken()\n    setCookie(c, opts.cookie.name, newToken, opts.cookie)\n  }\n}\n\nexport default csrf\n","import { OpenAPIHono, createRoute } from \"@hono/zod-openapi\"\nimport {\n  authMiddleware,\n  requireRole,\n  adminMiddleware,\n} from \"../middleware/auth.middleware\"\nimport { userService } from \"../services/user.service\"\nimport { UserRole } from \"../types/auth.types\"\nimport {\n  userProfileSchema,\n  UserIdParamSchema,\n  ChangePasswordSchema,\n  userResponseSchema,\n  userListQuerySchema,\n  userListResponseSchema,\n  updateUserRoleSchema,\n  UserSearchQuery,\n} from \"../types/user.types\"\nimport { Context, Variables } from \"../types/hono.types\"\nimport { Env, MiddlewareHandler } from \"hono\"\nimport { HTTPException } from \"hono/http-exception\"\n\ntype AppEnv = {\n  Variables: Variables\n  Bindings: Env\n}\n\n// Create user router instance\nconst userRouter = new OpenAPIHono<AppEnv>()\n\n// Apply auth middleware to all routes - demo mode\nuserRouter.use(\"*\", ((c, next) => {\n  console.log(\"[DEMO MODE] Skipping authentication for user routes\")\n  c.set(\"userId\", \"demo-user-id\")\n  c.set(\"userEmail\", \"demo@example.com\")\n  c.set(\"userRole\", UserRole.ADMIN)\n  return next()\n}) as MiddlewareHandler<AppEnv>)\n\n// Get user profile\nuserRouter.openapi(\n  createRoute({\n    method: \"get\",\n    path: \"/profile\",\n    tags: [\"User\"],\n    description: \"Get user profile\",\n    responses: {\n      200: {\n        description: \"User profile retrieved successfully\",\n        content: {\n          \"application/json\": {\n            schema: userResponseSchema,\n          },\n        },\n      },\n    },\n  }),\n  async (c) => {\n    const userId = c.var.userId\n    if (!userId) {\n      throw new HTTPException(401, { message: \"Unauthorized\" })\n    }\n    const profile = await userService.getProfile(userId)\n    return c.json(profile)\n  }\n)\n\n// Update user profile\nuserRouter.openapi(\n  createRoute({\n    method: \"put\",\n    path: \"/profile\",\n    tags: [\"User\"],\n    description: \"Update user profile\",\n    request: {\n      body: {\n        content: {\n          \"application/json\": {\n            schema: userProfileSchema,\n          },\n        },\n      },\n    },\n    responses: {\n      200: {\n        description: \"User profile updated successfully\",\n        content: {\n          \"application/json\": {\n            schema: userResponseSchema,\n          },\n        },\n      },\n    },\n  }),\n  async (c) => {\n    const userId = c.var.userId\n    if (!userId) {\n      throw new HTTPException(401, { message: \"Unauthorized\" })\n    }\n    const data = await c.req.json()\n    const updatedProfile = await userService.updateProfile(userId, data)\n    return c.json(updatedProfile)\n  }\n)\n\n// Change password\nuserRouter.openapi(\n  createRoute({\n    method: \"post\",\n    path: \"/change-password\",\n    tags: [\"User\"],\n    description: \"Change user password\",\n    request: {\n      body: {\n        content: {\n          \"application/json\": {\n            schema: ChangePasswordSchema,\n          },\n        },\n      },\n    },\n    responses: {\n      200: {\n        description: \"Password changed successfully\",\n      },\n    },\n  }),\n  async (c) => {\n    const userId = c.var.userId\n    if (!userId) {\n      throw new HTTPException(401, { message: \"Unauthorized\" })\n    }\n    const { currentPassword, newPassword } = await c.req.json()\n    await userService.changePassword(userId, currentPassword, newPassword)\n    return c.json({ message: \"Password changed successfully\" })\n  }\n)\n\n// Create admin router instance\nconst adminRouter = new OpenAPIHono<AppEnv>()\n\n// Apply admin auth middleware to all routes - demo mode\nadminRouter.use(\"*\", ((c, next) => {\n  console.log(\"[DEMO MODE] Skipping authentication for admin routes\")\n  c.set(\"userId\", \"demo-user-id\")\n  c.set(\"userEmail\", \"demo@example.com\")\n  c.set(\"userRole\", UserRole.ADMIN)\n  return next()\n}) as MiddlewareHandler<AppEnv>)\n\n// Get all users\nadminRouter.openapi(\n  createRoute({\n    method: \"get\",\n    path: \"/\",\n    tags: [\"Admin\"],\n    description: \"Get all users (admin only)\",\n    request: {\n      query: userListQuerySchema,\n    },\n    responses: {\n      200: {\n        description: \"Users retrieved successfully\",\n        content: {\n          \"application/json\": {\n            schema: userListResponseSchema,\n          },\n        },\n      },\n    },\n  }),\n  async (c) => {\n    const query = c.req.query()\n    const searchQuery: UserSearchQuery = {\n      page: parseInt(query.page || \"1\"),\n      limit: parseInt(query.limit || \"10\"),\n      search: query.search,\n      role: query.role as UserRole,\n      sortBy: (query.sortBy || \"createdAt\") as\n        | \"name\"\n        | \"email\"\n        | \"role\"\n        | \"createdAt\",\n      sortOrder: (query.sortOrder || \"desc\") as \"asc\" | \"desc\",\n    }\n    const users = await userService.getAllUsers(searchQuery)\n    return c.json(users)\n  }\n)\n\n// Get user by ID\nadminRouter.openapi(\n  createRoute({\n    method: \"get\",\n    path: \"/{id}\",\n    tags: [\"Admin\"],\n    description: \"Get user by ID (admin only)\",\n    request: {\n      params: UserIdParamSchema,\n    },\n    responses: {\n      200: {\n        description: \"User retrieved successfully\",\n        content: {\n          \"application/json\": {\n            schema: userResponseSchema,\n          },\n        },\n      },\n    },\n  }),\n  async (c) => {\n    const { id } = c.req.param()\n    const user = await userService.getUserById(id)\n    return c.json(user)\n  }\n)\n\n// Update user role\nadminRouter.openapi(\n  createRoute({\n    method: \"put\",\n    path: \"/{id}/role\",\n    tags: [\"Admin\"],\n    description: \"Update user role (admin only)\",\n    request: {\n      params: UserIdParamSchema,\n      body: {\n        content: {\n          \"application/json\": {\n            schema: updateUserRoleSchema,\n          },\n        },\n      },\n    },\n    responses: {\n      200: {\n        description: \"User role updated successfully\",\n        content: {\n          \"application/json\": {\n            schema: userResponseSchema,\n          },\n        },\n      },\n    },\n  }),\n  async (c) => {\n    const { id } = c.req.param()\n    const { role } = await c.req.json()\n    const updatedUser = await userService.updateUserRole(id, role)\n    return c.json(updatedUser)\n  }\n)\n\n// Delete user\nadminRouter.openapi(\n  createRoute({\n    method: \"delete\",\n    path: \"/{id}\",\n    tags: [\"Admin\"],\n    description: \"Delete user (admin only)\",\n    request: {\n      params: UserIdParamSchema,\n    },\n    responses: {\n      200: {\n        description: \"User deleted successfully\",\n      },\n    },\n  }),\n  async (c) => {\n    const { id } = c.req.param()\n    await userService.deleteUser(id)\n    return c.json({ message: \"User deleted successfully\" })\n  }\n)\n\n// Create a main router that combines user and admin routes\nconst router = new OpenAPIHono<AppEnv>()\n\n// Mount user routes\nrouter.route(\"/\", userRouter)\n\n// Mount admin routes\nrouter.route(\"/admin\", adminRouter)\n\n// Export the router as default\nexport default router\n","import { prisma } from \"../lib/prisma\"\nimport { User, UserRole, Prisma } from \"@prisma/client\"\nimport { HTTPException } from \"hono/http-exception\"\nimport { ApiError, ErrorCode } from \"../middleware/error-handler\"\nimport { comparePassword, hashPassword } from \"../utils/password\"\nimport {\n  UserProfileRequest,\n  UserResponse,\n  UserListQuery,\n  UserListResponse,\n  UserSearchQuery,\n} from \"../types/user.types\"\nimport {\n  ChangePasswordRequest,\n  UserRole as AppUserRole,\n} from \"../types/auth.types\"\nimport {\n  mapPrismaRoleToAppRole,\n  mapAppRoleToPrismaRole,\n} from \"../utils/role-mapper\"\n\ninterface UserUpdateInput {\n  name?: string\n  email?: string\n  organization?: string\n  department?: string\n  phone?: string\n}\n\ninterface PaginationParams {\n  page?: number\n  limit?: number\n  sortBy?: keyof User\n  sortOrder?: \"asc\" | \"desc\"\n}\n\ninterface PaginatedResponse<T> {\n  data: T[]\n  total: number\n  page: number\n  limit: number\n  totalPages: number\n}\n\n/**\n * User service\n */\nexport const userService = {\n  /**\n   * Get user profile\n   */\n  getProfile: async (userId: string): Promise<UserResponse> => {\n    const user = await prisma.user.findUnique({\n      where: { id: userId },\n    })\n\n    if (!user) {\n      throw new HTTPException(404, { message: \"User not found\" })\n    }\n\n    return {\n      id: user.id,\n      name: user.name || \"\",\n      email: user.email,\n      role: mapPrismaRoleToAppRole(user.role),\n      organization: user.organization || undefined,\n      department: user.department || undefined,\n      phone: user.phone || undefined,\n      image: user.image || undefined,\n      emailVerified: !!user.emailVerified,\n      createdAt: user.createdAt.toISOString(),\n      updatedAt: user.updatedAt.toISOString(),\n    }\n  },\n\n  /**\n   * Update user profile\n   */\n  updateProfile: async (\n    userId: string,\n    data: UserUpdateInput\n  ): Promise<UserResponse> => {\n    // Check if email is being updated and if it's already taken\n    if (data.email) {\n      const existingUser = await prisma.user.findUnique({\n        where: { email: data.email },\n      })\n\n      if (existingUser && existingUser.id !== userId) {\n        throw new HTTPException(400, { message: \"Email already taken\" })\n      }\n    }\n\n    try {\n      const updatedUser = await prisma.user.update({\n        where: { id: userId },\n        data,\n      })\n\n      return {\n        id: updatedUser.id,\n        name: updatedUser.name || \"\",\n        email: updatedUser.email,\n        role: mapPrismaRoleToAppRole(updatedUser.role),\n        organization: updatedUser.organization || undefined,\n        department: updatedUser.department || undefined,\n        phone: updatedUser.phone || undefined,\n        image: updatedUser.image || undefined,\n        emailVerified: !!updatedUser.emailVerified,\n        createdAt: updatedUser.createdAt.toISOString(),\n        updatedAt: updatedUser.updatedAt.toISOString(),\n      }\n    } catch (error) {\n      throw new HTTPException(500, { message: \"Failed to update user\" })\n    }\n  },\n\n  /**\n   * Change user password\n   */\n  changePassword: async (\n    userId: string,\n    currentPassword: string,\n    newPassword?: string\n  ): Promise<void> => {\n    const user = await prisma.user.findUnique({\n      where: { id: userId },\n    })\n\n    if (!user) {\n      throw new HTTPException(404, { message: \"User not found\" })\n    }\n\n    // If newPassword is not provided, treat currentPassword as the new password\n    // This is for admin reset functionality\n    if (!newPassword) {\n      const hashedPassword = await hashPassword(currentPassword)\n      await prisma.user.update({\n        where: { id: userId },\n        data: { password: hashedPassword },\n      })\n      return\n    }\n\n    // Verify current password\n    const isPasswordValid = await comparePassword(\n      currentPassword,\n      user.password\n    )\n\n    if (!isPasswordValid) {\n      throw new HTTPException(400, { message: \"Current password is incorrect\" })\n    }\n\n    // Hash and update new password\n    const hashedPassword = await hashPassword(newPassword)\n    await prisma.user.update({\n      where: { id: userId },\n      data: { password: hashedPassword },\n    })\n  },\n\n  /**\n   * Get all users\n   */\n  getAllUsers: async (query: UserSearchQuery): Promise<UserListResponse> => {\n    const {\n      page = 1,\n      limit = 10,\n      search = \"\",\n      role,\n      sortBy = \"createdAt\",\n      sortOrder = \"desc\",\n    } = query\n\n    const where: Prisma.UserWhereInput = {\n      AND: [\n        search\n          ? {\n              OR: [\n                { name: { contains: search, mode: \"insensitive\" } },\n                { email: { contains: search, mode: \"insensitive\" } },\n              ],\n            }\n          : {},\n        role ? { role: mapAppRoleToPrismaRole(role as AppUserRole) } : {},\n      ],\n    }\n\n    const [users, total] = await Promise.all([\n      prisma.user.findMany({\n        where,\n        skip: (page - 1) * limit,\n        take: limit,\n        orderBy: {\n          [sortBy]: sortOrder,\n        },\n      }),\n      prisma.user.count({ where }),\n    ])\n\n    return {\n      users: users.map((user) => ({\n        id: user.id,\n        name: user.name || \"\",\n        email: user.email,\n        role: mapPrismaRoleToAppRole(user.role),\n        emailVerified: user.emailVerified !== null,\n        organization: user.organization || \"\",\n        department: user.department || undefined,\n        phone: user.phone || undefined,\n        image: user.image || undefined,\n        createdAt: user.createdAt.toISOString(),\n        updatedAt: user.updatedAt.toISOString(),\n      })),\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit),\n    }\n  },\n\n  /**\n   * Get user by ID\n   */\n  getUserById: async (userId: string): Promise<UserResponse> => {\n    const user = await prisma.user.findUnique({\n      where: { id: userId },\n    })\n\n    if (!user) {\n      throw new HTTPException(404, { message: \"User not found\" })\n    }\n\n    return {\n      id: user.id,\n      name: user.name || \"\",\n      email: user.email,\n      role: mapPrismaRoleToAppRole(user.role),\n      organization: user.organization || undefined,\n      department: user.department || undefined,\n      phone: user.phone || undefined,\n      image: user.image || undefined,\n      emailVerified: !!user.emailVerified,\n      createdAt: user.createdAt.toISOString(),\n      updatedAt: user.updatedAt.toISOString(),\n    }\n  },\n\n  /**\n   * Update user role\n   */\n  updateUserRole: async (\n    userId: string,\n    role: AppUserRole\n  ): Promise<UserResponse> => {\n    const user = await prisma.user.findUnique({\n      where: { id: userId },\n    })\n\n    if (!user) {\n      throw new HTTPException(404, { message: \"User not found\" })\n    }\n\n    const updatedUser = await prisma.user.update({\n      where: { id: userId },\n      data: {\n        role: mapAppRoleToPrismaRole(role),\n      },\n    })\n\n    return {\n      id: updatedUser.id,\n      name: updatedUser.name || \"\",\n      email: updatedUser.email,\n      role: mapPrismaRoleToAppRole(updatedUser.role),\n      organization: updatedUser.organization || undefined,\n      department: updatedUser.department || undefined,\n      phone: updatedUser.phone || undefined,\n      image: updatedUser.image || undefined,\n      emailVerified: !!updatedUser.emailVerified,\n      createdAt: updatedUser.createdAt.toISOString(),\n      updatedAt: updatedUser.updatedAt.toISOString(),\n    }\n  },\n\n  /**\n   * Delete user (admin only)\n   */\n  deleteUser: async (userId: string): Promise<void> => {\n    try {\n      await prisma.user.delete({\n        where: { id: userId },\n      })\n    } catch (error) {\n      throw new HTTPException(500, { message: \"Failed to delete user\" })\n    }\n  },\n}\n","import bcrypt from \"bcryptjs\"\n\n/**\n * Hash a password\n * @param password Plain text password\n * @returns Hashed password\n */\nexport async function hashPassword(password: string): Promise<string> {\n  const salt = await bcrypt.genSalt(12)\n  return bcrypt.hash(password, salt)\n}\n\n/**\n * Compare a password with a hash\n * @param password Plain text password\n * @param hashedPassword Hashed password\n * @returns Whether the password matches the hash\n */\nexport async function comparePassword(\n  password: string,\n  hashedPassword: string\n): Promise<boolean> {\n  return bcrypt.compare(password, hashedPassword)\n}\n\n/**\n * Generate a random password\n * @param length Length of the password\n * @returns Random password\n */\nexport function generateRandomPassword(length = 12): string {\n  const charset =\n    \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~`|}{[]:;?><,./-=\"\n  let password = \"\"\n\n  for (let i = 0; i < length; i++) {\n    const randomIndex = Math.floor(Math.random() * charset.length)\n    password += charset[randomIndex]\n  }\n\n  return password\n}\n","import { z } from \"@hono/zod-openapi\"\nimport { UserRole } from \"./auth.types\"\n\n/**\n * User profile schema\n */\nexport const userProfileSchema = z\n  .object({\n    name: z.string().min(2, \"Name must be at least 2 characters\").openapi({\n      example: \"John Doe\",\n      description: \"User's full name\",\n    }),\n    organization: z.string().optional().openapi({\n      example: \"ACME Corp\",\n      description: \"User's organization\",\n    }),\n    department: z.string().optional().openapi({\n      example: \"Engineering\",\n      description: \"User's department\",\n    }),\n    phone: z.string().optional().openapi({\n      example: \"+1234567890\",\n      description: \"User's phone number\",\n    }),\n    image: z.string().url().optional().openapi({\n      example: \"https://example.com/avatar.jpg\",\n      description: \"User's profile image URL\",\n    }),\n  })\n  .openapi(\"UserProfile\")\n\nexport type UserProfileRequest = z.infer<typeof userProfileSchema>\n\n/**\n * User ID parameter schema\n */\nexport const UserIdParamSchema = z\n  .object({\n    id: z.string().uuid(\"Invalid user ID format\").openapi({\n      example: \"123e4567-e89b-12d3-a456-426614174000\",\n      description: \"User's unique identifier\",\n    }),\n  })\n  .openapi(\"UserIdParam\")\n\nexport type UserIdParam = z.infer<typeof UserIdParamSchema>\n\n/**\n * Update profile schema\n */\nexport const UpdateProfileSchema = userProfileSchema\n\n/**\n * Change password schema\n */\nexport const ChangePasswordSchema = z\n  .object({\n    currentPassword: z.string().openapi({\n      example: \"oldpassword123\",\n      description: \"Current password\",\n    }),\n    newPassword: z\n      .string()\n      .min(8, \"Password must be at least 8 characters\")\n      .openapi({\n        example: \"newpassword123\",\n        description: \"New password\",\n      }),\n  })\n  .openapi(\"ChangePassword\")\n\nexport type ChangePasswordRequest = z.infer<typeof ChangePasswordSchema>\n\n/**\n * User response schema\n */\nexport const userResponseSchema = z\n  .object({\n    id: z.string().openapi({\n      example: \"123e4567-e89b-12d3-a456-426614174000\",\n      description: \"User's unique identifier\",\n    }),\n    name: z.string().openapi({\n      example: \"John Doe\",\n      description: \"User's full name\",\n    }),\n    email: z.string().email().openapi({\n      example: \"john@example.com\",\n      description: \"User's email address\",\n    }),\n    role: z.nativeEnum(UserRole).openapi({\n      example: UserRole.USER,\n      description: \"User's role\",\n    }),\n    organization: z.string().optional().openapi({\n      example: \"ACME Corp\",\n      description: \"User's organization\",\n    }),\n    department: z.string().optional().openapi({\n      example: \"Engineering\",\n      description: \"User's department\",\n    }),\n    phone: z.string().optional().openapi({\n      example: \"+1234567890\",\n      description: \"User's phone number\",\n    }),\n    image: z.string().optional().openapi({\n      example: \"https://example.com/avatar.jpg\",\n      description: \"User's profile image URL\",\n    }),\n    emailVerified: z.boolean().openapi({\n      example: true,\n      description: \"Whether the user's email is verified\",\n    }),\n    createdAt: z.string().openapi({\n      example: \"2024-03-05T15:31:06.843Z\",\n      description: \"When the user was created\",\n    }),\n    updatedAt: z.string().openapi({\n      example: \"2024-03-05T15:31:06.843Z\",\n      description: \"When the user was last updated\",\n    }),\n  })\n  .openapi(\"UserResponse\")\n\nexport type UserResponse = z.infer<typeof userResponseSchema>\n\n/**\n * User list query parameters\n */\nexport const userListQuerySchema = z\n  .object({\n    page: z\n      .string()\n      .optional()\n      .transform((val) => (val ? parseInt(val, 10) : 1))\n      .openapi({\n        example: \"1\",\n        description: \"Page number\",\n      }),\n    limit: z\n      .string()\n      .optional()\n      .transform((val) => (val ? parseInt(val, 10) : 10))\n      .openapi({\n        example: \"10\",\n        description: \"Number of items per page\",\n      }),\n    search: z.string().optional().openapi({\n      example: \"john\",\n      description: \"Search term for name or email\",\n    }),\n    role: z.nativeEnum(UserRole).optional().openapi({\n      example: UserRole.USER,\n      description: \"Filter by user role\",\n    }),\n    sortBy: z\n      .enum([\"name\", \"email\", \"role\", \"createdAt\"])\n      .optional()\n      .default(\"createdAt\")\n      .openapi({\n        example: \"createdAt\",\n        description: \"Field to sort by\",\n      }),\n    sortOrder: z.enum([\"asc\", \"desc\"]).optional().default(\"desc\").openapi({\n      example: \"desc\",\n      description: \"Sort order\",\n    }),\n  })\n  .openapi(\"UserListQuery\")\n\nexport type UserListQuery = z.infer<typeof userListQuerySchema>\n\n/**\n * User search query\n */\nexport interface UserSearchQuery {\n  page: number\n  limit: number\n  sortBy: \"email\" | \"name\" | \"role\" | \"createdAt\"\n  sortOrder: \"asc\" | \"desc\"\n  role?: UserRole\n  search?: string\n}\n\n/**\n * User list response schema\n */\nexport const userListResponseSchema = z\n  .object({\n    users: z.array(userResponseSchema).openapi({\n      description: \"List of users\",\n    }),\n    total: z.number().openapi({\n      example: 100,\n      description: \"Total number of users\",\n    }),\n    page: z.number().openapi({\n      example: 1,\n      description: \"Current page number\",\n    }),\n    limit: z.number().openapi({\n      example: 10,\n      description: \"Number of items per page\",\n    }),\n    totalPages: z.number().openapi({\n      example: 10,\n      description: \"Total number of pages\",\n    }),\n  })\n  .openapi(\"UserListResponse\")\n\nexport type UserListResponse = z.infer<typeof userListResponseSchema>\n\n/**\n * User search response schema\n */\nexport const userSearchResponseSchema = userListResponseSchema\n\nexport type UserSearchResponse = z.infer<typeof userSearchResponseSchema>\n\n/**\n * Update user role schema\n */\nexport const updateUserRoleSchema = z\n  .object({\n    role: z.nativeEnum(UserRole).openapi({\n      example: UserRole.USER,\n      description: \"New role for the user\",\n    }),\n  })\n  .openapi(\"UpdateUserRole\")\n\nexport type UpdateUserRoleRequest = z.infer<typeof updateUserRoleSchema>\n","import { Hono } from \"hono\"\nimport { metadataService } from \"../services/metadata.service\"\nimport { authMiddleware } from \"../middleware/auth.middleware\"\nimport { zValidator } from \"@hono/zod-validator\"\nimport { z } from \"zod\"\nimport {\n  MetadataIdParamSchema,\n  MetadataRequestSchema,\n} from \"../types/metadata.types\"\nimport { UserRole } from \"../types/auth.types\"\nimport { Context } from \"../types/hono.types\"\nimport { prisma } from \"../lib/prisma\"\nimport { SafeJSON } from \"../utils/json-serializer\"\n\nconst metadata = new Hono<{\n  Variables: {\n    userId: string\n    userEmail: string\n    userRole: UserRole\n  }\n}>()\n\nconst metadataSchema = z.object({\n  title: z.string().min(1, \"Title is required\"),\n  author: z.string().min(1, \"Author is required\"),\n  organization: z.string().min(1, \"Organization is required\"),\n  dateFrom: z.string(),\n  dateTo: z.string(),\n  abstract: z.string().min(1, \"Abstract is required\"),\n  purpose: z.string().min(1, \"Purpose is required\"),\n  thumbnailUrl: z.string().url(\"Invalid thumbnail URL\"),\n  imageName: z.string(),\n  frameworkType: z.string(),\n  categories: z.array(z.string()),\n  coordinateSystem: z.string(),\n  projection: z.string(),\n  scale: z.number().positive(\"Scale must be positive\"),\n  resolution: z.string().optional(),\n  coordinateUnit: z.enum([\"DD\", \"DMS\"]).default(\"DD\"),\n  minLatitude: z.number().default(0),\n  minLongitude: z.number().default(0),\n  maxLatitude: z.number().default(0),\n  maxLongitude: z.number().default(0),\n  accuracyLevel: z.string(),\n  completeness: z.number().min(0).max(100).optional(),\n  consistencyCheck: z.boolean().optional(),\n  validationStatus: z.string().optional(),\n  fileFormat: z.string(),\n  fileSize: z.number().positive(\"File size must be positive\").optional(),\n  numFeatures: z\n    .number()\n    .positive(\"Number of features must be positive\")\n    .optional(),\n  softwareReqs: z.string().optional(),\n  updateCycle: z.string().optional(),\n  lastUpdate: z.string().datetime().optional(),\n  nextUpdate: z.string().datetime().optional(),\n  distributionFormat: z.string(),\n  accessMethod: z.string(),\n  downloadUrl: z.string().url(\"Invalid download URL\").optional(),\n  apiEndpoint: z.string().url(\"Invalid API endpoint\").optional(),\n  licenseType: z.string(),\n  usageTerms: z.string(),\n  attributionRequirements: z.string(),\n  accessRestrictions: z.array(z.string()),\n  contactPerson: z.string(),\n  email: z.string().email(\"Invalid email format\"),\n  department: z.string().optional(),\n})\n\n/**\n * Metadata routes\n */\n// Demo mode bypass auth middleware and set mock user\nmetadata.use(\"*\", async (c, next) => {\n  console.log(\"[DEMO MODE] Skipping authentication for metadata routes\")\n  c.set(\"userId\", \"demo-user-id\")\n  c.set(\"userEmail\", \"demo@example.com\")\n  c.set(\"userRole\", UserRole.ADMIN)\n  return next()\n})\n\n/**\n * @openapi\n * /api/metadata:\n *   post:\n *     summary: Create new metadata\n *     tags: [Metadata]\n *     security:\n *       - bearerAuth: []\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             $ref: '#/components/schemas/MetadataRequestSchema'\n *     responses:\n *       201:\n *         description: Metadata created successfully\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/MetadataResponse'\n *       400:\n *         $ref: '#/components/responses/BadRequest'\n *       401:\n *         $ref: '#/components/responses/Unauthorized'\n *       500:\n *         $ref: '#/components/responses/InternalServerError'\n */\nmetadata.post(\"/\", zValidator(\"json\", metadataSchema), async (c) => {\n  const userId = c.get(\"userId\")\n  const data = await c.req.json()\n  const result = await metadataService.createMetadata(data, userId)\n\n  // Use SafeJSON to handle BigInt values\n  return new Response(SafeJSON.stringify(result), {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n})\n\n/**\n * @openapi\n * /api/metadata/{id}:\n *   get:\n *     summary: Get metadata by ID\n *     tags: [Metadata]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: Metadata ID\n *     responses:\n *       200:\n *         description: Metadata details\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/MetadataResponse'\n *       401:\n *         $ref: '#/components/responses/Unauthorized'\n *       404:\n *         $ref: '#/components/responses/NotFound'\n *       500:\n *         $ref: '#/components/responses/InternalServerError'\n */\nmetadata.get(\"/:id\", zValidator(\"param\", MetadataIdParamSchema), async (c) => {\n  const { id } = c.req.valid(\"param\")\n\n  // Find the metadata by ID\n  const metadata = await prisma.metadata.findUnique({\n    where: { id },\n  })\n\n  if (!metadata) {\n    return c.json({ error: \"Metadata not found\" }, 404)\n  }\n\n  // Use SafeJSON to handle BigInt values\n  return new Response(\n    SafeJSON.stringify({\n      metadata,\n    }),\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  )\n})\n\n/**\n * @openapi\n * /api/metadata/{id}:\n *   put:\n *     summary: Update metadata\n *     tags: [Metadata]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: Metadata ID\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             $ref: '#/components/schemas/MetadataRequestSchema'\n *     responses:\n *       200:\n *         description: Metadata updated successfully\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/MetadataResponse'\n *       400:\n *         $ref: '#/components/responses/BadRequest'\n *       401:\n *         $ref: '#/components/responses/Unauthorized'\n *       403:\n *         $ref: '#/components/responses/Forbidden'\n *       404:\n *         $ref: '#/components/responses/NotFound'\n *       500:\n *         $ref: '#/components/responses/InternalServerError'\n */\nmetadata.put(\n  \"/:id\",\n  zValidator(\"param\", MetadataIdParamSchema),\n  zValidator(\"json\", metadataSchema.partial()),\n  async (c) => {\n    const userId = c.get(\"userId\")\n    const { id } = c.req.valid(\"param\")\n    const data = await c.req.json()\n    const result = await metadataService.updateMetadata(id, data, userId)\n\n    // Use SafeJSON to handle BigInt values\n    return new Response(SafeJSON.stringify(result), {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n  }\n)\n\n/**\n * @openapi\n * /api/metadata/{id}:\n *   delete:\n *     summary: Delete metadata\n *     tags: [Metadata]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: Metadata ID\n *     responses:\n *       200:\n *         description: Metadata deleted successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 message:\n *                   type: string\n *       401:\n *         $ref: '#/components/responses/Unauthorized'\n *       403:\n *         $ref: '#/components/responses/Forbidden'\n *       404:\n *         $ref: '#/components/responses/NotFound'\n *       500:\n *         $ref: '#/components/responses/InternalServerError'\n */\nmetadata.delete(\n  \"/:id\",\n  zValidator(\"param\", MetadataIdParamSchema),\n  async (c) => {\n    const userId = c.get(\"userId\")\n    const { id } = c.req.valid(\"param\")\n    await metadataService.deleteMetadata(id, userId)\n    return c.json({ message: \"Metadata deleted successfully\" })\n  }\n)\n\n/**\n * @openapi\n * /api/metadata/search:\n *   get:\n *     summary: Search metadata\n *     tags: [Metadata]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: query\n *         name: page\n *         schema:\n *           type: integer\n *           default: 1\n *         description: Page number\n *       - in: query\n *         name: limit\n *         schema:\n *           type: integer\n *           default: 10\n *         description: Number of items per page\n *       - in: query\n *         name: search\n *         schema:\n *           type: string\n *         description: Search term for title, author, or organization\n *       - in: query\n *         name: category\n *         schema:\n *           type: string\n *         description: Filter by category\n *       - in: query\n *         name: frameworkType\n *         schema:\n *           type: string\n *         description: Filter by framework type (Vector, Raster, Table)\n *       - in: query\n *         name: dateFrom\n *         schema:\n *           type: string\n *           format: date\n *         description: Filter by date from\n *       - in: query\n *         name: dateTo\n *         schema:\n *           type: string\n *           format: date\n *         description: Filter by date to\n *     responses:\n *       200:\n *         description: List of metadata\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/MetadataSearchResponse'\n *       401:\n *         $ref: '#/components/responses/Unauthorized'\n *       500:\n *         $ref: '#/components/responses/InternalServerError'\n */\nmetadata.get(\"/search\", async (c) => {\n  const {\n    page = \"1\",\n    limit = \"10\",\n    search,\n    category,\n    frameworkType,\n    dateFrom,\n    dateTo,\n  } = c.req.query()\n\n  const result = await metadataService.searchMetadata({\n    page: parseInt(page, 10),\n    limit: parseInt(limit, 10),\n    search,\n    category,\n    frameworkType,\n    dateFrom,\n    dateTo,\n    sortBy: \"createdAt\",\n    sortOrder: \"desc\",\n  })\n\n  // Use SafeJSON to handle BigInt values\n  return new Response(\n    SafeJSON.stringify({\n      success: true,\n      data: result,\n    }),\n    {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  )\n})\n\n/**\n * @openapi\n * /api/metadata/user:\n *   get:\n *     summary: Get current user's metadata\n *     tags: [Metadata]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: query\n *         name: page\n *         schema:\n *           type: integer\n *           default: 1\n *         description: Page number\n *       - in: query\n *         name: limit\n *         schema:\n *           type: integer\n *           default: 10\n *         description: Number of items per page\n *       - in: query\n *         name: search\n *         schema:\n *           type: string\n *         description: Search term for title, author, or organization\n *       - in: query\n *         name: category\n *         schema:\n *           type: string\n *         description: Filter by category\n *     responses:\n *       200:\n *         description: List of user's metadata\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/MetadataSearchResponse'\n *       401:\n *         $ref: '#/components/responses/Unauthorized'\n *       500:\n *         $ref: '#/components/responses/InternalServerError'\n */\nmetadata.get(\"/user\", async (c) => {\n  const userId = c.get(\"userId\")\n  const { page = \"1\", limit = \"10\", search, category } = c.req.query()\n\n  const result = await metadataService.getUserMetadata(userId, {\n    page: parseInt(page, 10),\n    limit: parseInt(limit, 10),\n    search,\n    category,\n    sortBy: \"createdAt\",\n    sortOrder: \"desc\",\n  })\n\n  // Use SafeJSON to handle BigInt values\n  return new Response(SafeJSON.stringify(result), {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  })\n})\n\n// Export the router\nexport { metadata }\nexport default metadata\n","import { prisma } from \"../lib/prisma\"\nimport { Metadata, Prisma } from \"@prisma/client\"\nimport { HTTPException } from \"hono/http-exception\"\nimport {\n  MetadataRequest,\n  MetadataResponse,\n  MetadataSearchQuery,\n  MetadataSearchResponse,\n} from \"../types/metadata.types\"\nimport { UserRole } from \"../types/auth.types\"\nimport { cacheService } from \"./cache.service\"\nimport { ApiError, ErrorCode } from \"../middleware/error-handler\"\n\ninterface MetadataInput {\n  title: string\n  author: string\n  organization: string\n  dateFrom: string\n  dateTo: string\n  abstract: string\n  purpose: string\n  thumbnailUrl: string\n  imageName: string\n  frameworkType: string\n  categories: string[]\n  coordinateSystem: string\n  projection: string\n  scale: number\n  resolution?: string\n  coordinateUnit: string\n  minLatitude: number\n  minLongitude: number\n  maxLatitude: number\n  maxLongitude: number\n  accuracyLevel: string\n  completeness?: number\n  consistencyCheck?: boolean\n  validationStatus?: string\n  fileFormat: string\n  fileSize?: number\n  numFeatures?: number\n  softwareReqs?: string\n  updateCycle: string\n  lastUpdate?: Date\n  nextUpdate?: Date\n  distributionFormat: string\n  accessMethod: string\n  downloadUrl?: string\n  apiEndpoint?: string\n  licenseType: string\n  usageTerms: string\n  attributionRequirements: string\n  accessRestrictions: string[]\n  contactPerson: string\n  email: string\n  department?: string\n}\n\ninterface PaginationParams {\n  page?: number\n  limit?: number\n  sortBy?: keyof Metadata\n  sortOrder?: \"asc\" | \"desc\"\n}\n\ninterface PaginatedResponse<T> {\n  data: T[]\n  total: number\n  page: number\n  limit: number\n  totalPages: number\n}\n\n/**\n * Metadata Service - responsible for metadata CRUD operations\n * Uses caching to optimize database access\n * \n * NOTE: This is a sample service implementation to demonstrate caching.\n * Adjust the actual fields and relations according to your Prisma schema.\n */\nexport const metadataService = {\n  /**\n   * Get metadata by ID, with caching\n   */\n  async getMetadataById(id: string) {\n    // Check cache first\n    const cacheKey = `metadata:${id}`\n    const cachedMetadata = await cacheService.get(cacheKey)\n    \n    if (cachedMetadata) {\n      console.log(`Cache hit for metadata ID: ${id}`)\n      return cachedMetadata\n    }\n    \n    // Not in cache, fetch from database\n    // Adjust the 'include' object based on your actual Prisma schema\n    const metadata = await prisma.metadata.findUnique({\n      where: { id }\n    })\n    \n    if (!metadata) {\n      throw new ApiError(\n        `Metadata with ID ${id} not found`,\n        404,\n        ErrorCode.RESOURCE_NOT_FOUND\n      )\n    }\n    \n    // Store in cache for faster access next time\n    await cacheService.set(cacheKey, metadata, 300) // Cache for 5 minutes\n    \n    return metadata\n  },\n  \n  /**\n   * List metadata with pagination, filtering and caching\n   */\n  async listMetadata(params: {\n    page?: number\n    limit?: number\n    search?: string\n    userId?: string\n    sort?: string\n    order?: 'asc' | 'desc'\n  }) {\n    const {\n      page = 1,\n      limit = 20,\n      search,\n      userId,\n      sort = 'updatedAt',\n      order = 'desc'\n    } = params\n    \n    // Calculate pagination\n    const skip = (page - 1) * limit\n    \n    // Build cache key based on query parameters\n    const cacheKey = `metadata:list:${JSON.stringify({\n      page, limit, search, userId, sort, order\n    })}`\n    \n    // Check cache first\n    const cachedResults = await cacheService.get(cacheKey)\n    if (cachedResults) {\n      console.log(`Cache hit for metadata listing`)\n      return cachedResults\n    }\n    \n    // Build where clause - adjust for your schema\n    const where: any = {}\n    \n    if (search) {\n      where.OR = [\n        { title: { contains: search } }\n        // Add other fields to search as needed based on your schema\n      ]\n    }\n    \n    if (userId) {\n      where.userId = userId\n    }\n    \n    // Execute queries with timing\n    const startTime = Date.now()\n    \n    // Execute count and find in parallel for better performance\n    const [total, items] = await Promise.all([\n      prisma.metadata.count({ where }),\n      prisma.metadata.findMany({\n        where,\n        skip,\n        take: limit,\n        orderBy: { [sort]: order }\n      })\n    ])\n    \n    const queryTime = Date.now() - startTime\n    \n    // Calculate pagination info\n    const totalPages = Math.ceil(total / limit)\n    \n    const result = {\n      items,\n      pagination: {\n        page,\n        limit,\n        total,\n        totalPages,\n      },\n      meta: {\n        queryTime\n      }\n    }\n    \n    // Cache results\n    // Use shorter TTL for list endpoints as they change more frequently\n    await cacheService.set(cacheKey, result, 60) // Cache for 1 minute\n    \n    return result\n  },\n  \n  /**\n   * Create new metadata\n   */\n  async createMetadata(data: any, userId?: string) {\n    // If userId is provided, include it in the data\n    const createData = userId ? { ...data, userId } : data;\n    \n    const metadata = await prisma.metadata.create({\n      data: createData\n    })\n    \n    // Clear list caches when data changes\n    await cacheService.clearByPrefix('metadata:list:')\n    \n    return metadata\n  },\n  \n  /**\n   * Update metadata\n   */\n  async updateMetadata(id: string, data: any, userId?: string) {\n    // Check if metadata exists\n    const exists = await prisma.metadata.findUnique({ where: { id } })\n    \n    if (!exists) {\n      throw new ApiError(\n        `Metadata with ID ${id} not found`,\n        404,\n        ErrorCode.RESOURCE_NOT_FOUND\n      )\n    }\n    \n    // If userId is provided, include ownership check\n    if (userId && exists.userId !== userId) {\n      throw new ApiError(\n        \"You don't have permission to update this metadata\",\n        403,\n        ErrorCode.BUSINESS_RULE_VIOLATION\n      )\n    }\n    \n    const metadata = await prisma.metadata.update({\n      where: { id },\n      data\n    })\n    \n    // Delete specific cache\n    await cacheService.delete(`metadata:${id}`)\n    \n    // Clear list caches when data changes\n    await cacheService.clearByPrefix('metadata:list:')\n    \n    return metadata\n  },\n  \n  /**\n   * Delete metadata\n   */\n  async deleteMetadata(id: string, userId?: string) {\n    // Check if metadata exists\n    const exists = await prisma.metadata.findUnique({ where: { id } })\n    \n    if (!exists) {\n      throw new ApiError(\n        `Metadata with ID ${id} not found`,\n        404,\n        ErrorCode.RESOURCE_NOT_FOUND\n      )\n    }\n    \n    // If userId is provided, include ownership check\n    if (userId && exists.userId !== userId) {\n      throw new ApiError(\n        \"You don't have permission to delete this metadata\",\n        403,\n        ErrorCode.BUSINESS_RULE_VIOLATION\n      )\n    }\n    \n    await prisma.metadata.delete({ where: { id } })\n    \n    // Delete specific cache\n    await cacheService.delete(`metadata:${id}`)\n    \n    // Clear list caches when data changes\n    await cacheService.clearByPrefix('metadata:list:')\n    \n    return { success: true }\n  },\n\n  /**\n   * Search metadata\n   */\n  searchMetadata: async (\n    searchQuery: MetadataSearchQuery\n  ): Promise<MetadataSearchResponse> => {\n    const {\n      page = 1,\n      limit = 10,\n      sortBy = \"createdAt\",\n      sortOrder = \"desc\",\n      organization,\n      author,\n      dateFrom,\n      dateTo,\n      fileFormat,\n      search,\n      category,\n      frameworkType,\n    } = searchQuery\n\n    console.log(\"API searchMetadata called with:\", {\n      searchQuery,\n      table: \"metadata\",\n    })\n\n    const skip = (page - 1) * limit\n\n    // Build where conditions for metadata table\n    const where: any = {}\n\n    // If frameworkType is specified, use it directly (for Vector, Raster, Table)\n    if (frameworkType) {\n      where.frameworkType = { equals: frameworkType, mode: \"insensitive\" }\n    }\n\n    if (search) {\n      // Enhanced search across all relevant fields\n      where.OR = [\n        { title: { contains: search, mode: \"insensitive\" } },\n        { abstract: { contains: search, mode: \"insensitive\" } },\n        { purpose: { contains: search, mode: \"insensitive\" } },\n        { author: { contains: search, mode: \"insensitive\" } },\n        { organization: { contains: search, mode: \"insensitive\" } },\n        { frameworkType: { contains: search, mode: \"insensitive\" } },\n        // Add a search for IDs that start with the search term\n        { id: { startsWith: search } },\n      ]\n    }\n\n    if (category) {\n      // For category filtering, handle special cases and normalize\n      if (category.toLowerCase() === \"vector\") {\n        where.frameworkType = { equals: \"Vector\", mode: \"insensitive\" }\n      } else if (category.toLowerCase() === \"raster\") {\n        where.frameworkType = { equals: \"Raster\", mode: \"insensitive\" }\n      } else if (category.toLowerCase() === \"table\") {\n        where.frameworkType = { equals: \"Table\", mode: \"insensitive\" }\n      } else {\n        // For other categories, try to find it in the categories array or category-related fields\n        where.OR = [\n          ...(where.OR || []),\n          // Search in categories array\n          { categories: { has: category } },\n          // Search for dataType-related terms in various fields\n          { frameworkType: { contains: category, mode: \"insensitive\" } },\n          { title: { contains: category, mode: \"insensitive\" } },\n          { abstract: { contains: category, mode: \"insensitive\" } },\n        ]\n      }\n\n      console.log(`Applied category filter: ${category}`, where)\n    }\n\n    if (organization) {\n      where.organization = { contains: organization, mode: \"insensitive\" }\n    }\n\n    if (dateFrom) {\n      where.productionDate = { gte: new Date(dateFrom) }\n    }\n\n    if (dateTo) {\n      where.productionDate = {\n        ...(where.productionDate || {}),\n        lte: new Date(dateTo),\n      }\n    }\n\n    try {\n      console.log(\"Executing Prisma query with:\", {\n        where,\n        skip,\n        take: limit,\n        orderBy: {\n          [mapSortField(sortBy)]: sortOrder,\n        },\n      })\n\n      // Execute query and count in parallel using metadata table\n      const [metadata, total] = await Promise.all([\n        prisma.metadata.findMany({\n          where,\n          skip,\n          take: limit,\n          orderBy: {\n            // Map frontend sort fields to database fields\n            [mapSortField(sortBy)]: sortOrder,\n          },\n          select: {\n            id: true,\n            title: true,\n            author: true,\n            organization: true,\n            abstract: true,\n            purpose: true,\n            thumbnailUrl: true,\n            dateFrom: true,\n            dateTo: true,\n            frameworkType: true,\n            categories: true,\n            fileFormat: true,\n            createdAt: true,\n            updatedAt: true,\n            user: {\n              select: {\n                name: true,\n                email: true,\n              },\n            },\n          },\n        }),\n        prisma.metadata.count({ where }),\n      ])\n\n      console.log(\"Prisma query results:\", {\n        metadataCount: metadata.length,\n        total,\n        firstItem: metadata.length > 0 ? metadata[0] : null,\n      })\n\n      // Map the fields to the expected MetadataResponse structure\n      const mappedMetadata = metadata.map((item) => ({\n        id: item.id,\n        title: item.title,\n        author: item.author,\n        organization: item.organization,\n        dateFrom: item.dateFrom?.toString() || null,\n        dateTo: item.dateTo?.toString() || null,\n        abstract: item.abstract,\n        purpose: item.purpose,\n        thumbnailUrl: item.thumbnailUrl,\n        imageName: null,\n        frameworkType: item.frameworkType,\n        coordinateUnit: null,\n        minLatitude: null,\n        minLongitude: null,\n        maxLatitude: null,\n        maxLongitude: null,\n        dataName: null,\n        productionDate: null,\n        updatedAt: item.updatedAt.toISOString(),\n      }))\n\n      return {\n        metadata: mappedMetadata,\n        total,\n        page,\n        limit,\n        totalPages: Math.ceil(total / limit),\n      }\n    } catch (error) {\n      console.error(\"Error searching metadata:\", error)\n      throw new HTTPException(500, { message: \"Failed to search metadata\" })\n    }\n  },\n\n  /**\n   * Get user's metadata\n   */\n  getUserMetadata: async (\n    userId: string,\n    query: {\n      page: number\n      limit: number\n      search?: string\n      category?: string\n      sortBy: \"title\" | \"author\" | \"organization\" | \"createdAt\"\n      sortOrder: \"asc\" | \"desc\"\n    }\n  ): Promise<MetadataSearchResponse> => {\n    const {\n      page,\n      limit,\n      search,\n      category,\n      sortBy = \"createdAt\",\n      sortOrder = \"desc\",\n    } = query\n\n    const skip = (page - 1) * limit\n\n    // Build where clause\n    const where: Prisma.MetadataWhereInput = {\n      userId,\n      ...(search\n        ? {\n            OR: [\n              { title: { contains: search, mode: \"insensitive\" } },\n              { abstract: { contains: search, mode: \"insensitive\" } },\n              { author: { contains: search, mode: \"insensitive\" } },\n            ],\n          }\n        : {}),\n      ...(category ? { categories: { has: category } } : {}),\n    }\n\n    // Get data with pagination\n    const [result, total] = await Promise.all([\n      prisma.metadata.findMany({\n        where,\n        skip,\n        take: limit,\n        orderBy: {\n          [sortBy]: sortOrder,\n        },\n      }),\n      prisma.metadata.count({ where }),\n    ])\n\n    return {\n      metadata: result.map((metadata) => ({\n        id: metadata.id,\n        title: metadata.title,\n        author: metadata.author,\n        organization: metadata.organization,\n        dateFrom: metadata.dateFrom,\n        dateTo: metadata.dateTo,\n        abstract: metadata.abstract,\n        purpose: metadata.purpose,\n        thumbnailUrl: metadata.thumbnailUrl,\n        imageName: metadata.imageName,\n        frameworkType: metadata.frameworkType,\n        categories: metadata.categories,\n        coordinateSystem: metadata.coordinateSystem,\n        projection: metadata.projection,\n        scale: metadata.scale,\n        resolution: metadata.resolution || undefined,\n        accuracyLevel: metadata.accuracyLevel,\n        completeness: metadata.completeness || undefined,\n        consistencyCheck: metadata.consistencyCheck || undefined,\n        validationStatus: metadata.validationStatus || undefined,\n        fileFormat: metadata.fileFormat,\n        fileSize: metadata.fileSize || undefined,\n        numFeatures: metadata.numFeatures || undefined,\n        softwareReqs: metadata.softwareReqs || undefined,\n        updateCycle: metadata.updateCycle || undefined,\n        lastUpdate: metadata.lastUpdate?.toISOString() || undefined,\n        nextUpdate: metadata.nextUpdate?.toISOString() || undefined,\n        distributionFormat: metadata.distributionFormat,\n        accessMethod: metadata.accessMethod,\n        downloadUrl: metadata.downloadUrl || undefined,\n        apiEndpoint: metadata.apiEndpoint || undefined,\n        licenseType: metadata.licenseType,\n        usageTerms: metadata.usageTerms,\n        attributionRequirements: metadata.attributionRequirements,\n        accessRestrictions: metadata.accessRestrictions,\n        contactPerson: metadata.contactPerson,\n        email: metadata.email,\n        department: metadata.department || undefined,\n        userId: metadata.userId,\n        createdAt: metadata.createdAt.toISOString(),\n        updatedAt: metadata.updatedAt.toISOString(),\n      })),\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit),\n    }\n  },\n}\n\nexport default metadataService\n\n// Helper function to map sort fields from frontend to database fields\nfunction mapSortField(sortBy: string): string {\n  switch (sortBy) {\n    case \"title\":\n      return \"title\"\n    case \"createdAt\":\n      return \"createdAt\"\n    default:\n      return sortBy\n  }\n}\n\n// Helper function to format dates\nfunction formatDate(date: Date | string | null): string {\n  if (!date) return new Date().toISOString()\n  if (date instanceof Date) {\n    return date.toISOString()\n  }\n  return date\n}\n","import { redisService } from './redis.service';\n\n/**\n * Cache service for optimizing database access\n * \n * This service implements a two-level caching strategy:\n * 1. In-memory cache for very fast access to frequently used data\n * 2. Redis cache for distributed caching in multi-instance environments\n */\n\n// Types\ninterface CacheOptions {\n  ttl?: number;         // Time to live in seconds\n  useRedis?: boolean;   // Whether to use Redis as a second-level cache\n  useMemory?: boolean;  // Whether to use in-memory cache\n  prefix?: string;      // Cache key prefix\n}\n\ninterface CacheEntry<T> {\n  value: T;\n  timestamp: number;\n  expiresAt: number;\n}\n\n// Default options\nconst DEFAULT_OPTIONS: CacheOptions = {\n  ttl: 300,             // 5 minutes\n  useRedis: true,\n  useMemory: true,\n  prefix: 'cache:'\n};\n\n// In-memory cache storage\nconst memoryCache = new Map<string, CacheEntry<any>>();\n\n// Cleanup timer for memory cache\nsetInterval(() => {\n  const now = Date.now();\n  \n  // Clean expired entries\n  for (const [key, entry] of memoryCache.entries()) {\n    if (entry.expiresAt < now) {\n      memoryCache.delete(key);\n    }\n  }\n}, 60 * 1000); // Run every minute\n\n/**\n * Generate a cache key with prefix\n */\nfunction generateKey(key: string, options: CacheOptions): string {\n  return `${options.prefix}${key}`;\n}\n\n/**\n * Check if a cache entry is valid\n */\nfunction isValid(entry: CacheEntry<any> | null | undefined): boolean {\n  if (!entry) return false;\n  return entry.expiresAt > Date.now();\n}\n\n/**\n * Cache Service with methods for get, set, delete operations\n */\nexport const cacheService = {\n  /**\n   * Get a value from cache\n   * @param key Cache key\n   * @param options Cache options\n   * @returns The cached value or null if not found\n   */\n  async get<T>(key: string, options: CacheOptions = {}): Promise<T | null> {\n    const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n    const fullKey = generateKey(key, mergedOptions);\n    \n    // Try memory cache first\n    if (mergedOptions.useMemory) {\n      const memoryEntry = memoryCache.get(fullKey);\n      if (memoryEntry && isValid(memoryEntry)) {\n        return memoryEntry.value as T;\n      }\n    }\n    \n    // Try Redis cache\n    if (mergedOptions.useRedis) {\n      try {\n        const redisEntry = await redisService.get(fullKey);\n        if (redisEntry) {\n          // Parse the cached data\n          const entry = JSON.parse(redisEntry) as CacheEntry<T>;\n          \n          // Check if entry is still valid\n          if (isValid(entry)) {\n            // Store in memory cache for faster access next time\n            if (mergedOptions.useMemory) {\n              memoryCache.set(fullKey, entry);\n            }\n            return entry.value;\n          }\n        }\n      } catch (error) {\n        console.error('Redis cache error:', error);\n        // Continue execution even if Redis fails\n      }\n    }\n    \n    return null;\n  },\n  \n  /**\n   * Set a value in cache\n   * @param key Cache key\n   * @param value Value to cache\n   * @param options Cache options or ttl in seconds\n   */\n  async set<T>(\n    key: string, \n    value: T, \n    optionsOrTtl: CacheOptions | number = {}\n  ): Promise<void> {\n    // Handle case where ttl is passed as a number\n    const options = typeof optionsOrTtl === 'number' \n      ? { ttl: optionsOrTtl } \n      : optionsOrTtl;\n    \n    const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n    const fullKey = generateKey(key, mergedOptions);\n    \n    const now = Date.now();\n    const ttlMs = mergedOptions.ttl! * 1000;\n    \n    const entry: CacheEntry<T> = {\n      value,\n      timestamp: now,\n      expiresAt: now + ttlMs\n    };\n    \n    // Set in memory cache\n    if (mergedOptions.useMemory) {\n      memoryCache.set(fullKey, entry);\n    }\n    \n    // Set in Redis cache\n    if (mergedOptions.useRedis) {\n      try {\n        await redisService.set(\n          fullKey, \n          JSON.stringify(entry), \n          mergedOptions.ttl!\n        );\n      } catch (error) {\n        console.error('Redis cache set error:', error);\n        // Continue execution even if Redis fails\n      }\n    }\n  },\n  \n  /**\n   * Delete a value from cache\n   * @param key Cache key\n   * @param options Cache options\n   */\n  async delete(key: string, options: CacheOptions = {}): Promise<void> {\n    const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n    const fullKey = generateKey(key, mergedOptions);\n    \n    // Delete from memory cache\n    if (mergedOptions.useMemory) {\n      memoryCache.delete(fullKey);\n    }\n    \n    // Delete from Redis cache\n    if (mergedOptions.useRedis) {\n      try {\n        await redisService.delete(fullKey);\n      } catch (error) {\n        console.error('Redis cache delete error:', error);\n      }\n    }\n  },\n  \n  /**\n   * Clear all cache entries with a specific prefix\n   * @param prefix Prefix to match cache keys\n   */\n  async clearByPrefix(prefix: string): Promise<void> {\n    // Clear from memory cache\n    for (const key of memoryCache.keys()) {\n      if (key.startsWith(prefix)) {\n        memoryCache.delete(key);\n      }\n    }\n    \n    // Clear from Redis cache\n    try {\n      await redisService.deleteByPattern(`${prefix}*`);\n    } catch (error) {\n      console.error('Redis cache clear error:', error);\n    }\n  }\n}; ","import { z } from 'zod';\n\n/**\n * Metadata schema\n */\nexport const metadataSchema = z.object({\n  title: z.string().min(3, \"Title must be at least 3 characters\"),\n  author: z.string().min(2, \"Author must be at least 2 characters\"),\n  organization: z.string().min(2, \"Organization must be at least 2 characters\"),\n  dateFrom: z.string(),\n  dateTo: z.string(),\n  abstract: z.string().min(10, \"Abstract must be at least 10 characters\"),\n  purpose: z.string().min(10, \"Purpose must be at least 10 characters\"),\n  thumbnailUrl: z.string().url(\"Invalid thumbnail URL\"),\n  imageName: z.string(),\n  frameworkType: z.string(),\n  categories: z.array(z.string()).default([]),\n  coordinateSystem: z.string(),\n  projection: z.string(),\n  scale: z.number().int().positive(\"Scale must be a positive integer\"),\n  resolution: z.string().optional(),\n  coordinateUnit: z.enum([\"DD\", \"DMS\"]).default(\"DD\"),\n  minLatitude: z.number().default(0),\n  minLongitude: z.number().default(0),\n  maxLatitude: z.number().default(0),\n  maxLongitude: z.number().default(0),\n  accuracyLevel: z.string(),\n  completeness: z\n    .number()\n    .int()\n    .min(0)\n    .max(100, \"Completeness must be between 0 and 100\")\n    .optional(),\n  consistencyCheck: z.boolean().optional(),\n  validationStatus: z.string().optional(),\n  fileFormat: z.string(),\n  fileSize: z\n    .number()\n    .int()\n    .positive(\"File size must be a positive integer\")\n    .optional(),\n  numFeatures: z\n    .number()\n    .int()\n    .positive(\"Number of features must be a positive integer\")\n    .optional(),\n  softwareReqs: z.string().optional(),\n  updateCycle: z.string().optional(),\n  lastUpdate: z.string().optional(),\n  nextUpdate: z.string().optional(),\n  distributionFormat: z.string(),\n  accessMethod: z.string(),\n  downloadUrl: z.string().url(\"Invalid download URL\").optional(),\n  apiEndpoint: z.string().url(\"Invalid API endpoint\").optional(),\n  licenseType: z.string(),\n  usageTerms: z.string(),\n  attributionRequirements: z.string(),\n  accessRestrictions: z.array(z.string()).default([]),\n  contactPerson: z.string(),\n  email: z.string().email(\"Invalid email address\"),\n  department: z.string().optional(),\n})\n\nexport type MetadataRequest = z.infer<typeof metadataSchema>;\n\n/**\n * Metadata ID parameter schema\n */\nexport const MetadataIdParamSchema = z.object({\n  id: z.string().uuid('Invalid metadata ID format'),\n});\n\nexport type MetadataIdParam = z.infer<typeof MetadataIdParamSchema>;\n\n/**\n * Metadata request schema\n */\nexport const MetadataRequestSchema = metadataSchema;\n\n/**\n * Metadata response\n */\nexport interface MetadataResponse {\n  id: string\n  title: string\n  author: string | null\n  organization: string | null\n  dateFrom: string | null\n  dateTo: string | null\n  abstract: string | null\n  purpose: string | null\n  thumbnailUrl: string | null\n  imageName: string | null\n  frameworkType: string | null\n  coordinateUnit?: string | null\n  minLatitude?: number | null\n  minLongitude?: number | null\n  maxLatitude?: number | null\n  maxLongitude?: number | null\n  dataName?: string | null\n  productionDate?: string | null\n  updatedAt: string\n}\n\n/**\n * Metadata search query parameters\n */\nexport const metadataSearchQuerySchema = z.object({\n  page: z\n    .string()\n    .optional()\n    .transform((val) => (val ? parseInt(val, 10) : 1)),\n  limit: z\n    .string()\n    .optional()\n    .transform((val) => (val ? parseInt(val, 10) : 10)),\n  search: z.string().optional(),\n  category: z.string().optional(),\n  frameworkType: z.string().optional(),\n  author: z.string().optional(),\n  organization: z.string().optional(),\n  dateFrom: z.string().optional(),\n  dateTo: z.string().optional(),\n  fileFormat: z.string().optional(),\n  sortBy: z\n    .enum([\"title\", \"author\", \"organization\", \"createdAt\"])\n    .optional()\n    .default(\"createdAt\"),\n  sortOrder: z.enum([\"asc\", \"desc\"]).optional().default(\"desc\"),\n})\n\nexport type MetadataSearchQuery = z.infer<typeof metadataSearchQuerySchema>;\n\n/**\n * Metadata search response\n */\nexport interface MetadataSearchResponse {\n  metadata: MetadataResponse[];\n  total: number;\n  page: number;\n  limit: number;\n  totalPages: number;\n} ","/**\n * Custom JSON serializer that handles BigInt values\n * This solves the \"Do not know how to serialize a BigInt\" error\n */\n\n/**\n * Custom JSON replacer function that converts BigInt to string\n * This should be used when calling JSON.stringify() with data that may contain BigInt values\n */\nexport function bigIntSerializer(key: string, value: any): any {\n  // Check if the value is a BigInt and convert it to a string\n  if (typeof value === \"bigint\") {\n    return value.toString()\n  }\n\n  // Return all other values unchanged\n  return value\n}\n\n/**\n * Wrapper around JSON.stringify that safely handles BigInt values\n */\nexport function safeStringify(obj: any): string {\n  return JSON.stringify(obj, bigIntSerializer)\n}\n\n/**\n * SafeJSON object to use as a replacement for JSON\n * Provides the same interface as the native JSON object but with BigInt handling\n */\nexport const SafeJSON = {\n  stringify: (\n    value: any,\n    replacer?: (key: string, value: any) => any,\n    space?: string | number\n  ): string => {\n    const effectiveReplacer = replacer\n      ? (key: string, val: any) => {\n          // Apply our BigInt serializer first, then the custom replacer\n          const processedValue = typeof val === \"bigint\" ? val.toString() : val\n          return replacer(key, processedValue)\n        }\n      : bigIntSerializer\n\n    return JSON.stringify(value, effectiveReplacer, space)\n  },\n\n  // Parse remains the same as the native JSON.parse\n  parse: JSON.parse,\n}\n","import { Hono } from \"hono\"\nimport { metadataService } from \"../services/metadata.service\"\nimport { authMiddleware } from \"../middleware/auth.middleware\"\n\nconst searchRouter = new Hono()\n\n// Create a public search endpoint that doesn't require authentication\nsearchRouter.get(\"/metadata\", async (c) => {\n  const {\n    page = \"1\",\n    limit = \"10\",\n    search,\n    category,\n    dateFrom,\n    dateTo,\n    sortBy = \"createdAt\",\n    sortOrder = \"desc\",\n  } = c.req.query()\n\n  try {\n    const result = await metadataService.searchMetadata({\n      page: parseInt(page, 10),\n      limit: parseInt(limit, 10),\n      search,\n      category,\n      dateFrom,\n      dateTo,\n      sortBy: sortBy as \"title\" | \"author\" | \"organization\" | \"createdAt\",\n      sortOrder: sortOrder === \"asc\" ? \"asc\" : \"desc\",\n    })\n\n    return c.json({\n      success: true,\n      data: result,\n    })\n  } catch (error) {\n    console.error(\"Public search error:\", error)\n    return c.json(\n      {\n        success: false,\n        error: \"Failed to search metadata\",\n      },\n      500\n    )\n  }\n})\n\nexport default searchRouter\n","import { Hono } from \"hono\"\nimport { zValidator } from \"@hono/zod-validator\"\nimport { adminService } from \"../services/admin.service\"\nimport { UserRole } from \"../types/auth.types\"\nimport { UserIdParamSchema } from \"../types/user.types\"\nimport { MetadataIdParamSchema } from \"../types/metadata.types\"\nimport { Context } from \"../types/hono.types\"\nimport { ApiError } from \"../middleware/error-handler\"\nimport { prisma } from \"../lib/prisma\"\nimport { logger } from \"../lib/logger\"\nimport { UserRole as PrismaUserRole } from \"@prisma/client\"\nimport { SafeJSON } from \"../utils/json-serializer\"\nimport { memoryCache } from \"../utils/cache\"\n\n// Define the user type based on the auth middleware\ninterface User {\n  id: string\n  email: string\n  role: UserRole\n}\n\n/**\n * Admin routes\n */\nexport const adminRouter = new Hono<{\n  Variables: {\n    userId: string\n    userEmail: string\n    userRole: UserRole\n    secureHeadersNonce?: string\n    user: User\n  }\n}>()\n  // DEMO MODE: Apply mock admin auth to all routes\n  .use(\"*\", async (c, next) => {\n    console.log(\"[DEMO MODE] Skipping authentication for admin routes\")\n\n    // Set mock admin user\n    const mockUser = {\n      id: \"demo-user-id\",\n      email: \"demo@example.com\",\n      role: UserRole.ADMIN,\n    }\n\n    // Set all the user variables\n    c.set(\"userId\", mockUser.id)\n    c.set(\"userEmail\", mockUser.email)\n    c.set(\"userRole\", mockUser.role)\n    c.set(\"user\", mockUser)\n\n    await next()\n  })\n\n/**\n * @openapi\n * /api/admin/users:\n *   get:\n *     summary: Get all users\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: query\n *         name: page\n *         schema:\n *           type: integer\n *           default: 1\n *         description: Page number\n *       - in: query\n *         name: limit\n *         schema:\n *           type: integer\n *           default: 10\n *         description: Number of items per page\n *       - in: query\n *         name: search\n *         schema:\n *           type: string\n *         description: Search term for email, first name, or last name\n *       - in: query\n *         name: role\n *         schema:\n *           type: string\n *           enum: [USER, ADMIN]\n *         description: Filter by user role\n *     responses:\n *       200:\n *         description: List of users\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/UserSearchResponse'\n *       401:\n *         $ref: '#/components/responses/Unauthorized'\n *       403:\n *         $ref: '#/components/responses/Forbidden'\n *       500:\n *         $ref: '#/components/responses/InternalServerError'\n */\nadminRouter.get(\"/users\", async (c) => {\n  const { page = \"1\", limit = \"10\", search, role } = c.req.query()\n\n  // Generate cache key from query parameters\n  const cacheKey = `admin-users-${page}-${limit}-${search || \"\"}-${role || \"\"}`\n\n  // Check cache first for non-search queries\n  const cachedResult = memoryCache.get(cacheKey)\n  if (cachedResult && !search) {\n    // Don't use cache for search queries\n    logger.info(\"Serving admin users from cache\")\n\n    return new Response(cachedResult as string, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-Cache\": \"HIT\",\n      },\n    })\n  }\n\n  const users = await adminService.getAllUsers({\n    page: parseInt(page, 10),\n    limit: parseInt(limit, 10),\n    search,\n    role: role as UserRole | undefined,\n    sortBy: \"createdAt\",\n    sortOrder: \"desc\",\n  })\n\n  // Serialize response\n  const serializedResponse = SafeJSON.stringify({\n    success: true,\n    data: users,\n  })\n\n  // Cache the result for 2 minutes, but only if it's not a search query\n  if (!search) {\n    memoryCache.set(cacheKey, serializedResponse, 120000) // 2 minutes TTL\n  }\n\n  return new Response(serializedResponse, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"X-Cache\": \"MISS\",\n    },\n  })\n})\n\n/**\n * @openapi\n * /api/admin/users/{id}/role:\n *   put:\n *     summary: Update user role\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: User ID\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             required:\n *               - role\n *             properties:\n *               role:\n *                 type: string\n *                 enum: [USER, ADMIN]\n *     responses:\n *       200:\n *         description: User role updated\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/UserResponse'\n *       400:\n *         $ref: '#/components/responses/BadRequest'\n *       401:\n *         $ref: '#/components/responses/Unauthorized'\n *       403:\n *         $ref: '#/components/responses/Forbidden'\n *       404:\n *         $ref: '#/components/responses/NotFound'\n *       500:\n *         $ref: '#/components/responses/InternalServerError'\n */\nadminRouter.put(\n  \"/users/:id/role\",\n  zValidator(\"param\", UserIdParamSchema),\n  async (c) => {\n    const { id } = c.req.valid(\"param\")\n    const { role } = await c.req.json()\n\n    if (!role || !Object.values(UserRole).includes(role as UserRole)) {\n      return c.json(\n        {\n          success: false,\n          message: \"Invalid role\",\n        },\n        400\n      )\n    }\n\n    try {\n      const user = await adminService.updateUserRole(id, role as UserRole)\n\n      return c.json({\n        success: true,\n        message: \"User role updated successfully\",\n        data: user,\n      })\n    } catch (error) {\n      if (error instanceof ApiError && error.status === 404) {\n        return c.json(\n          {\n            success: false,\n            message: error.message,\n          },\n          404\n        )\n      }\n\n      console.error(\"Error updating user role:\", error)\n      return c.json(\n        {\n          success: false,\n          message: \"Failed to update user role\",\n        },\n        500\n      )\n    }\n  }\n)\n\n/**\n * @openapi\n * /api/admin/users/{id}:\n *   get:\n *     summary: Get detailed user information\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: User ID\n *     responses:\n *       200:\n *         description: Detailed user information\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 data:\n *                   type: object\n *                   properties:\n *                     id:\n *                       type: string\n *                     email:\n *                       type: string\n *                     name:\n *                       type: string\n *                     role:\n *                       type: string\n *                     emailVerified:\n *                       type: boolean\n *                     organization:\n *                       type: string\n *                     department:\n *                       type: string\n *                     phone:\n *                       type: string\n *                     image:\n *                       type: string\n *                     createdAt:\n *                       type: string\n *                     updatedAt:\n *                       type: string\n *                     metadataCount:\n *                       type: number\n *                     recentActivity:\n *                       type: array\n *                       items:\n *                         type: object\n *                         properties:\n *                           id:\n *                             type: string\n *                           title:\n *                             type: string\n *                           updatedAt:\n *                             type: string\n *       401:\n *         $ref: '#/components/responses/Unauthorized'\n *       403:\n *         $ref: '#/components/responses/Forbidden'\n *       404:\n *         $ref: '#/components/responses/NotFound'\n *       500:\n *         $ref: '#/components/responses/InternalServerError'\n */\nadminRouter.get(\n  \"/users/:id\",\n  zValidator(\"param\", UserIdParamSchema),\n  async (c) => {\n    const { id } = c.req.valid(\"param\")\n\n    try {\n      console.log(`[API] Fetching details for user ${id}`)\n      const userDetails = await adminService.getUserDetails(id)\n\n      return c.json({\n        success: true,\n        data: userDetails,\n      })\n    } catch (error) {\n      if (error instanceof ApiError && error.status === 404) {\n        return c.json(\n          {\n            success: false,\n            message: \"User not found\",\n          },\n          404\n        )\n      }\n\n      console.error(\"Error fetching user details:\", error)\n      return c.json(\n        {\n          success: false,\n          message: \"Failed to fetch user details\",\n        },\n        500\n      )\n    }\n  }\n)\n\n/**\n * @openapi\n * /api/admin/users/{id}:\n *   delete:\n *     summary: Delete a user\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: User ID\n *     responses:\n *       200:\n *         description: User deleted successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 message:\n *                   type: string\n *       401:\n *         $ref: '#/components/responses/Unauthorized'\n *       403:\n *         $ref: '#/components/responses/Forbidden'\n *       404:\n *         $ref: '#/components/responses/NotFound'\n *       500:\n *         $ref: '#/components/responses/InternalServerError'\n */\nadminRouter.delete(\n  \"/users/:id\",\n  zValidator(\"param\", UserIdParamSchema),\n  async (c) => {\n    const { id } = c.req.valid(\"param\")\n\n    await adminService.deleteUser(id)\n\n    return c.json({\n      success: true,\n      message: \"User deleted successfully\",\n    })\n  }\n)\n\n/**\n * @openapi\n * /api/admin/users/{id}/verify-email:\n *   post:\n *     summary: Manually verify user's email\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: User ID\n *     responses:\n *       200:\n *         description: Email verified successfully\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/UserResponse'\n *       401:\n *         $ref: '#/components/responses/Unauthorized'\n *       403:\n *         $ref: '#/components/responses/Forbidden'\n *       404:\n *         $ref: '#/components/responses/NotFound'\n *       500:\n *         $ref: '#/components/responses/InternalServerError'\n */\nadminRouter.post(\n  \"/users/:id/verify-email\",\n  zValidator(\"param\", UserIdParamSchema),\n  async (c) => {\n    const { id } = c.req.valid(\"param\")\n\n    const user = await adminService.verifyUserEmail(id)\n\n    return c.json({\n      success: true,\n      data: user,\n      message: \"Email verified successfully\",\n    })\n  }\n)\n\n/**\n * @openapi\n * /api/admin/metadata:\n *   get:\n *     summary: Get all metadata\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: query\n *         name: page\n *         schema:\n *           type: integer\n *           default: 1\n *         description: Page number\n *       - in: query\n *         name: limit\n *         schema:\n *           type: integer\n *           default: 10\n *         description: Number of items per page\n *       - in: query\n *         name: search\n *         schema:\n *           type: string\n *         description: Search term for title, author, or organization\n *       - in: query\n *         name: category\n *         schema:\n *           type: string\n *         description: Filter by category\n *       - in: query\n *         name: dateFrom\n *         schema:\n *           type: string\n *           format: date\n *         description: Filter by date from\n *       - in: query\n *         name: dateTo\n *         schema:\n *           type: string\n *           format: date\n *         description: Filter by date to\n *     responses:\n *       200:\n *         description: List of metadata\n *         content:\n *           application/json:\n *             schema:\n *               $ref: '#/components/schemas/MetadataSearchResponse'\n *       401:\n *         $ref: '#/components/responses/Unauthorized'\n *       403:\n *         $ref: '#/components/responses/Forbidden'\n *       500:\n *         $ref: '#/components/responses/InternalServerError'\n */\nadminRouter.get(\"/metadata\", async (c) => {\n  const {\n    page = \"1\",\n    limit = \"10\",\n    search,\n    category,\n    dateFrom,\n    dateTo,\n  } = c.req.query()\n\n  // Generate cache key from query parameters\n  const cacheKey = `admin-metadata-${page}-${limit}-${search || \"\"}-${category || \"\"}-${dateFrom || \"\"}-${dateTo || \"\"}`\n\n  // Check cache first\n  const cachedResult = memoryCache.get(cacheKey)\n  if (cachedResult && !search) {\n    // Don't use cache for search queries\n    logger.info(\"Serving admin metadata from cache\")\n\n    return new Response(cachedResult as string, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-Cache\": \"HIT\",\n      },\n    })\n  }\n\n  const result = await adminService.getAllMetadata({\n    page: parseInt(page, 10),\n    limit: parseInt(limit, 10),\n    search,\n    category,\n    dateFrom,\n    dateTo,\n    sortBy: \"createdAt\",\n    sortOrder: \"desc\",\n  })\n\n  // Serialize response\n  const serializedResponse = SafeJSON.stringify({\n    success: true,\n    data: result,\n  })\n\n  // Cache the result for 2 minutes, but only if it's not a search query\n  if (!search) {\n    memoryCache.set(cacheKey, serializedResponse, 120000) // 2 minutes TTL\n  }\n\n  return new Response(serializedResponse, {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"X-Cache\": \"MISS\",\n    },\n  })\n})\n\n/**\n * @openapi\n * /api/admin/metadata/{id}:\n *   delete:\n *     summary: Delete metadata\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: Metadata ID\n *     responses:\n *       200:\n *         description: Metadata deleted successfully\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 message:\n *                   type: string\n *       401:\n *         $ref: '#/components/responses/Unauthorized'\n *       403:\n *         $ref: '#/components/responses/Forbidden'\n *       404:\n *         $ref: '#/components/responses/NotFound'\n *       500:\n *         $ref: '#/components/responses/InternalServerError'\n */\nadminRouter.delete(\n  \"/metadata/:id\",\n  zValidator(\"param\", MetadataIdParamSchema),\n  async (c) => {\n    const { id } = c.req.valid(\"param\")\n\n    await adminService.deleteMetadata(id)\n\n    return c.json({\n      success: true,\n      message: \"Metadata deleted successfully\",\n    })\n  }\n)\n\n/**\n * @openapi\n * /api/admin/dashboard-stats:\n *   get:\n *     summary: Get admin dashboard statistics\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: Dashboard statistics\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 data:\n *                   type: object\n *                   properties:\n *                     userCount:\n *                       type: number\n *                     orgCount:\n *                       type: number\n *                     metadataCount:\n *                       type: number\n *                     activeUsers:\n *                       type: number\n *                     pendingApprovals:\n *                       type: number\n *                     systemHealth:\n *                       type: number\n *       401:\n *         $ref: '#/components/responses/Unauthorized'\n *       403:\n *         $ref: '#/components/responses/Forbidden'\n *       500:\n *         $ref: '#/components/responses/InternalServerError'\n */\nadminRouter.get(\"/dashboard-stats\", async (c) => {\n  try {\n    const user = c.get(\"user\")\n    if (!user) {\n      throw new ApiError(\"Unauthorized\", 401)\n    }\n\n    // Generate a cache key based on the user ID\n    const cacheKey = `dashboard-stats-${user.id}`\n\n    // Check if we have cached data\n    const cachedStats = memoryCache.get(cacheKey)\n    if (cachedStats) {\n      logger.info(\"Serving dashboard stats from cache\", {\n        userId: user.id,\n        email: user.email,\n      })\n\n      return new Response(cachedStats as string, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-Cache\": \"HIT\",\n        },\n      })\n    }\n\n    logger.info(\"Fetching dashboard stats\", {\n      userId: user.id,\n      email: user.email,\n    })\n\n    // Run all database queries in parallel using Promise.all\n    const [\n      totalUsers,\n      totalMetadata,\n      userRoleDistribution,\n      recentMetadata,\n      userGrowth,\n      metadataByFramework,\n      topOrganizations,\n    ] = await Promise.all([\n      // Get total users\n      prisma.user.count(),\n\n      // Get total metadata entries\n      prisma.metadata.count(),\n\n      // Get user role distribution\n      prisma.user.groupBy({\n        by: [\"role\"],\n        _count: {\n          id: true,\n        },\n      }),\n\n      // Get recent metadata entries with optimized field selection\n      prisma.metadata.findMany({\n        take: 5,\n        orderBy: {\n          createdAt: \"desc\",\n        },\n        select: {\n          id: true,\n          title: true,\n          author: true,\n          organization: true,\n          createdAt: true,\n          thumbnailUrl: true,\n          user: {\n            select: {\n              id: true,\n              email: true,\n              name: true,\n            },\n          },\n        },\n      }),\n\n      // Get user growth\n      prisma.user.groupBy({\n        by: [\"createdAt\"],\n        _count: {\n          id: true,\n        },\n        orderBy: {\n          createdAt: \"desc\",\n        },\n        take: 30,\n      }),\n\n      // Get metadata by framework type\n      prisma.metadata.groupBy({\n        by: [\"frameworkType\"],\n        _count: {\n          id: true,\n        },\n      }),\n\n      // Get top organizations\n      prisma.metadata.groupBy({\n        by: [\"organization\"],\n        _count: {\n          id: true,\n        },\n        orderBy: {\n          _count: {\n            id: \"desc\",\n          },\n        },\n        take: 5,\n      }),\n    ])\n\n    logger.debug(\"All dashboard queries completed\", {\n      totalUsers,\n      totalMetadataCount: totalMetadata,\n      userRoleDistCount: userRoleDistribution.length,\n      recentMetadataCount: recentMetadata.length,\n      userGrowthPoints: userGrowth.length,\n      metadataByFrameworkCount: metadataByFramework.length,\n      topOrganizationsCount: topOrganizations.length,\n    })\n\n    const stats = {\n      totalUsers,\n      totalMetadata,\n      userRoleDistribution,\n      recentMetadata,\n      userGrowth,\n      metadataByFramework,\n      topOrganizations,\n    }\n\n    // Serialize the response once\n    const serializedResponse = SafeJSON.stringify(stats)\n\n    // Cache the serialized response for 5 minutes (300000 ms)\n    memoryCache.set(cacheKey, serializedResponse, 300000)\n\n    // Return the response\n    return new Response(serializedResponse, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-Cache\": \"MISS\",\n      },\n    })\n  } catch (error) {\n    logger.error(\"Error fetching dashboard stats\", {\n      error,\n      userId: c.get(\"user\")?.id,\n      email: c.get(\"user\")?.email,\n    })\n\n    if (error instanceof ApiError) {\n      return c.json({ error: error.message }, error.status as any)\n    }\n\n    return c.json(\n      {\n        error: \"Failed to fetch dashboard statistics\",\n        message:\n          error instanceof Error ? error.message : \"Unknown error occurred\",\n      },\n      500 as any\n    )\n  }\n})\n\n/**\n * @openapi\n * /api/admin/stats:\n *   get:\n *     summary: Get system statistics\n *     tags: [Admin]\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: System statistics\n *         content:\n *           application/json:\n *             schema:\n *               type: object\n *               properties:\n *                 success:\n *                   type: boolean\n *                 data:\n *                   type: object\n *                   properties:\n *                     userCount:\n *                       type: number\n *                     orgCount:\n *                       type: number\n *                     metadataCount:\n *                       type: number\n *                     activeUsers:\n *                       type: number\n *                     pendingApprovals:\n *                       type: number\n *                     systemHealth:\n *                       type: number\n *       401:\n *         $ref: '#/components/responses/Unauthorized'\n *       403:\n *         $ref: '#/components/responses/Forbidden'\n *       500:\n *         $ref: '#/components/responses/InternalServerError'\n */\nadminRouter.get(\"/stats\", async (c) => {\n  try {\n    // Check for cached stats\n    const cacheKey = \"admin-system-stats\"\n    const cachedStats = memoryCache.get(cacheKey)\n\n    if (cachedStats) {\n      logger.info(\"Serving system stats from cache\")\n\n      return new Response(cachedStats as string, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-Cache\": \"HIT\",\n        },\n      })\n    }\n\n    const stats = await adminService.getAdminDashboardStats()\n\n    // Serialize the response\n    const serializedResponse = SafeJSON.stringify({\n      success: true,\n      data: stats,\n    })\n\n    // Cache for 5 minutes\n    memoryCache.set(cacheKey, serializedResponse, 300000)\n\n    // Use SafeJSON to handle BigInt values\n    return new Response(serializedResponse, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-Cache\": \"MISS\",\n      },\n    })\n  } catch (error) {\n    logger.error(\"Error fetching system stats\", {\n      error,\n      userId: c.get(\"user\")?.id,\n      email: c.get(\"user\")?.email,\n    })\n\n    if (error instanceof ApiError) {\n      return c.json({ error: error.message }, error.status as any)\n    }\n\n    return c.json(\n      {\n        success: false,\n        message: \"Failed to fetch system statistics\",\n      },\n      500\n    )\n  }\n})\n\nexport default adminRouter\n","import { prisma } from \"../shared/prisma-client\"\n\n// Re-export the shared Prisma client\nexport { prisma }\n","import { Prisma, User, UserRole } from \"@prisma/client\"\nimport { prisma } from \"../client\"\nimport { UserListQuery } from \"../../types/user.types\"\n\n/**\n * User repository for database operations\n */\nexport const userRepository = {\n  /**\n   * Find a user by ID\n   */\n  findById: async (id: string): Promise<User | null> => {\n    return prisma.user.findUnique({\n      where: { id },\n    })\n  },\n\n  /**\n   * Find a user by email\n   */\n  findByEmail: async (email: string): Promise<User | null> => {\n    return prisma.user.findUnique({\n      where: { email },\n    })\n  },\n\n  /**\n   * Create a new user\n   */\n  create: async (data: Prisma.UserCreateInput): Promise<User> => {\n    return prisma.user.create({\n      data,\n    })\n  },\n\n  /**\n   * Update a user\n   */\n  update: async (id: string, data: Prisma.UserUpdateInput): Promise<User> => {\n    return prisma.user.update({\n      where: { id },\n      data,\n    })\n  },\n\n  /**\n   * Delete a user\n   */\n  delete: async (id: string): Promise<User> => {\n    return prisma.user.delete({\n      where: { id },\n    })\n  },\n\n  /**\n   * Find all users with pagination and filtering\n   */\n  findAll: async (query: UserListQuery) => {\n    const { page, limit, search, role, sortBy, sortOrder } = query\n\n    // Build where clause\n    const where: Prisma.UserWhereInput = {}\n\n    if (search) {\n      where.OR = [\n        { name: { contains: search, mode: \"insensitive\" } },\n        { email: { contains: search, mode: \"insensitive\" } },\n        { organization: { contains: search, mode: \"insensitive\" } },\n      ]\n    }\n\n    if (role) {\n      where.role = role as UserRole\n    }\n\n    // Count total users matching the filter\n    const total = await prisma.user.count({ where })\n\n    // Get users with pagination\n    const users = await prisma.user.findMany({\n      where,\n      skip: (page - 1) * limit,\n      take: limit,\n      orderBy: {\n        [sortBy]: sortOrder,\n      },\n    })\n\n    return {\n      users,\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit),\n    }\n  },\n\n  /**\n   * Count total users\n   */\n  count: async (): Promise<number> => {\n    return prisma.user.count()\n  },\n\n  /**\n   * Count users created after a specific date\n   */\n  countCreatedAfter: async (date: Date): Promise<number> => {\n    return prisma.user.count({\n      where: {\n        createdAt: {\n          gte: date,\n        },\n      },\n    })\n  },\n\n  /**\n   * Count users by role\n   */\n  countByRole: async (): Promise<Record<string, number>> => {\n    const usersByRole = await prisma.user.groupBy({\n      by: [\"role\"],\n      _count: {\n        role: true,\n      },\n    })\n\n    return usersByRole.reduce(\n      (acc, curr) => {\n        acc[curr.role] = curr._count.role\n        return acc\n      },\n      {} as Record<string, number>\n    )\n  },\n}\n","import { Prisma, Metadata } from \"@prisma/client\"\nimport { prisma } from \"../client\"\nimport { MetadataSearchQuery } from \"../../types/metadata.types\"\n\n/**\n * Metadata repository for database operations\n */\nexport const metadataRepository = {\n  /**\n   * Find metadata by ID\n   */\n  findById: async (id: string): Promise<Metadata | null> => {\n    return prisma.metadata.findUnique({\n      where: { id },\n    })\n  },\n\n  /**\n   * Create new metadata\n   */\n  create: async (data: Prisma.MetadataCreateInput): Promise<Metadata> => {\n    return prisma.metadata.create({\n      data,\n    })\n  },\n\n  /**\n   * Update metadata\n   */\n  update: async (\n    id: string,\n    data: Prisma.MetadataUpdateInput\n  ): Promise<Metadata> => {\n    return prisma.metadata.update({\n      where: { id },\n      data,\n    })\n  },\n\n  /**\n   * Delete metadata\n   */\n  delete: async (id: string): Promise<Metadata> => {\n    return prisma.metadata.delete({\n      where: { id },\n    })\n  },\n\n  /**\n   * Find all metadata with pagination and filtering\n   */\n  findAll: async (query: MetadataSearchQuery) => {\n    const {\n      page,\n      limit,\n      search,\n      category,\n      author,\n      organization,\n      dateFrom,\n      dateTo,\n      fileFormat,\n      sortBy,\n      sortOrder,\n    } = query\n\n    // Build where clause\n    const where: Prisma.MetadataWhereInput = {}\n\n    if (search) {\n      where.OR = [\n        { title: { contains: search, mode: \"insensitive\" } },\n        { abstract: { contains: search, mode: \"insensitive\" } },\n        { purpose: { contains: search, mode: \"insensitive\" } },\n      ]\n    }\n\n    if (category) {\n      where.categories = {\n        has: category,\n      }\n    }\n\n    if (author) {\n      where.author = {\n        contains: author,\n        mode: \"insensitive\",\n      }\n    }\n\n    if (organization) {\n      where.organization = {\n        contains: organization,\n        mode: \"insensitive\",\n      }\n    }\n\n    if (dateFrom) {\n      where.dateFrom = {\n        gte: dateFrom,\n      }\n    }\n\n    if (dateTo) {\n      where.dateTo = {\n        lte: dateTo,\n      }\n    }\n\n    if (fileFormat) {\n      where.fileFormat = {\n        equals: fileFormat,\n        mode: \"insensitive\",\n      }\n    }\n\n    // Count total metadata matching the filter\n    const total = await prisma.metadata.count({ where })\n\n    // Get metadata with pagination\n    const metadata = await prisma.metadata.findMany({\n      where,\n      skip: (page - 1) * limit,\n      take: limit,\n      orderBy: {\n        [sortBy]: sortOrder,\n      },\n      include: {\n        user: {\n          select: {\n            id: true,\n            name: true,\n            email: true,\n          },\n        },\n      },\n    })\n\n    return {\n      metadata,\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit),\n    }\n  },\n\n  /**\n   * Find metadata by user ID\n   */\n  findByUserId: async (userId: string, query: MetadataSearchQuery) => {\n    const { page, limit, search, sortBy, sortOrder } = query\n\n    // Build where clause\n    const where: Prisma.MetadataWhereInput = {\n      userId,\n    }\n\n    if (search) {\n      where.OR = [\n        { title: { contains: search, mode: \"insensitive\" } },\n        { abstract: { contains: search, mode: \"insensitive\" } },\n      ]\n    }\n\n    // Count total metadata matching the filter\n    const total = await prisma.metadata.count({ where })\n\n    // Get metadata with pagination\n    const metadata = await prisma.metadata.findMany({\n      where,\n      skip: (page - 1) * limit,\n      take: limit,\n      orderBy: {\n        [sortBy]: sortOrder,\n      },\n    })\n\n    return {\n      metadata,\n      total,\n      page,\n      limit,\n      totalPages: Math.ceil(total / limit),\n    }\n  },\n\n  /**\n   * Count total metadata\n   */\n  count: async (): Promise<number> => {\n    return prisma.metadata.count()\n  },\n\n  /**\n   * Count metadata created after a specific date\n   */\n  countCreatedAfter: async (date: Date): Promise<number> => {\n    return prisma.metadata.count({\n      where: {\n        createdAt: {\n          gte: date,\n        },\n      },\n    })\n  },\n\n  /**\n   * Delete all metadata by user ID\n   */\n  deleteByUserId: async (userId: string): Promise<Prisma.BatchPayload> => {\n    return prisma.metadata.deleteMany({\n      where: {\n        userId,\n      },\n    })\n  },\n}\n","import { userRepository } from \"../db/repositories/user.repository\"\nimport { metadataRepository } from \"../db/repositories/metadata.repository\"\nimport { ApiError, ErrorCode } from \"../middleware/error-handler\"\nimport { UserRole } from \"../types/auth.types\"\nimport {\n  UserResponse,\n  UserSearchQuery,\n  UserSearchResponse,\n} from \"../types/user.types\"\nimport {\n  MetadataSearchQuery,\n  MetadataSearchResponse,\n} from \"../types/metadata.types\"\nimport {\n  mapPrismaRoleToAppRole,\n  mapAppRoleToPrismaRole,\n} from \"../utils/role-mapper\"\nimport { prisma } from \"../db/client\"\n\n/**\n * Admin service for administrative operations\n */\nexport const adminService = {\n  /**\n   * Get enhanced admin dashboard statistics\n   */\n  getAdminDashboardStats: async (): Promise<{\n    userCount: number\n    orgCount: number\n    metadataCount: number\n    activeUsers: number\n    pendingApprovals: number\n    systemHealth: number\n  }> => {\n    // Get active time period (30 days ago)\n    const thirtyDaysAgo = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)\n\n    // Fetch all the statistics in parallel for better performance\n    const [userCount, organizations, metadataCount, activeUsers, pendingCount] =\n      await Promise.all([\n        // Total number of users\n        prisma.user.count(),\n\n        // Get unique organizations\n        prisma.user.groupBy({\n          by: [\"organization\"],\n          where: {\n            organization: {\n              not: null,\n            },\n          },\n        }),\n\n        // Total metadata entries\n        prisma.metadata.count(),\n\n        // Active users (users with activity in the last 30 days)\n        prisma.user.count({\n          where: {\n            metadata: {\n              some: {\n                updatedAt: {\n                  gte: thirtyDaysAgo,\n                },\n              },\n            },\n          },\n        }),\n\n        // Pending approvals (metadata with 'validationStatus' that is not 'Validated')\n        prisma.metadata.count({\n          where: {\n            validationStatus: {\n              not: \"Validated\",\n            },\n          },\n        }),\n      ])\n\n    // Filter out null organizations and get the count\n    const orgCount = organizations.filter(\n      (org) => org.organization !== null\n    ).length\n\n    // Calculate system health based on actual metrics\n    const metadataRatio =\n      metadataCount > 0 ? Math.min(metadataCount / 1000, 1) : 0\n    const userRatio = userCount > 0 ? Math.min(userCount / 200, 1) : 0\n    const activeRatio = userCount > 0 ? activeUsers / userCount : 0\n\n    // Weight the factors (adjust as needed)\n    const systemHealth = Math.round(\n      (metadataRatio * 0.3 + userRatio * 0.3 + activeRatio * 0.4) * 100\n    )\n\n    return {\n      userCount,\n      orgCount,\n      metadataCount,\n      activeUsers,\n      pendingApprovals: pendingCount,\n      systemHealth,\n    }\n  },\n\n  /**\n   * Get all users with pagination and filtering\n   */\n  getAllUsers: async (query: UserSearchQuery): Promise<UserSearchResponse> => {\n    const result = await userRepository.findAll(query)\n\n    return {\n      users: result.users.map((user) => ({\n        id: user.id,\n        email: user.email,\n        name: user.name || \"\",\n        role: mapPrismaRoleToAppRole(user.role),\n        emailVerified: user.emailVerified !== null,\n        organization: user.organization || undefined,\n        department: user.department || undefined,\n        phone: user.phone || undefined,\n        image: user.image || undefined,\n        createdAt: user.createdAt.toISOString(),\n        updatedAt: user.updatedAt.toISOString(),\n      })),\n      total: result.total,\n      page: result.page,\n      limit: result.limit,\n      totalPages: result.totalPages,\n    }\n  },\n\n  /**\n   * Update user role\n   */\n  updateUserRole: async (\n    userId: string,\n    role: UserRole\n  ): Promise<UserResponse> => {\n    const user = await userRepository.findById(userId)\n\n    if (!user) {\n      throw new ApiError(\"User not found\", 404, ErrorCode.RESOURCE_NOT_FOUND)\n    }\n\n    const updatedUser = await userRepository.update(userId, {\n      role: mapAppRoleToPrismaRole(role),\n    })\n\n    return {\n      id: updatedUser.id,\n      email: updatedUser.email,\n      name: updatedUser.name || \"\",\n      role: mapPrismaRoleToAppRole(updatedUser.role),\n      emailVerified: updatedUser.emailVerified !== null,\n      organization: updatedUser.organization || undefined,\n      department: updatedUser.department || undefined,\n      phone: updatedUser.phone || undefined,\n      image: updatedUser.image || undefined,\n      createdAt: updatedUser.createdAt.toISOString(),\n      updatedAt: updatedUser.updatedAt.toISOString(),\n    }\n  },\n\n  /**\n   * Delete user\n   */\n  deleteUser: async (userId: string): Promise<void> => {\n    const user = await userRepository.findById(userId)\n\n    if (!user) {\n      throw new ApiError(\"User not found\", 404, ErrorCode.RESOURCE_NOT_FOUND)\n    }\n\n    // Delete all user's metadata first\n    await metadataRepository.deleteByUserId(userId)\n\n    // Then delete the user\n    await userRepository.delete(userId)\n  },\n\n  /**\n   * Get detailed user information\n   */\n  getUserDetails: async (\n    userId: string\n  ): Promise<{\n    id: string\n    email: string\n    name: string\n    role: UserRole\n    emailVerified: boolean\n    organization?: string\n    department?: string\n    phone?: string\n    image?: string\n    createdAt: string\n    updatedAt: string\n    metadataCount: number\n    recentActivity: Array<{\n      id: string\n      title: string\n      updatedAt: string\n    }>\n  }> => {\n    // Try exact match first\n    let user = await userRepository.findById(userId)\n\n    // If not found, try case-insensitive search\n    if (!user) {\n      const allUsers = await prisma.user.findMany({\n        take: 100,\n        select: { id: true },\n      })\n\n      const matchedUser = allUsers.find(\n        (u) => u.id.toLowerCase() === userId.toLowerCase()\n      )\n\n      if (matchedUser) {\n        user = await userRepository.findById(matchedUser.id)\n      }\n    }\n\n    if (!user) {\n      throw new ApiError(\"User not found\", 404, ErrorCode.RESOURCE_NOT_FOUND)\n    }\n\n    // Get metadata count and recent activity\n    const [metadataCount, recentMetadata] = await Promise.all([\n      prisma.metadata.count({\n        where: { userId: user.id },\n      }),\n      prisma.metadata.findMany({\n        where: { userId: user.id },\n        orderBy: { updatedAt: \"desc\" },\n        take: 5,\n        select: {\n          id: true,\n          title: true,\n          updatedAt: true,\n        },\n      }),\n    ])\n\n    return {\n      id: user.id,\n      email: user.email,\n      name: user.name || \"\",\n      role: mapPrismaRoleToAppRole(user.role),\n      emailVerified: user.emailVerified !== null,\n      organization: user.organization || undefined,\n      department: user.department || undefined,\n      phone: user.phone || undefined,\n      image: user.image || undefined,\n      createdAt: user.createdAt.toISOString(),\n      updatedAt: user.updatedAt.toISOString(),\n      metadataCount,\n      recentActivity: recentMetadata.map((m) => ({\n        id: m.id,\n        title: m.title,\n        updatedAt: m.updatedAt.toISOString(),\n      })),\n    }\n  },\n\n  /**\n   * Get all metadata with pagination and filtering\n   */\n  getAllMetadata: async (\n    query: MetadataSearchQuery\n  ): Promise<MetadataSearchResponse> => {\n    const result = await metadataRepository.findAll(query)\n\n    return {\n      metadata: result.metadata.map((metadata) => ({\n        id: metadata.id,\n        title: metadata.title,\n        author: metadata.author,\n        organization: metadata.organization,\n        dateFrom: metadata.dateFrom,\n        dateTo: metadata.dateTo,\n        abstract: metadata.abstract,\n        purpose: metadata.purpose,\n        thumbnailUrl: metadata.thumbnailUrl,\n        imageName: metadata.imageName,\n        frameworkType: metadata.frameworkType,\n        categories: metadata.categories,\n        coordinateSystem: metadata.coordinateSystem,\n        projection: metadata.projection,\n        scale: metadata.scale,\n        resolution: metadata.resolution || undefined,\n        accuracyLevel: metadata.accuracyLevel,\n        completeness: metadata.completeness || undefined,\n        consistencyCheck: metadata.consistencyCheck || undefined,\n        validationStatus: metadata.validationStatus || undefined,\n        fileFormat: metadata.fileFormat,\n        fileSize: metadata.fileSize || undefined,\n        numFeatures: metadata.numFeatures || undefined,\n        softwareReqs: metadata.softwareReqs || undefined,\n        updateCycle: metadata.updateCycle || undefined,\n        lastUpdate: metadata.lastUpdate?.toISOString() || undefined,\n        nextUpdate: metadata.nextUpdate?.toISOString() || undefined,\n        distributionFormat: metadata.distributionFormat,\n        accessMethod: metadata.accessMethod,\n        downloadUrl: metadata.downloadUrl || undefined,\n        apiEndpoint: metadata.apiEndpoint || undefined,\n        licenseType: metadata.licenseType,\n        usageTerms: metadata.usageTerms,\n        attributionRequirements: metadata.attributionRequirements,\n        accessRestrictions: metadata.accessRestrictions,\n        contactPerson: metadata.contactPerson,\n        email: metadata.email,\n        department: metadata.department || undefined,\n        userId: metadata.userId,\n        createdAt: metadata.createdAt.toISOString(),\n        updatedAt: metadata.updatedAt.toISOString(),\n      })),\n      total: result.total,\n      page: result.page,\n      limit: result.limit,\n      totalPages: result.totalPages,\n    }\n  },\n\n  /**\n   * Delete metadata\n   */\n  deleteMetadata: async (id: string): Promise<void> => {\n    const metadata = await metadataRepository.findById(id)\n\n    if (!metadata) {\n      throw new ApiError(\n        \"Metadata not found\",\n        404,\n        ErrorCode.RESOURCE_NOT_FOUND\n      )\n    }\n\n    await metadataRepository.delete(id)\n  },\n\n  /**\n   * Verify user's email manually\n   */\n  verifyUserEmail: async (userId: string): Promise<UserResponse> => {\n    const user = await userRepository.findById(userId)\n\n    if (!user) {\n      throw new ApiError(\"User not found\", 404, ErrorCode.RESOURCE_NOT_FOUND)\n    }\n\n    const updatedUser = await userRepository.update(userId, {\n      emailVerified: new Date(),\n    })\n\n    return {\n      id: updatedUser.id,\n      email: updatedUser.email,\n      name: updatedUser.name || \"\",\n      role: mapPrismaRoleToAppRole(updatedUser.role),\n      emailVerified: updatedUser.emailVerified !== null,\n      organization: updatedUser.organization || undefined,\n      department: updatedUser.department || undefined,\n      phone: updatedUser.phone || undefined,\n      image: updatedUser.image || undefined,\n      createdAt: updatedUser.createdAt.toISOString(),\n      updatedAt: updatedUser.updatedAt.toISOString(),\n    }\n  },\n}\n","import winston from \"winston\"\nimport { config } from \"../config\"\n\nconst { combine, timestamp, printf, colorize } = winston.format\n\nconst logFormat = printf(({ level, message, timestamp, ...metadata }) => {\n  let msg = `${timestamp} [${level}] : ${message}`\n  if (Object.keys(metadata).length > 0) {\n    msg += JSON.stringify(metadata)\n  }\n  return msg\n})\n\nexport const logger = winston.createLogger({\n  level: config.env === \"development\" ? \"debug\" : \"info\",\n  format: combine(\n    colorize(),\n    timestamp({ format: \"YYYY-MM-DD HH:mm:ss\" }),\n    logFormat\n  ),\n  transports: [\n    new winston.transports.Console({\n      format: combine(colorize(), timestamp(), logFormat),\n    }),\n  ],\n})\n\n// Create a stream for Morgan HTTP logging\nexport const httpLogStream = {\n  write: (message: string) => {\n    logger.info(message.trim())\n  },\n}\n\n// Log unhandled rejections\nprocess.on(\"unhandledRejection\", (reason: Error) => {\n  logger.error(\"Unhandled Rejection\", {\n    error: reason,\n  })\n})\n\n// Log uncaught exceptions\nprocess.on(\"uncaughtException\", (error: Error) => {\n  logger.error(\"Uncaught Exception\", {\n    error,\n  })\n  // Give the logger time to write before exiting\n  setTimeout(() => {\n    process.exit(1)\n  }, 1000)\n})\n","/**\n * Simple in-memory cache utility with TTL\n */\n\ninterface CacheItem<T> {\n  value: T\n  expiresAt: number\n}\n\nclass MemoryCache {\n  private cache: Map<string, CacheItem<any>> = new Map()\n\n  /**\n   * Set a value in the cache with a TTL (time-to-live)\n   * @param key Cache key\n   * @param value Value to store\n   * @param ttlMs Time to live in milliseconds\n   */\n  set<T>(key: string, value: T, ttlMs: number): void {\n    const expiresAt = Date.now() + ttlMs\n    this.cache.set(key, { value, expiresAt })\n  }\n\n  /**\n   * Get a value from the cache\n   * @param key Cache key\n   * @returns The cached value or undefined if not found or expired\n   */\n  get<T>(key: string): T | undefined {\n    const item = this.cache.get(key)\n\n    // Return undefined if item doesn't exist\n    if (!item) return undefined\n\n    // Return undefined if item is expired and remove it from cache\n    if (Date.now() > item.expiresAt) {\n      this.cache.delete(key)\n      return undefined\n    }\n\n    return item.value as T\n  }\n\n  /**\n   * Check if a key exists in the cache and is not expired\n   * @param key Cache key\n   * @returns Whether the key exists in the cache\n   */\n  has(key: string): boolean {\n    const item = this.cache.get(key)\n    if (!item) return false\n\n    if (Date.now() > item.expiresAt) {\n      this.cache.delete(key)\n      return false\n    }\n\n    return true\n  }\n\n  /**\n   * Remove a key from the cache\n   * @param key Cache key\n   */\n  delete(key: string): void {\n    this.cache.delete(key)\n  }\n\n  /**\n   * Clear all items from the cache\n   */\n  clear(): void {\n    this.cache.clear()\n  }\n\n  /**\n   * Get cache stats\n   * @returns Object with cache statistics\n   */\n  getStats() {\n    let validItems = 0\n    let expiredItems = 0\n\n    this.cache.forEach((item) => {\n      if (Date.now() > item.expiresAt) {\n        expiredItems++\n      } else {\n        validItems++\n      }\n    })\n\n    return {\n      totalItems: this.cache.size,\n      validItems,\n      expiredItems,\n    }\n  }\n}\n\n// Export a singleton instance\nexport const memoryCache = new MemoryCache()\n","import { OpenAPIHono, createRoute } from \"@hono/zod-openapi\"\nimport { z } from \"zod\"\nimport { prisma } from \"../../lib/prisma\"\nimport { \n  authMiddleware, \n  requirePermission,\n  requireAllPermissions\n} from \"../../middleware\"\nimport { \n  PERMISSION_READ, \n  PERMISSION_CREATE,\n  PERMISSION_UPDATE,\n  PERMISSION_DELETE\n} from \"../../constants/permissions\"\n\n// Create permissions router\nconst permissionsRouter = new OpenAPIHono()\n\n// Apply auth middleware to all routes\npermissionsRouter.use(\"*\", authMiddleware)\n\n// Permission schema\nconst permissionSchema = z.object({\n  name: z.string().min(3).max(100),\n  description: z.string().optional(),\n  action: z.string().min(1),\n  subject: z.string().min(1),\n  conditions: z.any().optional()\n})\n\n// Permission response schema\nconst permissionResponseSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  description: z.string().nullable(),\n  action: z.string(),\n  subject: z.string(),\n  conditions: z.any().nullable(),\n  createdAt: z.string(),\n  updatedAt: z.string()\n})\n\n// List permissions\npermissionsRouter.openapi(\n  createRoute({\n    method: \"get\",\n    path: \"/\",\n    tags: [\"Permissions\"],\n    security: [{ bearerAuth: [] }],\n    description: \"List all permissions\",\n    responses: {\n      200: {\n        description: \"List of permissions\",\n        content: {\n          \"application/json\": {\n            schema: z.object({\n              permissions: z.array(permissionResponseSchema)\n            })\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to read permissions\n    await requirePermission(PERMISSION_READ.action, PERMISSION_READ.subject)(c, async () => {})\n\n    const permissions = await prisma.permission.findMany({\n      orderBy: { name: \"asc\" }\n    })\n\n    return c.json({ permissions })\n  }\n)\n\n// Get permission by ID\npermissionsRouter.openapi(\n  createRoute({\n    method: \"get\",\n    path: \"/:id\",\n    tags: [\"Permissions\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Get permission by ID\",\n    request: {\n      params: z.object({\n        id: z.string()\n      })\n    },\n    responses: {\n      200: {\n        description: \"Permission details\",\n        content: {\n          \"application/json\": {\n            schema: permissionResponseSchema\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      },\n      404: {\n        description: \"Permission not found\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to read permissions\n    await requirePermission(PERMISSION_READ.action, PERMISSION_READ.subject)(c, async () => {})\n\n    const { id } = c.req.param()\n\n    const permission = await prisma.permission.findUnique({\n      where: { id }\n    })\n\n    if (!permission) {\n      return c.json({ error: \"Permission not found\" }, 404)\n    }\n\n    return c.json(permission)\n  }\n)\n\n// Create permission\npermissionsRouter.openapi(\n  createRoute({\n    method: \"post\",\n    path: \"/\",\n    tags: [\"Permissions\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Create a new permission\",\n    request: {\n      body: {\n        content: {\n          \"application/json\": {\n            schema: permissionSchema\n          }\n        }\n      }\n    },\n    responses: {\n      201: {\n        description: \"Permission created\",\n        content: {\n          \"application/json\": {\n            schema: permissionResponseSchema\n          }\n        }\n      },\n      400: {\n        description: \"Invalid input\"\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to create permissions\n    await requirePermission(PERMISSION_CREATE.action, PERMISSION_CREATE.subject)(c, async () => {})\n\n    const data = await c.req.json()\n\n    try {\n      const permission = await prisma.permission.create({\n        data\n      })\n\n      return c.json(permission, 201)\n    } catch (error) {\n      if (error.code === \"P2002\") {\n        return c.json({ error: \"Permission with this action and subject already exists\" }, 400)\n      }\n      \n      return c.json({ error: \"Failed to create permission\" }, 500)\n    }\n  }\n)\n\n// Update permission\npermissionsRouter.openapi(\n  createRoute({\n    method: \"put\",\n    path: \"/:id\",\n    tags: [\"Permissions\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Update a permission\",\n    request: {\n      params: z.object({\n        id: z.string()\n      }),\n      body: {\n        content: {\n          \"application/json\": {\n            schema: permissionSchema.partial()\n          }\n        }\n      }\n    },\n    responses: {\n      200: {\n        description: \"Permission updated\",\n        content: {\n          \"application/json\": {\n            schema: permissionResponseSchema\n          }\n        }\n      },\n      400: {\n        description: \"Invalid input\"\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      },\n      404: {\n        description: \"Permission not found\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to update permissions\n    await requirePermission(PERMISSION_UPDATE.action, PERMISSION_UPDATE.subject)(c, async () => {})\n\n    const { id } = c.req.param()\n    const data = await c.req.json()\n\n    try {\n      const permission = await prisma.permission.update({\n        where: { id },\n        data\n      })\n\n      return c.json(permission)\n    } catch (error) {\n      if (error.code === \"P2025\") {\n        return c.json({ error: \"Permission not found\" }, 404)\n      }\n      \n      if (error.code === \"P2002\") {\n        return c.json({ error: \"Permission with this action and subject already exists\" }, 400)\n      }\n      \n      return c.json({ error: \"Failed to update permission\" }, 500)\n    }\n  }\n)\n\n// Delete permission\npermissionsRouter.openapi(\n  createRoute({\n    method: \"delete\",\n    path: \"/:id\",\n    tags: [\"Permissions\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Delete a permission\",\n    request: {\n      params: z.object({\n        id: z.string()\n      })\n    },\n    responses: {\n      200: {\n        description: \"Permission deleted\",\n        content: {\n          \"application/json\": {\n            schema: z.object({\n              message: z.string()\n            })\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      },\n      404: {\n        description: \"Permission not found\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to delete permissions\n    await requirePermission(PERMISSION_DELETE.action, PERMISSION_DELETE.subject)(c, async () => {})\n\n    const { id } = c.req.param()\n\n    try {\n      await prisma.permission.delete({\n        where: { id }\n      })\n\n      return c.json({ message: \"Permission deleted successfully\" })\n    } catch (error) {\n      if (error.code === \"P2025\") {\n        return c.json({ error: \"Permission not found\" }, 404)\n      }\n      \n      return c.json({ error: \"Failed to delete permission\" }, 500)\n    }\n  }\n)\n\n// Get permissions by subject\npermissionsRouter.openapi(\n  createRoute({\n    method: \"get\",\n    path: \"/subject/:subject\",\n    tags: [\"Permissions\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Get permissions by subject\",\n    request: {\n      params: z.object({\n        subject: z.string()\n      })\n    },\n    responses: {\n      200: {\n        description: \"List of permissions for the subject\",\n        content: {\n          \"application/json\": {\n            schema: z.object({\n              permissions: z.array(permissionResponseSchema)\n            })\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to read permissions\n    await requirePermission(PERMISSION_READ.action, PERMISSION_READ.subject)(c, async () => {})\n\n    const { subject } = c.req.param()\n\n    const permissions = await prisma.permission.findMany({\n      where: { subject },\n      orderBy: { name: \"asc\" }\n    })\n\n    return c.json({ permissions })\n  }\n)\n\n// Get permissions by action\npermissionsRouter.openapi(\n  createRoute({\n    method: \"get\",\n    path: \"/action/:action\",\n    tags: [\"Permissions\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Get permissions by action\",\n    request: {\n      params: z.object({\n        action: z.string()\n      })\n    },\n    responses: {\n      200: {\n        description: \"List of permissions for the action\",\n        content: {\n          \"application/json\": {\n            schema: z.object({\n              permissions: z.array(permissionResponseSchema)\n            })\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to read permissions\n    await requirePermission(PERMISSION_READ.action, PERMISSION_READ.subject)(c, async () => {})\n\n    const { action } = c.req.param()\n\n    const permissions = await prisma.permission.findMany({\n      where: { action },\n      orderBy: { name: \"asc\" }\n    })\n\n    return c.json({ permissions })\n  }\n)\n\nexport default permissionsRouter\n","import { Context, Next } from \"hono\"\nimport { z } from \"zod\"\nimport { ApiError, ErrorCode } from \"./error-handler\"\nimport { errorHandler } from \"./error-handler\"\n\n// Define a type for our validated data\ntype ValidatedData<T extends z.ZodType> = {\n  valid: z.infer<T>\n}\n\n/**\n * Middleware to validate request body against a Zod schema\n */\nexport async function validateBody<T extends z.ZodType>(\n  schema: T,\n  c: Context,\n  next: Next\n) {\n  try {\n    const body = await c.req.json()\n    const result = await schema.safeParseAsync(body)\n\n    if (!result.success) {\n      return errorHandler({ success: false, error: result.error })\n    }\n\n    // Store the validated data in the context\n    c.set(\"valid\", result.data)\n    await next()\n  } catch (error) {\n    if (error instanceof Error) {\n      return errorHandler(new ApiError(error.message, 400))\n    }\n    return errorHandler(new ApiError(\"Invalid request\", 400))\n  }\n}\n\n/**\n * Middleware to validate query parameters against a Zod schema\n */\nexport async function validateQueryParams<T extends z.ZodType>(\n  schema: T,\n  c: Context,\n  next: Next\n) {\n  try {\n    const query = c.req.query()\n    const result = await schema.safeParseAsync(query)\n\n    if (!result.success) {\n      return errorHandler({ success: false, error: result.error })\n    }\n\n    // Store the validated data in the context\n    c.set(\"valid\", result.data)\n    await next()\n  } catch (error) {\n    if (error instanceof Error) {\n      return errorHandler(new ApiError(error.message, 400))\n    }\n    return errorHandler(new ApiError(\"Invalid request\", 400))\n  }\n}\n\n/**\n * Middleware to validate URL parameters against a Zod schema\n */\nexport async function validateUrlParams<T extends z.ZodType>(\n  schema: T,\n  c: Context,\n  next: Next\n) {\n  try {\n    const params = c.req.param()\n    const result = await schema.safeParseAsync(params)\n\n    if (!result.success) {\n      return errorHandler({ success: false, error: result.error })\n    }\n\n    // Store the validated data in the context\n    c.set(\"valid\", result.data)\n    await next()\n  } catch (error) {\n    if (error instanceof Error) {\n      return errorHandler(new ApiError(error.message, 400))\n    }\n    return errorHandler(new ApiError(\"Invalid request\", 400))\n  }\n}\n\n/**\n * Generic validator middleware that can handle body, query, or params validation\n */\nexport function zodValidator<T extends z.ZodType>(\n  schema: T,\n  target: \"json\" | \"query\" | \"params\" = \"json\"\n) {\n  return async (c: Context, next: Next) => {\n    switch (target) {\n      case \"query\":\n        return validateQueryParams(schema, c, next)\n      case \"params\":\n        return validateUrlParams(schema, c, next)\n      default:\n        return validateBody(schema, c, next)\n    }\n  }\n}\n\n// Type helper to get validated data from context\nexport function getValidatedData<T extends z.ZodType>(c: Context): z.infer<T> {\n  return c.get(\"valid\") as z.infer<T>\n}\n\nexport function validateRequest(schema: z.Schema) {\n  return async (c: Context, next: Next) => {\n    try {\n      const body = await c.req.json()\n      const validatedData = await schema.parseAsync(body)\n      c.set(\"validatedData\", validatedData)\n      await next()\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        throw new ApiError(\n          \"Validation failed\",\n          400,\n          \"VALIDATION_ERROR\",\n          error.errors.map((err) => ({\n            field: err.path.join(\".\"),\n            message: err.message,\n          }))\n        )\n      }\n      throw error\n    }\n  }\n}\n\nexport function validateQuery(schema: z.Schema) {\n  return async (c: Context, next: Next) => {\n    try {\n      const query = c.req.query()\n      const validatedData = await schema.parseAsync(query)\n      c.set(\"validatedQuery\", validatedData)\n      await next()\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        throw new ApiError(\n          \"Query validation failed\",\n          400,\n          \"VALIDATION_ERROR\",\n          error.errors.map((err) => ({\n            field: err.path.join(\".\"),\n            message: err.message,\n          }))\n        )\n      }\n      throw error\n    }\n  }\n}\n\nexport function validateParams(schema: z.Schema) {\n  return async (c: Context, next: Next) => {\n    try {\n      const params = c.req.param()\n      const validatedData = await schema.parseAsync(params)\n      c.set(\"validatedParams\", validatedData)\n      await next()\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        throw new ApiError(\n          \"Path parameter validation failed\",\n          400,\n          \"VALIDATION_ERROR\",\n          error.errors.map((err) => ({\n            field: err.path.join(\".\"),\n            message: err.message,\n          }))\n        )\n      }\n      throw error\n    }\n  }\n}\n","import { Context, Next } from \"hono\"\nimport { config } from \"../config\"\nimport { logger } from \"../lib/logger\"\nimport redis from \"../lib/redis\"\n\n/**\n * Check if a request is rate limited\n */\nasync function isRateLimited(\n  key: string,\n  limit: number,\n  window: number\n): Promise<boolean> {\n  const now = Date.now()\n  const windowKey = Math.floor(now / window)\n  const finalKey = `rate_limit:${key}:${windowKey}`\n\n  try {\n    const multi = redis.multi()\n    multi.incr(finalKey)\n    multi.pexpire(finalKey, window)\n    const [count] = (await multi.exec()) as [number, any]\n\n    return count > limit\n  } catch (error) {\n    logger.error({\n      message: \"Rate limit check error\",\n      error: error instanceof Error ? error.message : \"Unknown error\",\n      key,\n    })\n    return false // Allow request on Redis error\n  }\n}\n\n/**\n * Standard rate limiting middleware for general API endpoints\n */\nexport const rateLimit = async (c: Context, next: Next) => {\n  try {\n    const clientIp =\n      c.req.header(\"x-forwarded-for\") || c.req.header(\"x-real-ip\") || \"unknown\"\n\n    const isLimited = await isRateLimited(\n      `${clientIp}:standard`,\n      config.rateLimit.standard.max,\n      config.rateLimit.standard.window\n    )\n\n    if (isLimited) {\n      logger.warn({\n        message: \"Rate limit exceeded\",\n        ip: clientIp,\n        path: c.req.path,\n      })\n      return c.json(\n        { error: \"Too many requests. Please try again later.\" },\n        429\n      )\n    }\n\n    await next()\n  } catch (error) {\n    logger.error({\n      message: \"Rate limit error\",\n      error: error instanceof Error ? error.message : \"Unknown error\",\n    })\n    await next()\n  }\n}\n\n/**\n * Stricter rate limiting middleware for authentication endpoints\n */\nexport const authRateLimit = async (c: Context, next: Next) => {\n  try {\n    const clientIp =\n      c.req.header(\"x-forwarded-for\") || c.req.header(\"x-real-ip\") || \"unknown\"\n\n    const isLimited = await isRateLimited(\n      `${clientIp}:auth`,\n      config.rateLimit.auth.max,\n      config.rateLimit.auth.window\n    )\n\n    if (isLimited) {\n      logger.warn({\n        message: \"Auth rate limit exceeded\",\n        ip: clientIp,\n        path: c.req.path,\n      })\n      return c.json(\n        { error: \"Too many authentication attempts. Please try again later.\" },\n        429\n      )\n    }\n\n    await next()\n  } catch (error) {\n    logger.error({\n      message: \"Auth rate limit error\",\n      error: error instanceof Error ? error.message : \"Unknown error\",\n    })\n    await next()\n  }\n}\n\n// Re-export both rate limiting middlewares\nexport { rateLimit as standardRateLimit }\n","import Redis from \"ioredis\"\nimport { config } from \"../config\"\nimport { logger } from \"./logger\"\n\nconst redis = new Redis({\n  host: process.env.REDIS_HOST || \"localhost\",\n  port: parseInt(process.env.REDIS_PORT || \"6379\", 10),\n  retryStrategy: (times) => {\n    const delay = Math.min(times * 50, 2000)\n    return delay\n  },\n})\n\nredis.on(\"error\", (error) => {\n  logger.error({\n    message: \"Redis connection error\",\n    error: error.message,\n  })\n})\n\nredis.on(\"connect\", () => {\n  logger.info(\"Redis connected successfully\")\n})\n\nexport default redis\n","import { Next } from \"hono\"\nimport { Context } from \"../types/hono.types\"\nimport { AuthError, AuthErrorCode } from \"../types/error.types\"\nimport { prisma } from \"../lib/prisma\"\nimport { hasPermission, hasAllPermissions, hasAnyPermission, logPermissionCheck } from \"../utils/permissions\"\n\n/**\n * Middleware to check if a user has a specific permission\n */\nexport function requirePermission(action: string, subject: string) {\n  return async (c: Context, next: Next) => {\n    const user = c.get(\"user\")\n    \n    if (!user) {\n      throw new AuthError(\n        AuthErrorCode.UNAUTHORIZED,\n        \"User not found in context\",\n        401\n      )\n    }\n    \n    // Get client information for logging\n    const clientInfo = {\n      ipAddress: c.req.header(\"x-forwarded-for\") || \n                 c.req.header(\"x-real-ip\") || \n                 c.req.header(\"cf-connecting-ip\") ||\n                 \"unknown\",\n      userAgent: c.req.header(\"user-agent\") || \"unknown\"\n    }\n    \n    // Get resource information if available\n    const resourceId = c.req.param(\"id\")\n    const resource = resourceId ? { id: resourceId } : undefined\n    \n    // Check permission\n    const result = await hasPermission(user, action, subject, resource)\n    \n    // Log the permission check\n    await logPermissionCheck(\n      user,\n      action,\n      subject,\n      resource,\n      result.granted,\n      clientInfo.ipAddress,\n      clientInfo.userAgent\n    )\n    \n    if (!result.granted) {\n      throw new AuthError(\n        AuthErrorCode.FORBIDDEN,\n        result.reason || \"Insufficient permissions\",\n        403\n      )\n    }\n    \n    await next()\n  }\n}\n\n/**\n * Middleware to check if a user has all of the specified permissions\n */\nexport function requireAllPermissions(permissions: { action: string; subject: string }[]) {\n  return async (c: Context, next: Next) => {\n    const user = c.get(\"user\")\n    \n    if (!user) {\n      throw new AuthError(\n        AuthErrorCode.UNAUTHORIZED,\n        \"User not found in context\",\n        401\n      )\n    }\n    \n    // Get client information for logging\n    const clientInfo = {\n      ipAddress: c.req.header(\"x-forwarded-for\") || \n                 c.req.header(\"x-real-ip\") || \n                 c.req.header(\"cf-connecting-ip\") ||\n                 \"unknown\",\n      userAgent: c.req.header(\"user-agent\") || \"unknown\"\n    }\n    \n    // Get resource information if available\n    const resourceId = c.req.param(\"id\")\n    const resource = resourceId ? { id: resourceId } : undefined\n    \n    // Check permissions\n    const result = await hasAllPermissions(user, permissions, resource)\n    \n    // Log the permission check\n    await logPermissionCheck(\n      user,\n      \"multiple\",\n      \"permissions\",\n      { permissions, resource },\n      result.granted,\n      clientInfo.ipAddress,\n      clientInfo.userAgent\n    )\n    \n    if (!result.granted) {\n      throw new AuthError(\n        AuthErrorCode.FORBIDDEN,\n        result.reason || \"Insufficient permissions\",\n        403\n      )\n    }\n    \n    await next()\n  }\n}\n\n/**\n * Middleware to check if a user has any of the specified permissions\n */\nexport function requireAnyPermission(permissions: { action: string; subject: string }[]) {\n  return async (c: Context, next: Next) => {\n    const user = c.get(\"user\")\n    \n    if (!user) {\n      throw new AuthError(\n        AuthErrorCode.UNAUTHORIZED,\n        \"User not found in context\",\n        401\n      )\n    }\n    \n    // Get client information for logging\n    const clientInfo = {\n      ipAddress: c.req.header(\"x-forwarded-for\") || \n                 c.req.header(\"x-real-ip\") || \n                 c.req.header(\"cf-connecting-ip\") ||\n                 \"unknown\",\n      userAgent: c.req.header(\"user-agent\") || \"unknown\"\n    }\n    \n    // Get resource information if available\n    const resourceId = c.req.param(\"id\")\n    const resource = resourceId ? { id: resourceId } : undefined\n    \n    // Check permissions\n    const result = await hasAnyPermission(user, permissions, resource)\n    \n    // Log the permission check\n    await logPermissionCheck(\n      user,\n      \"multiple\",\n      \"permissions\",\n      { permissions, resource },\n      result.granted,\n      clientInfo.ipAddress,\n      clientInfo.userAgent\n    )\n    \n    if (!result.granted) {\n      throw new AuthError(\n        AuthErrorCode.FORBIDDEN,\n        result.reason || \"Insufficient permissions\",\n        403\n      )\n    }\n    \n    await next()\n  }\n}\n\n/**\n * Middleware to check if a user can access their own resource\n */\nexport function requireOwnership(subject: string, getUserIdFromResource: (c: Context) => Promise<string>) {\n  return async (c: Context, next: Next) => {\n    const user = c.get(\"user\")\n    \n    if (!user) {\n      throw new AuthError(\n        AuthErrorCode.UNAUTHORIZED,\n        \"User not found in context\",\n        401\n      )\n    }\n    \n    // Admin users can access any resource\n    if (user.role === 'ADMIN') {\n      await next()\n      return\n    }\n    \n    // Get the resource owner's user ID\n    const resourceUserId = await getUserIdFromResource(c)\n    \n    // Check if the user is the owner\n    if (user.id !== resourceUserId) {\n      throw new AuthError(\n        AuthErrorCode.FORBIDDEN,\n        \"You can only access your own resources\",\n        403\n      )\n    }\n    \n    await next()\n  }\n}\n\n/**\n * Middleware to check if a user has activity-based permissions\n * This checks if the user has performed specific actions recently\n */\nexport function requireActivity(action: string, subject: string, lookbackHours: number = 24) {\n  return async (c: Context, next: Next) => {\n    const user = c.get(\"user\")\n    \n    if (!user) {\n      throw new AuthError(\n        AuthErrorCode.UNAUTHORIZED,\n        \"User not found in context\",\n        401\n      )\n    }\n    \n    // Admin users can access any resource\n    if (user.role === 'ADMIN') {\n      await next()\n      return\n    }\n    \n    // Calculate the lookback time\n    const lookbackTime = new Date()\n    lookbackTime.setHours(lookbackTime.getHours() - lookbackHours)\n    \n    // Check if the user has performed the action recently\n    const recentActivity = await prisma.activityLog.findFirst({\n      where: {\n        userId: user.id,\n        action,\n        subject,\n        createdAt: {\n          gte: lookbackTime\n        }\n      }\n    })\n    \n    if (!recentActivity) {\n      throw new AuthError(\n        AuthErrorCode.FORBIDDEN,\n        `You must have performed ${action} on ${subject} in the last ${lookbackHours} hours`,\n        403\n      )\n    }\n    \n    await next()\n  }\n}\n","/**\n * Permission constants for the application\n * These are used to define permissions in a consistent way\n */\n\n// Metadata permissions\nexport const METADATA_CREATE = { action: \"create\", subject: \"metadata\" }\nexport const METADATA_READ = { action: \"read\", subject: \"metadata\" }\nexport const METADATA_UPDATE = { action: \"update\", subject: \"metadata\" }\nexport const METADATA_DELETE = { action: \"delete\", subject: \"metadata\" }\nexport const METADATA_APPROVE = { action: \"approve\", subject: \"metadata\" }\nexport const METADATA_REJECT = { action: \"reject\", subject: \"metadata\" }\nexport const METADATA_PUBLISH = { action: \"publish\", subject: \"metadata\" }\nexport const METADATA_UNPUBLISH = { action: \"unpublish\", subject: \"metadata\" }\nexport const METADATA_IMPORT = { action: \"import\", subject: \"metadata\" }\nexport const METADATA_EXPORT = { action: \"export\", subject: \"metadata\" }\nexport const METADATA_SUBMIT_FOR_REVIEW = {\n  action: \"submit-for-review\",\n  subject: \"metadata\",\n}\nexport const METADATA_VALIDATE = { action: \"validate\", subject: \"metadata\" }\nexport const METADATA_BULK_EDIT = { action: \"bulk-edit\", subject: \"metadata\" }\nexport const METADATA_ASSIGN_REVIEWER = {\n  action: \"assign-reviewer\",\n  subject: \"metadata\",\n}\n\n// User permissions\nexport const USER_CREATE = { action: \"create\", subject: \"user\" }\nexport const USER_READ = { action: \"read\", subject: \"user\" }\nexport const USER_UPDATE = { action: \"update\", subject: \"user\" }\nexport const USER_DELETE = { action: \"delete\", subject: \"user\" }\nexport const USER_MANAGE_ROLES = { action: \"manage-roles\", subject: \"user\" }\n\n// Role permissions\nexport const ROLE_CREATE = { action: \"create\", subject: \"role\" }\nexport const ROLE_READ = { action: \"read\", subject: \"role\" }\nexport const ROLE_UPDATE = { action: \"update\", subject: \"role\" }\nexport const ROLE_DELETE = { action: \"delete\", subject: \"role\" }\nexport const ROLE_ASSIGN = { action: \"assign\", subject: \"role\" }\n\n// Permission permissions\nexport const PERMISSION_CREATE = { action: \"create\", subject: \"permission\" }\nexport const PERMISSION_READ = { action: \"read\", subject: \"permission\" }\nexport const PERMISSION_UPDATE = { action: \"update\", subject: \"permission\" }\nexport const PERMISSION_DELETE = { action: \"delete\", subject: \"permission\" }\nexport const PERMISSION_ASSIGN = { action: \"assign\", subject: \"permission\" }\n\n// System permissions\nexport const SYSTEM_SETTINGS = { action: \"manage\", subject: \"settings\" }\nexport const SYSTEM_LOGS = { action: \"view\", subject: \"logs\" }\nexport const SYSTEM_BACKUP = { action: \"manage\", subject: \"backup\" }\n\n// Dashboard permissions\nexport const DASHBOARD_VIEW = { action: \"view\", subject: \"dashboard\" }\nexport const DASHBOARD_ANALYTICS = { action: \"view\", subject: \"analytics\" }\nexport const DASHBOARD_REPORTS = { action: \"view\", subject: \"reports\" }\n\n// Organization permissions\nexport const ORGANIZATION_CREATE = { action: \"create\", subject: \"organization\" }\nexport const ORGANIZATION_READ = { action: \"read\", subject: \"organization\" }\nexport const ORGANIZATION_UPDATE = { action: \"update\", subject: \"organization\" }\nexport const ORGANIZATION_DELETE = { action: \"delete\", subject: \"organization\" }\nexport const ORGANIZATION_MANAGE_MEMBERS = {\n  action: \"manage-members\",\n  subject: \"organization\",\n}\n\n// Permission groups\nexport const METADATA_MANAGEMENT = [\n  METADATA_CREATE,\n  METADATA_READ,\n  METADATA_UPDATE,\n  METADATA_DELETE,\n  METADATA_APPROVE,\n  METADATA_REJECT,\n  METADATA_PUBLISH,\n  METADATA_UNPUBLISH,\n  METADATA_IMPORT,\n  METADATA_EXPORT,\n  METADATA_SUBMIT_FOR_REVIEW,\n  METADATA_VALIDATE,\n  METADATA_BULK_EDIT,\n  METADATA_ASSIGN_REVIEWER,\n]\n\n// More granular metadata permission groups\nexport const METADATA_AUTHOR_PERMISSIONS = [\n  METADATA_CREATE,\n  METADATA_READ,\n  METADATA_UPDATE,\n  METADATA_SUBMIT_FOR_REVIEW,\n]\n\nexport const METADATA_REVIEWER_PERMISSIONS = [\n  METADATA_READ,\n  METADATA_VALIDATE,\n  METADATA_APPROVE,\n  METADATA_REJECT,\n]\n\nexport const METADATA_PUBLISHER_PERMISSIONS = [\n  METADATA_READ,\n  METADATA_PUBLISH,\n  METADATA_UNPUBLISH,\n]\n\nexport const METADATA_ADMIN_PERMISSIONS = [\n  ...METADATA_MANAGEMENT,\n  METADATA_ASSIGN_REVIEWER,\n]\n\nexport const USER_MANAGEMENT = [\n  USER_CREATE,\n  USER_READ,\n  USER_UPDATE,\n  USER_DELETE,\n  USER_MANAGE_ROLES,\n]\n\nexport const ROLE_MANAGEMENT = [\n  ROLE_CREATE,\n  ROLE_READ,\n  ROLE_UPDATE,\n  ROLE_DELETE,\n  ROLE_ASSIGN,\n]\n\nexport const PERMISSION_MANAGEMENT = [\n  PERMISSION_CREATE,\n  PERMISSION_READ,\n  PERMISSION_UPDATE,\n  PERMISSION_DELETE,\n  PERMISSION_ASSIGN,\n]\n\nexport const SYSTEM_ADMINISTRATION = [\n  SYSTEM_SETTINGS,\n  SYSTEM_LOGS,\n  SYSTEM_BACKUP,\n]\n\nexport const DASHBOARD_ACCESS = [\n  DASHBOARD_VIEW,\n  DASHBOARD_ANALYTICS,\n  DASHBOARD_REPORTS,\n]\n\nexport const ORGANIZATION_MANAGEMENT = [\n  ORGANIZATION_CREATE,\n  ORGANIZATION_READ,\n  ORGANIZATION_UPDATE,\n  ORGANIZATION_DELETE,\n  ORGANIZATION_MANAGE_MEMBERS,\n]\n\n// Role permission sets\nexport const ADMIN_PERMISSIONS = [\n  ...METADATA_MANAGEMENT,\n  ...USER_MANAGEMENT,\n  ...ROLE_MANAGEMENT,\n  ...PERMISSION_MANAGEMENT,\n  ...SYSTEM_ADMINISTRATION,\n  ...DASHBOARD_ACCESS,\n  ...ORGANIZATION_MANAGEMENT,\n]\n\nexport const NODE_OFFICER_PERMISSIONS = [\n  ...METADATA_REVIEWER_PERMISSIONS,\n  ...METADATA_PUBLISHER_PERMISSIONS,\n  METADATA_IMPORT,\n  METADATA_EXPORT,\n  METADATA_VALIDATE,\n  USER_READ,\n  USER_CREATE,\n  DASHBOARD_VIEW,\n  DASHBOARD_ANALYTICS,\n  DASHBOARD_REPORTS,\n  ORGANIZATION_READ,\n  ORGANIZATION_UPDATE,\n]\n\nexport const USER_PERMISSIONS = [\n  ...METADATA_AUTHOR_PERMISSIONS,\n  DASHBOARD_VIEW\n]\n\nexport const GUEST_PERMISSIONS = [METADATA_READ]\n","import { OpenAPIHono, createRoute } from \"@hono/zod-openapi\"\nimport { z } from \"zod\"\nimport { prisma } from \"../../lib/prisma\"\nimport { \n  authMiddleware, \n  requirePermission \n} from \"../../middleware\"\nimport { \n  ROLE_READ, \n  ROLE_CREATE,\n  ROLE_UPDATE,\n  ROLE_DELETE,\n  ROLE_ASSIGN\n} from \"../../constants/permissions\"\n\n// Create roles router\nconst rolesRouter = new OpenAPIHono()\n\n// Apply auth middleware to all routes\nrolesRouter.use(\"*\", authMiddleware)\n\n// Role schema\nconst roleSchema = z.object({\n  name: z.string().min(3).max(100),\n  description: z.string().optional(),\n  isSystem: z.boolean().optional().default(false)\n})\n\n// Role response schema\nconst roleResponseSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  description: z.string().nullable(),\n  isSystem: z.boolean(),\n  createdAt: z.string(),\n  updatedAt: z.string()\n})\n\n// Role with permissions schema\nconst roleWithPermissionsSchema = roleResponseSchema.extend({\n  permissions: z.array(z.object({\n    id: z.string(),\n    name: z.string(),\n    action: z.string(),\n    subject: z.string()\n  }))\n})\n\n// List roles\nrolesRouter.openapi(\n  createRoute({\n    method: \"get\",\n    path: \"/\",\n    tags: [\"Roles\"],\n    security: [{ bearerAuth: [] }],\n    description: \"List all roles\",\n    responses: {\n      200: {\n        description: \"List of roles\",\n        content: {\n          \"application/json\": {\n            schema: z.object({\n              roles: z.array(roleResponseSchema)\n            })\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to read roles\n    await requirePermission(ROLE_READ.action, ROLE_READ.subject)(c, async () => {})\n\n    const roles = await prisma.role.findMany({\n      orderBy: { name: \"asc\" }\n    })\n\n    return c.json({ roles })\n  }\n)\n\n// Get role by ID\nrolesRouter.openapi(\n  createRoute({\n    method: \"get\",\n    path: \"/:id\",\n    tags: [\"Roles\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Get role by ID with its permissions\",\n    request: {\n      params: z.object({\n        id: z.string()\n      })\n    },\n    responses: {\n      200: {\n        description: \"Role details with permissions\",\n        content: {\n          \"application/json\": {\n            schema: roleWithPermissionsSchema\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      },\n      404: {\n        description: \"Role not found\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to read roles\n    await requirePermission(ROLE_READ.action, ROLE_READ.subject)(c, async () => {})\n\n    const { id } = c.req.param()\n\n    const role = await prisma.role.findUnique({\n      where: { id },\n      include: {\n        rolePermissions: {\n          include: {\n            permission: true\n          }\n        }\n      }\n    })\n\n    if (!role) {\n      return c.json({ error: \"Role not found\" }, 404)\n    }\n\n    // Transform the response\n    const response = {\n      ...role,\n      permissions: role.rolePermissions.map(rp => ({\n        id: rp.permission.id,\n        name: rp.permission.name,\n        action: rp.permission.action,\n        subject: rp.permission.subject\n      }))\n    }\n\n    // Remove rolePermissions from the response\n    delete response.rolePermissions\n\n    return c.json(response)\n  }\n)\n\n// Create role\nrolesRouter.openapi(\n  createRoute({\n    method: \"post\",\n    path: \"/\",\n    tags: [\"Roles\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Create a new role\",\n    request: {\n      body: {\n        content: {\n          \"application/json\": {\n            schema: roleSchema.extend({\n              permissionIds: z.array(z.string()).optional()\n            })\n          }\n        }\n      }\n    },\n    responses: {\n      201: {\n        description: \"Role created\",\n        content: {\n          \"application/json\": {\n            schema: roleWithPermissionsSchema\n          }\n        }\n      },\n      400: {\n        description: \"Invalid input\"\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to create roles\n    await requirePermission(ROLE_CREATE.action, ROLE_CREATE.subject)(c, async () => {})\n\n    const data = await c.req.json()\n    const { permissionIds, ...roleData } = data\n\n    try {\n      // Create the role\n      const role = await prisma.role.create({\n        data: roleData\n      })\n\n      // Add permissions if provided\n      if (permissionIds && permissionIds.length > 0) {\n        await prisma.$transaction(\n          permissionIds.map(permissionId =>\n            prisma.rolePermission.create({\n              data: {\n                roleId: role.id,\n                permissionId\n              }\n            })\n          )\n        )\n      }\n\n      // Get the role with permissions\n      const roleWithPermissions = await prisma.role.findUnique({\n        where: { id: role.id },\n        include: {\n          rolePermissions: {\n            include: {\n              permission: true\n            }\n          }\n        }\n      })\n\n      // Transform the response\n      const response = {\n        ...roleWithPermissions,\n        permissions: roleWithPermissions.rolePermissions.map(rp => ({\n          id: rp.permission.id,\n          name: rp.permission.name,\n          action: rp.permission.action,\n          subject: rp.permission.subject\n        }))\n      }\n\n      // Remove rolePermissions from the response\n      delete response.rolePermissions\n\n      return c.json(response, 201)\n    } catch (error) {\n      if (error.code === \"P2002\") {\n        return c.json({ error: \"Role with this name already exists\" }, 400)\n      }\n      \n      return c.json({ error: \"Failed to create role\" }, 500)\n    }\n  }\n)\n\n// Update role\nrolesRouter.openapi(\n  createRoute({\n    method: \"put\",\n    path: \"/:id\",\n    tags: [\"Roles\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Update a role\",\n    request: {\n      params: z.object({\n        id: z.string()\n      }),\n      body: {\n        content: {\n          \"application/json\": {\n            schema: roleSchema.partial().extend({\n              permissionIds: z.array(z.string()).optional()\n            })\n          }\n        }\n      }\n    },\n    responses: {\n      200: {\n        description: \"Role updated\",\n        content: {\n          \"application/json\": {\n            schema: roleWithPermissionsSchema\n          }\n        }\n      },\n      400: {\n        description: \"Invalid input\"\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      },\n      404: {\n        description: \"Role not found\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to update roles\n    await requirePermission(ROLE_UPDATE.action, ROLE_UPDATE.subject)(c, async () => {})\n\n    const { id } = c.req.param()\n    const data = await c.req.json()\n    const { permissionIds, ...roleData } = data\n\n    try {\n      // Check if the role exists and is not a system role\n      const existingRole = await prisma.role.findUnique({\n        where: { id }\n      })\n\n      if (!existingRole) {\n        return c.json({ error: \"Role not found\" }, 404)\n      }\n\n      if (existingRole.isSystem && data.isSystem === false) {\n        return c.json({ error: \"Cannot change system role status\" }, 400)\n      }\n\n      // Update the role\n      const role = await prisma.role.update({\n        where: { id },\n        data: roleData\n      })\n\n      // Update permissions if provided\n      if (permissionIds !== undefined) {\n        // Delete existing role permissions\n        await prisma.rolePermission.deleteMany({\n          where: { roleId: id }\n        })\n\n        // Add new permissions\n        if (permissionIds.length > 0) {\n          await prisma.$transaction(\n            permissionIds.map(permissionId =>\n              prisma.rolePermission.create({\n                data: {\n                  roleId: role.id,\n                  permissionId\n                }\n              })\n            )\n          )\n        }\n      }\n\n      // Get the updated role with permissions\n      const roleWithPermissions = await prisma.role.findUnique({\n        where: { id: role.id },\n        include: {\n          rolePermissions: {\n            include: {\n              permission: true\n            }\n          }\n        }\n      })\n\n      // Transform the response\n      const response = {\n        ...roleWithPermissions,\n        permissions: roleWithPermissions.rolePermissions.map(rp => ({\n          id: rp.permission.id,\n          name: rp.permission.name,\n          action: rp.permission.action,\n          subject: rp.permission.subject\n        }))\n      }\n\n      // Remove rolePermissions from the response\n      delete response.rolePermissions\n\n      return c.json(response)\n    } catch (error) {\n      if (error.code === \"P2025\") {\n        return c.json({ error: \"Role not found\" }, 404)\n      }\n      \n      if (error.code === \"P2002\") {\n        return c.json({ error: \"Role with this name already exists\" }, 400)\n      }\n      \n      return c.json({ error: \"Failed to update role\" }, 500)\n    }\n  }\n)\n\n// Delete role\nrolesRouter.openapi(\n  createRoute({\n    method: \"delete\",\n    path: \"/:id\",\n    tags: [\"Roles\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Delete a role\",\n    request: {\n      params: z.object({\n        id: z.string()\n      })\n    },\n    responses: {\n      200: {\n        description: \"Role deleted\",\n        content: {\n          \"application/json\": {\n            schema: z.object({\n              message: z.string()\n            })\n          }\n        }\n      },\n      400: {\n        description: \"Cannot delete system role\"\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      },\n      404: {\n        description: \"Role not found\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to delete roles\n    await requirePermission(ROLE_DELETE.action, ROLE_DELETE.subject)(c, async () => {})\n\n    const { id } = c.req.param()\n\n    try {\n      // Check if the role exists and is not a system role\n      const role = await prisma.role.findUnique({\n        where: { id }\n      })\n\n      if (!role) {\n        return c.json({ error: \"Role not found\" }, 404)\n      }\n\n      if (role.isSystem) {\n        return c.json({ error: \"Cannot delete system role\" }, 400)\n      }\n\n      // Delete the role\n      await prisma.role.delete({\n        where: { id }\n      })\n\n      return c.json({ message: \"Role deleted successfully\" })\n    } catch (error) {\n      if (error.code === \"P2025\") {\n        return c.json({ error: \"Role not found\" }, 404)\n      }\n      \n      return c.json({ error: \"Failed to delete role\" }, 500)\n    }\n  }\n)\n\n// Assign role to user\nrolesRouter.openapi(\n  createRoute({\n    method: \"post\",\n    path: \"/assign/:roleId/user/:userId\",\n    tags: [\"Roles\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Assign a role to a user\",\n    request: {\n      params: z.object({\n        roleId: z.string(),\n        userId: z.string()\n      })\n    },\n    responses: {\n      200: {\n        description: \"Role assigned to user\",\n        content: {\n          \"application/json\": {\n            schema: z.object({\n              message: z.string()\n            })\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      },\n      404: {\n        description: \"Role or user not found\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to assign roles\n    await requirePermission(ROLE_ASSIGN.action, ROLE_ASSIGN.subject)(c, async () => {})\n\n    const { roleId, userId } = c.req.param()\n\n    try {\n      // Check if the role and user exist\n      const role = await prisma.role.findUnique({\n        where: { id: roleId }\n      })\n\n      if (!role) {\n        return c.json({ error: \"Role not found\" }, 404)\n      }\n\n      const user = await prisma.user.findUnique({\n        where: { id: userId }\n      })\n\n      if (!user) {\n        return c.json({ error: \"User not found\" }, 404)\n      }\n\n      // Update the user's role\n      await prisma.user.update({\n        where: { id: userId },\n        data: { roleId }\n      })\n\n      return c.json({ message: \"Role assigned to user successfully\" })\n    } catch (error) {\n      return c.json({ error: \"Failed to assign role to user\" }, 500)\n    }\n  }\n)\n\n// Get users with a specific role\nrolesRouter.openapi(\n  createRoute({\n    method: \"get\",\n    path: \"/:id/users\",\n    tags: [\"Roles\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Get users with a specific role\",\n    request: {\n      params: z.object({\n        id: z.string()\n      })\n    },\n    responses: {\n      200: {\n        description: \"List of users with the role\",\n        content: {\n          \"application/json\": {\n            schema: z.object({\n              users: z.array(z.object({\n                id: z.string(),\n                name: z.string().nullable(),\n                email: z.string(),\n                role: z.string()\n              }))\n            })\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      },\n      404: {\n        description: \"Role not found\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to read roles\n    await requirePermission(ROLE_READ.action, ROLE_READ.subject)(c, async () => {})\n\n    const { id } = c.req.param()\n\n    try {\n      // Check if the role exists\n      const role = await prisma.role.findUnique({\n        where: { id }\n      })\n\n      if (!role) {\n        return c.json({ error: \"Role not found\" }, 404)\n      }\n\n      // Get users with the role\n      const users = await prisma.user.findMany({\n        where: { roleId: id },\n        select: {\n          id: true,\n          name: true,\n          email: true,\n          role: true\n        }\n      })\n\n      return c.json({ users })\n    } catch (error) {\n      return c.json({ error: \"Failed to get users with role\" }, 500)\n    }\n  }\n)\n\nexport default rolesRouter\n","import { OpenAPIHono, createRoute } from \"@hono/zod-openapi\"\nimport { z } from \"zod\"\nimport { prisma } from \"../../lib/prisma\"\nimport { \n  authMiddleware, \n  requirePermission \n} from \"../../middleware\"\nimport { \n  PERMISSION_READ, \n  PERMISSION_ASSIGN \n} from \"../../constants/permissions\"\nimport { getAllPermissionsForUser } from \"../../utils/permissions\"\n\n// Create user permissions router\nconst userPermissionsRouter = new OpenAPIHono()\n\n// Apply auth middleware to all routes\nuserPermissionsRouter.use(\"*\", authMiddleware)\n\n// User permission schema\nconst userPermissionSchema = z.object({\n  permissionId: z.string(),\n  granted: z.boolean().default(true),\n  conditions: z.any().optional(),\n  expiresAt: z.string().datetime().optional()\n})\n\n// User permission response schema\nconst userPermissionResponseSchema = z.object({\n  id: z.string(),\n  userId: z.string(),\n  permissionId: z.string(),\n  granted: z.boolean(),\n  conditions: z.any().nullable(),\n  expiresAt: z.string().datetime().nullable(),\n  createdAt: z.string(),\n  permission: z.object({\n    id: z.string(),\n    name: z.string(),\n    action: z.string(),\n    subject: z.string(),\n    description: z.string().nullable()\n  })\n})\n\n// Get user permissions\nuserPermissionsRouter.openapi(\n  createRoute({\n    method: \"get\",\n    path: \"/user/:userId\",\n    tags: [\"User Permissions\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Get permissions for a user\",\n    request: {\n      params: z.object({\n        userId: z.string()\n      })\n    },\n    responses: {\n      200: {\n        description: \"User permissions\",\n        content: {\n          \"application/json\": {\n            schema: z.object({\n              directPermissions: z.array(userPermissionResponseSchema),\n              allPermissions: z.array(z.object({\n                id: z.string(),\n                name: z.string(),\n                action: z.string(),\n                subject: z.string(),\n                description: z.string().nullable(),\n                source: z.enum([\"role\", \"direct\"])\n              }))\n            })\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      },\n      404: {\n        description: \"User not found\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to read permissions\n    await requirePermission(PERMISSION_READ.action, PERMISSION_READ.subject)(c, async () => {})\n\n    const { userId } = c.req.param()\n\n    try {\n      // Check if the user exists\n      const user = await prisma.user.findUnique({\n        where: { id: userId }\n      })\n\n      if (!user) {\n        return c.json({ error: \"User not found\" }, 404)\n      }\n\n      // Get direct permissions\n      const directPermissions = await prisma.userPermission.findMany({\n        where: { \n          userId,\n          granted: true,\n          OR: [\n            { expiresAt: null },\n            { expiresAt: { gt: new Date() } }\n          ]\n        },\n        include: {\n          permission: true\n        }\n      })\n\n      // Get all permissions (including role permissions)\n      const allPermissions = await getAllPermissionsForUser(userId)\n      \n      // Transform all permissions to include source\n      const transformedAllPermissions = allPermissions.map(permission => {\n        const isDirect = directPermissions.some(dp => dp.permissionId === permission.id)\n        return {\n          ...permission,\n          source: isDirect ? \"direct\" : \"role\"\n        }\n      })\n\n      return c.json({\n        directPermissions,\n        allPermissions: transformedAllPermissions\n      })\n    } catch (error) {\n      return c.json({ error: \"Failed to get user permissions\" }, 500)\n    }\n  }\n)\n\n// Grant permission to user\nuserPermissionsRouter.openapi(\n  createRoute({\n    method: \"post\",\n    path: \"/user/:userId\",\n    tags: [\"User Permissions\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Grant a permission to a user\",\n    request: {\n      params: z.object({\n        userId: z.string()\n      }),\n      body: {\n        content: {\n          \"application/json\": {\n            schema: userPermissionSchema\n          }\n        }\n      }\n    },\n    responses: {\n      201: {\n        description: \"Permission granted\",\n        content: {\n          \"application/json\": {\n            schema: userPermissionResponseSchema\n          }\n        }\n      },\n      400: {\n        description: \"Invalid input\"\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      },\n      404: {\n        description: \"User or permission not found\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to assign permissions\n    await requirePermission(PERMISSION_ASSIGN.action, PERMISSION_ASSIGN.subject)(c, async () => {})\n\n    const { userId } = c.req.param()\n    const data = await c.req.json()\n\n    try {\n      // Check if the user exists\n      const user = await prisma.user.findUnique({\n        where: { id: userId }\n      })\n\n      if (!user) {\n        return c.json({ error: \"User not found\" }, 404)\n      }\n\n      // Check if the permission exists\n      const permission = await prisma.permission.findUnique({\n        where: { id: data.permissionId }\n      })\n\n      if (!permission) {\n        return c.json({ error: \"Permission not found\" }, 404)\n      }\n\n      // Create or update the user permission\n      const userPermission = await prisma.userPermission.upsert({\n        where: {\n          userId_permissionId: {\n            userId,\n            permissionId: data.permissionId\n          }\n        },\n        update: {\n          granted: data.granted,\n          conditions: data.conditions,\n          expiresAt: data.expiresAt ? new Date(data.expiresAt) : null\n        },\n        create: {\n          userId,\n          permissionId: data.permissionId,\n          granted: data.granted,\n          conditions: data.conditions,\n          expiresAt: data.expiresAt ? new Date(data.expiresAt) : null\n        },\n        include: {\n          permission: true\n        }\n      })\n\n      return c.json(userPermission, 201)\n    } catch (error) {\n      return c.json({ error: \"Failed to grant permission to user\" }, 500)\n    }\n  }\n)\n\n// Revoke permission from user\nuserPermissionsRouter.openapi(\n  createRoute({\n    method: \"delete\",\n    path: \"/user/:userId/permission/:permissionId\",\n    tags: [\"User Permissions\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Revoke a permission from a user\",\n    request: {\n      params: z.object({\n        userId: z.string(),\n        permissionId: z.string()\n      })\n    },\n    responses: {\n      200: {\n        description: \"Permission revoked\",\n        content: {\n          \"application/json\": {\n            schema: z.object({\n              message: z.string()\n            })\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      },\n      404: {\n        description: \"User permission not found\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to assign permissions\n    await requirePermission(PERMISSION_ASSIGN.action, PERMISSION_ASSIGN.subject)(c, async () => {})\n\n    const { userId, permissionId } = c.req.param()\n\n    try {\n      // Check if the user permission exists\n      const userPermission = await prisma.userPermission.findUnique({\n        where: {\n          userId_permissionId: {\n            userId,\n            permissionId\n          }\n        }\n      })\n\n      if (!userPermission) {\n        return c.json({ error: \"User permission not found\" }, 404)\n      }\n\n      // Delete the user permission\n      await prisma.userPermission.delete({\n        where: {\n          userId_permissionId: {\n            userId,\n            permissionId\n          }\n        }\n      })\n\n      return c.json({ message: \"Permission revoked successfully\" })\n    } catch (error) {\n      return c.json({ error: \"Failed to revoke permission from user\" }, 500)\n    }\n  }\n)\n\n// Check if user has permission\nuserPermissionsRouter.openapi(\n  createRoute({\n    method: \"post\",\n    path: \"/check\",\n    tags: [\"User Permissions\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Check if a user has a specific permission\",\n    request: {\n      body: {\n        content: {\n          \"application/json\": {\n            schema: z.object({\n              userId: z.string(),\n              action: z.string(),\n              subject: z.string(),\n              resource: z.any().optional()\n            })\n          }\n        }\n      }\n    },\n    responses: {\n      200: {\n        description: \"Permission check result\",\n        content: {\n          \"application/json\": {\n            schema: z.object({\n              granted: z.boolean(),\n              reason: z.string().optional()\n            })\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      },\n      404: {\n        description: \"User not found\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to read permissions\n    await requirePermission(PERMISSION_READ.action, PERMISSION_READ.subject)(c, async () => {})\n\n    const { userId, action, subject, resource } = await c.req.json()\n\n    try {\n      // Check if the user exists\n      const user = await prisma.user.findUnique({\n        where: { id: userId }\n      })\n\n      if (!user) {\n        return c.json({ error: \"User not found\" }, 404)\n      }\n\n      // Import the hasPermission function\n      const { hasPermission } = await import(\"../../utils/permissions\")\n\n      // Check if the user has the permission\n      const result = await hasPermission(user, action, subject, resource)\n\n      return c.json(result)\n    } catch (error) {\n      return c.json({ error: \"Failed to check permission\" }, 500)\n    }\n  }\n)\n\nexport default userPermissionsRouter\n","import { OpenAPIHono, createRoute } from \"@hono/zod-openapi\"\nimport { z } from \"zod\"\nimport { prisma } from \"../../lib/prisma\"\nimport { \n  authMiddleware, \n  requirePermission \n} from \"../../middleware\"\nimport { \n  PERMISSION_READ, \n  PERMISSION_CREATE,\n  PERMISSION_UPDATE,\n  PERMISSION_DELETE\n} from \"../../constants/permissions\"\n\n// Create permission groups router\nconst permissionGroupsRouter = new OpenAPIHono()\n\n// Apply auth middleware to all routes\npermissionGroupsRouter.use(\"*\", authMiddleware)\n\n// Permission group schema\nconst permissionGroupSchema = z.object({\n  name: z.string().min(3).max(100),\n  description: z.string().optional()\n})\n\n// Permission group response schema\nconst permissionGroupResponseSchema = z.object({\n  id: z.string(),\n  name: z.string(),\n  description: z.string().nullable(),\n  createdAt: z.string(),\n  updatedAt: z.string()\n})\n\n// Permission group with permissions schema\nconst permissionGroupWithPermissionsSchema = permissionGroupResponseSchema.extend({\n  permissions: z.array(z.object({\n    id: z.string(),\n    name: z.string(),\n    action: z.string(),\n    subject: z.string()\n  }))\n})\n\n// List permission groups\npermissionGroupsRouter.openapi(\n  createRoute({\n    method: \"get\",\n    path: \"/\",\n    tags: [\"Permission Groups\"],\n    security: [{ bearerAuth: [] }],\n    description: \"List all permission groups\",\n    responses: {\n      200: {\n        description: \"List of permission groups\",\n        content: {\n          \"application/json\": {\n            schema: z.object({\n              groups: z.array(permissionGroupResponseSchema)\n            })\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to read permissions\n    await requirePermission(PERMISSION_READ.action, PERMISSION_READ.subject)(c, async () => {})\n\n    const groups = await prisma.permissionGroup.findMany({\n      orderBy: { name: \"asc\" }\n    })\n\n    return c.json({ groups })\n  }\n)\n\n// Get permission group by ID\npermissionGroupsRouter.openapi(\n  createRoute({\n    method: \"get\",\n    path: \"/:id\",\n    tags: [\"Permission Groups\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Get permission group by ID with its permissions\",\n    request: {\n      params: z.object({\n        id: z.string()\n      })\n    },\n    responses: {\n      200: {\n        description: \"Permission group details with permissions\",\n        content: {\n          \"application/json\": {\n            schema: permissionGroupWithPermissionsSchema\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      },\n      404: {\n        description: \"Permission group not found\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to read permissions\n    await requirePermission(PERMISSION_READ.action, PERMISSION_READ.subject)(c, async () => {})\n\n    const { id } = c.req.param()\n\n    const group = await prisma.permissionGroup.findUnique({\n      where: { id },\n      include: {\n        permissionGroupItems: {\n          include: {\n            permission: true\n          }\n        }\n      }\n    })\n\n    if (!group) {\n      return c.json({ error: \"Permission group not found\" }, 404)\n    }\n\n    // Transform the response\n    const response = {\n      ...group,\n      permissions: group.permissionGroupItems.map(item => ({\n        id: item.permission.id,\n        name: item.permission.name,\n        action: item.permission.action,\n        subject: item.permission.subject\n      }))\n    }\n\n    // Remove permissionGroupItems from the response\n    delete response.permissionGroupItems\n\n    return c.json(response)\n  }\n)\n\n// Create permission group\npermissionGroupsRouter.openapi(\n  createRoute({\n    method: \"post\",\n    path: \"/\",\n    tags: [\"Permission Groups\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Create a new permission group\",\n    request: {\n      body: {\n        content: {\n          \"application/json\": {\n            schema: permissionGroupSchema.extend({\n              permissionIds: z.array(z.string()).optional()\n            })\n          }\n        }\n      }\n    },\n    responses: {\n      201: {\n        description: \"Permission group created\",\n        content: {\n          \"application/json\": {\n            schema: permissionGroupWithPermissionsSchema\n          }\n        }\n      },\n      400: {\n        description: \"Invalid input\"\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to create permissions\n    await requirePermission(PERMISSION_CREATE.action, PERMISSION_CREATE.subject)(c, async () => {})\n\n    const data = await c.req.json()\n    const { permissionIds, ...groupData } = data\n\n    try {\n      // Create the permission group\n      const group = await prisma.permissionGroup.create({\n        data: groupData\n      })\n\n      // Add permissions if provided\n      if (permissionIds && permissionIds.length > 0) {\n        await prisma.$transaction(\n          permissionIds.map(permissionId =>\n            prisma.permissionGroupItem.create({\n              data: {\n                groupId: group.id,\n                permissionId\n              }\n            })\n          )\n        )\n      }\n\n      // Get the group with permissions\n      const groupWithPermissions = await prisma.permissionGroup.findUnique({\n        where: { id: group.id },\n        include: {\n          permissionGroupItems: {\n            include: {\n              permission: true\n            }\n          }\n        }\n      })\n\n      // Transform the response\n      const response = {\n        ...groupWithPermissions,\n        permissions: groupWithPermissions.permissionGroupItems.map(item => ({\n          id: item.permission.id,\n          name: item.permission.name,\n          action: item.permission.action,\n          subject: item.permission.subject\n        }))\n      }\n\n      // Remove permissionGroupItems from the response\n      delete response.permissionGroupItems\n\n      return c.json(response, 201)\n    } catch (error) {\n      if (error.code === \"P2002\") {\n        return c.json({ error: \"Permission group with this name already exists\" }, 400)\n      }\n      \n      return c.json({ error: \"Failed to create permission group\" }, 500)\n    }\n  }\n)\n\n// Update permission group\npermissionGroupsRouter.openapi(\n  createRoute({\n    method: \"put\",\n    path: \"/:id\",\n    tags: [\"Permission Groups\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Update a permission group\",\n    request: {\n      params: z.object({\n        id: z.string()\n      }),\n      body: {\n        content: {\n          \"application/json\": {\n            schema: permissionGroupSchema.partial().extend({\n              permissionIds: z.array(z.string()).optional()\n            })\n          }\n        }\n      }\n    },\n    responses: {\n      200: {\n        description: \"Permission group updated\",\n        content: {\n          \"application/json\": {\n            schema: permissionGroupWithPermissionsSchema\n          }\n        }\n      },\n      400: {\n        description: \"Invalid input\"\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      },\n      404: {\n        description: \"Permission group not found\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to update permissions\n    await requirePermission(PERMISSION_UPDATE.action, PERMISSION_UPDATE.subject)(c, async () => {})\n\n    const { id } = c.req.param()\n    const data = await c.req.json()\n    const { permissionIds, ...groupData } = data\n\n    try {\n      // Check if the permission group exists\n      const existingGroup = await prisma.permissionGroup.findUnique({\n        where: { id }\n      })\n\n      if (!existingGroup) {\n        return c.json({ error: \"Permission group not found\" }, 404)\n      }\n\n      // Update the permission group\n      const group = await prisma.permissionGroup.update({\n        where: { id },\n        data: groupData\n      })\n\n      // Update permissions if provided\n      if (permissionIds !== undefined) {\n        // Delete existing group items\n        await prisma.permissionGroupItem.deleteMany({\n          where: { groupId: id }\n        })\n\n        // Add new permissions\n        if (permissionIds.length > 0) {\n          await prisma.$transaction(\n            permissionIds.map(permissionId =>\n              prisma.permissionGroupItem.create({\n                data: {\n                  groupId: group.id,\n                  permissionId\n                }\n              })\n            )\n          )\n        }\n      }\n\n      // Get the updated group with permissions\n      const groupWithPermissions = await prisma.permissionGroup.findUnique({\n        where: { id: group.id },\n        include: {\n          permissionGroupItems: {\n            include: {\n              permission: true\n            }\n          }\n        }\n      })\n\n      // Transform the response\n      const response = {\n        ...groupWithPermissions,\n        permissions: groupWithPermissions.permissionGroupItems.map(item => ({\n          id: item.permission.id,\n          name: item.permission.name,\n          action: item.permission.action,\n          subject: item.permission.subject\n        }))\n      }\n\n      // Remove permissionGroupItems from the response\n      delete response.permissionGroupItems\n\n      return c.json(response)\n    } catch (error) {\n      if (error.code === \"P2025\") {\n        return c.json({ error: \"Permission group not found\" }, 404)\n      }\n      \n      if (error.code === \"P2002\") {\n        return c.json({ error: \"Permission group with this name already exists\" }, 400)\n      }\n      \n      return c.json({ error: \"Failed to update permission group\" }, 500)\n    }\n  }\n)\n\n// Delete permission group\npermissionGroupsRouter.openapi(\n  createRoute({\n    method: \"delete\",\n    path: \"/:id\",\n    tags: [\"Permission Groups\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Delete a permission group\",\n    request: {\n      params: z.object({\n        id: z.string()\n      })\n    },\n    responses: {\n      200: {\n        description: \"Permission group deleted\",\n        content: {\n          \"application/json\": {\n            schema: z.object({\n              message: z.string()\n            })\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      },\n      404: {\n        description: \"Permission group not found\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to delete permissions\n    await requirePermission(PERMISSION_DELETE.action, PERMISSION_DELETE.subject)(c, async () => {})\n\n    const { id } = c.req.param()\n\n    try {\n      // Check if the permission group exists\n      const group = await prisma.permissionGroup.findUnique({\n        where: { id }\n      })\n\n      if (!group) {\n        return c.json({ error: \"Permission group not found\" }, 404)\n      }\n\n      // Delete the permission group\n      await prisma.permissionGroup.delete({\n        where: { id }\n      })\n\n      return c.json({ message: \"Permission group deleted successfully\" })\n    } catch (error) {\n      if (error.code === \"P2025\") {\n        return c.json({ error: \"Permission group not found\" }, 404)\n      }\n      \n      return c.json({ error: \"Failed to delete permission group\" }, 500)\n    }\n  }\n)\n\nexport default permissionGroupsRouter\n","import { OpenAPIHono, createRoute } from \"@hono/zod-openapi\"\nimport { z } from \"zod\"\nimport { prisma } from \"../../lib/prisma\"\nimport { \n  authMiddleware, \n  requirePermission \n} from \"../../middleware\"\nimport { SYSTEM_LOGS } from \"../../constants/permissions\"\n\n// Create activity logs router\nconst activityLogsRouter = new OpenAPIHono()\n\n// Apply auth middleware to all routes\nactivityLogsRouter.use(\"*\", authMiddleware)\n\n// Activity log response schema\nconst activityLogResponseSchema = z.object({\n  id: z.string(),\n  userId: z.string(),\n  action: z.string(),\n  subject: z.string(),\n  subjectId: z.string().nullable(),\n  metadata: z.any().nullable(),\n  ipAddress: z.string().nullable(),\n  userAgent: z.string().nullable(),\n  createdAt: z.string(),\n  user: z.object({\n    id: z.string(),\n    name: z.string().nullable(),\n    email: z.string()\n  }).optional()\n})\n\n// List activity logs\nactivityLogsRouter.openapi(\n  createRoute({\n    method: \"get\",\n    path: \"/\",\n    tags: [\"Activity Logs\"],\n    security: [{ bearerAuth: [] }],\n    description: \"List activity logs with pagination and filtering\",\n    request: {\n      query: z.object({\n        page: z.string().optional().default(\"1\"),\n        limit: z.string().optional().default(\"20\"),\n        userId: z.string().optional(),\n        action: z.string().optional(),\n        subject: z.string().optional(),\n        subjectId: z.string().optional(),\n        startDate: z.string().optional(),\n        endDate: z.string().optional()\n      })\n    },\n    responses: {\n      200: {\n        description: \"List of activity logs\",\n        content: {\n          \"application/json\": {\n            schema: z.object({\n              logs: z.array(activityLogResponseSchema),\n              pagination: z.object({\n                total: z.number(),\n                page: z.number(),\n                limit: z.number(),\n                pages: z.number()\n              })\n            })\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to view logs\n    await requirePermission(SYSTEM_LOGS.action, SYSTEM_LOGS.subject)(c, async () => {})\n\n    const query = c.req.query()\n    const page = parseInt(query.page || \"1\")\n    const limit = parseInt(query.limit || \"20\")\n    const skip = (page - 1) * limit\n\n    // Build filter conditions\n    const where: any = {}\n\n    if (query.userId) {\n      where.userId = query.userId\n    }\n\n    if (query.action) {\n      where.action = query.action\n    }\n\n    if (query.subject) {\n      where.subject = query.subject\n    }\n\n    if (query.subjectId) {\n      where.subjectId = query.subjectId\n    }\n\n    if (query.startDate || query.endDate) {\n      where.createdAt = {}\n\n      if (query.startDate) {\n        where.createdAt.gte = new Date(query.startDate)\n      }\n\n      if (query.endDate) {\n        where.createdAt.lte = new Date(query.endDate)\n      }\n    }\n\n    // Get total count\n    const total = await prisma.activityLog.count({ where })\n\n    // Get logs\n    const logs = await prisma.activityLog.findMany({\n      where,\n      include: {\n        user: {\n          select: {\n            id: true,\n            name: true,\n            email: true\n          }\n        }\n      },\n      orderBy: { createdAt: \"desc\" },\n      skip,\n      take: limit\n    })\n\n    return c.json({\n      logs,\n      pagination: {\n        total,\n        page,\n        limit,\n        pages: Math.ceil(total / limit)\n      }\n    })\n  }\n)\n\n// Get activity log by ID\nactivityLogsRouter.openapi(\n  createRoute({\n    method: \"get\",\n    path: \"/:id\",\n    tags: [\"Activity Logs\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Get activity log by ID\",\n    request: {\n      params: z.object({\n        id: z.string()\n      })\n    },\n    responses: {\n      200: {\n        description: \"Activity log details\",\n        content: {\n          \"application/json\": {\n            schema: activityLogResponseSchema\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      },\n      404: {\n        description: \"Activity log not found\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to view logs\n    await requirePermission(SYSTEM_LOGS.action, SYSTEM_LOGS.subject)(c, async () => {})\n\n    const { id } = c.req.param()\n\n    const log = await prisma.activityLog.findUnique({\n      where: { id },\n      include: {\n        user: {\n          select: {\n            id: true,\n            name: true,\n            email: true\n          }\n        }\n      }\n    })\n\n    if (!log) {\n      return c.json({ error: \"Activity log not found\" }, 404)\n    }\n\n    return c.json(log)\n  }\n)\n\n// Get user activity\nactivityLogsRouter.openapi(\n  createRoute({\n    method: \"get\",\n    path: \"/user/:userId\",\n    tags: [\"Activity Logs\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Get activity logs for a specific user\",\n    request: {\n      params: z.object({\n        userId: z.string()\n      }),\n      query: z.object({\n        page: z.string().optional().default(\"1\"),\n        limit: z.string().optional().default(\"20\")\n      })\n    },\n    responses: {\n      200: {\n        description: \"User activity logs\",\n        content: {\n          \"application/json\": {\n            schema: z.object({\n              logs: z.array(activityLogResponseSchema),\n              pagination: z.object({\n                total: z.number(),\n                page: z.number(),\n                limit: z.number(),\n                pages: z.number()\n              })\n            })\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      },\n      404: {\n        description: \"User not found\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to view logs\n    await requirePermission(SYSTEM_LOGS.action, SYSTEM_LOGS.subject)(c, async () => {})\n\n    const { userId } = c.req.param()\n    const query = c.req.query()\n    const page = parseInt(query.page || \"1\")\n    const limit = parseInt(query.limit || \"20\")\n    const skip = (page - 1) * limit\n\n    // Check if the user exists\n    const user = await prisma.user.findUnique({\n      where: { id: userId }\n    })\n\n    if (!user) {\n      return c.json({ error: \"User not found\" }, 404)\n    }\n\n    // Get total count\n    const total = await prisma.activityLog.count({\n      where: { userId }\n    })\n\n    // Get logs\n    const logs = await prisma.activityLog.findMany({\n      where: { userId },\n      orderBy: { createdAt: \"desc\" },\n      skip,\n      take: limit\n    })\n\n    return c.json({\n      logs,\n      pagination: {\n        total,\n        page,\n        limit,\n        pages: Math.ceil(total / limit)\n      }\n    })\n  }\n)\n\n// Get resource activity\nactivityLogsRouter.openapi(\n  createRoute({\n    method: \"get\",\n    path: \"/resource/:subject/:subjectId\",\n    tags: [\"Activity Logs\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Get activity logs for a specific resource\",\n    request: {\n      params: z.object({\n        subject: z.string(),\n        subjectId: z.string()\n      }),\n      query: z.object({\n        page: z.string().optional().default(\"1\"),\n        limit: z.string().optional().default(\"20\")\n      })\n    },\n    responses: {\n      200: {\n        description: \"Resource activity logs\",\n        content: {\n          \"application/json\": {\n            schema: z.object({\n              logs: z.array(activityLogResponseSchema),\n              pagination: z.object({\n                total: z.number(),\n                page: z.number(),\n                limit: z.number(),\n                pages: z.number()\n              })\n            })\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to view logs\n    await requirePermission(SYSTEM_LOGS.action, SYSTEM_LOGS.subject)(c, async () => {})\n\n    const { subject, subjectId } = c.req.param()\n    const query = c.req.query()\n    const page = parseInt(query.page || \"1\")\n    const limit = parseInt(query.limit || \"20\")\n    const skip = (page - 1) * limit\n\n    // Get total count\n    const total = await prisma.activityLog.count({\n      where: { subject, subjectId }\n    })\n\n    // Get logs\n    const logs = await prisma.activityLog.findMany({\n      where: { subject, subjectId },\n      include: {\n        user: {\n          select: {\n            id: true,\n            name: true,\n            email: true\n          }\n        }\n      },\n      orderBy: { createdAt: \"desc\" },\n      skip,\n      take: limit\n    })\n\n    return c.json({\n      logs,\n      pagination: {\n        total,\n        page,\n        limit,\n        pages: Math.ceil(total / limit)\n      }\n    })\n  }\n)\n\n// Get activity summary\nactivityLogsRouter.openapi(\n  createRoute({\n    method: \"get\",\n    path: \"/summary\",\n    tags: [\"Activity Logs\"],\n    security: [{ bearerAuth: [] }],\n    description: \"Get activity summary statistics\",\n    request: {\n      query: z.object({\n        days: z.string().optional().default(\"7\")\n      })\n    },\n    responses: {\n      200: {\n        description: \"Activity summary\",\n        content: {\n          \"application/json\": {\n            schema: z.object({\n              totalActivities: z.number(),\n              userActivities: z.array(z.object({\n                userId: z.string(),\n                userName: z.string().nullable(),\n                userEmail: z.string(),\n                count: z.number()\n              })),\n              actionActivities: z.array(z.object({\n                action: z.string(),\n                count: z.number()\n              })),\n              subjectActivities: z.array(z.object({\n                subject: z.string(),\n                count: z.number()\n              })),\n              dailyActivities: z.array(z.object({\n                date: z.string(),\n                count: z.number()\n              }))\n            })\n          }\n        }\n      },\n      401: {\n        description: \"Unauthorized\"\n      },\n      403: {\n        description: \"Forbidden\"\n      }\n    }\n  }),\n  async (c) => {\n    // Check if user has permission to view logs\n    await requirePermission(SYSTEM_LOGS.action, SYSTEM_LOGS.subject)(c, async () => {})\n\n    const query = c.req.query()\n    const days = parseInt(query.days || \"7\")\n\n    // Calculate the start date\n    const startDate = new Date()\n    startDate.setDate(startDate.getDate() - days)\n\n    // Get total activities\n    const totalActivities = await prisma.activityLog.count({\n      where: {\n        createdAt: {\n          gte: startDate\n        }\n      }\n    })\n\n    // Get user activities\n    const userActivities = await prisma.$queryRaw`\n      SELECT \n        \"userId\", \n        u.name as \"userName\", \n        u.email as \"userEmail\", \n        COUNT(*) as count \n      FROM \"ActivityLog\" a\n      JOIN \"User\" u ON a.\"userId\" = u.id\n      WHERE a.\"createdAt\" >= ${startDate}\n      GROUP BY \"userId\", u.name, u.email\n      ORDER BY count DESC\n      LIMIT 10\n    `\n\n    // Get action activities\n    const actionActivities = await prisma.$queryRaw`\n      SELECT \n        action, \n        COUNT(*) as count \n      FROM \"ActivityLog\"\n      WHERE \"createdAt\" >= ${startDate}\n      GROUP BY action\n      ORDER BY count DESC\n      LIMIT 10\n    `\n\n    // Get subject activities\n    const subjectActivities = await prisma.$queryRaw`\n      SELECT \n        subject, \n        COUNT(*) as count \n      FROM \"ActivityLog\"\n      WHERE \"createdAt\" >= ${startDate}\n      GROUP BY subject\n      ORDER BY count DESC\n      LIMIT 10\n    `\n\n    // Get daily activities\n    const dailyActivities = await prisma.$queryRaw`\n      SELECT \n        DATE_TRUNC('day', \"createdAt\") as date, \n        COUNT(*) as count \n      FROM \"ActivityLog\"\n      WHERE \"createdAt\" >= ${startDate}\n      GROUP BY DATE_TRUNC('day', \"createdAt\")\n      ORDER BY date\n    `\n\n    return c.json({\n      totalActivities,\n      userActivities,\n      actionActivities,\n      subjectActivities,\n      dailyActivities\n    })\n  }\n)\n\nexport default activityLogsRouter\n"],"mappings":"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","names":["config","dotenv","exports","module","Math","undefined","crypto","C","Hex","j","hash","exports","module","exports","module","C","M","H","b","d","raw","j","redis","redis2","__defProp","__export","config","x","id","k","op","Hex","sha1","config","config","t","r","exports","PrismaClientKnownRequestError","PrismaClientUnknownRequestError","PrismaClientRustPanicError","PrismaClientInitializationError","PrismaClientValidationError","getPrismaClient","sqltag","empty","join","raw","skip","Decimal","Debug","objectEnumValues","makeStrictEnum","Extensions","warnOnce","defineDmmfProperty","Public","getRuntime","createParam","config","warnEnvConflicts","exports","module","require_default","exports","module","rp","up","import_hono","import_logger","import_zod_openapi","AuthErrorCode","status","body","crypto","config","config","redisService","config","redisService","import_jose","timestamp","textEncoder","jwtSecret","config","refreshSecret","import_http_exception","UserRole","config","to","config","import_http_exception","config","import_crypto","defaultOptions","generateToken","crypto","config","newToken","config","import_zod_openapi","import_http_exception","import_bcryptjs","bcrypt","hashedPassword","import_zod_openapi","import_http_exception","id","import_hono","import_http_exception","id","metadata","skip","import_zod_validator","import_zod","metadataSchema","id","metadata","import_hono","import_hono","import_zod_validator","id","id","metadata","metadata","id","winston","timestamp","metadata","config","memoryCache","adminRouter","memoryCache","id","import_zod_openapi","import_zod","import_zod","redis","Redis","window","rateLimit","config","id","import_zod_openapi","import_zod","id","rp","import_zod_openapi","import_zod","dp","hasPermission","import_zod_openapi","import_zod","id","import_zod_openapi","import_zod","skip","id","config","rateLimit"]}